#!/bin/bash
:; for v in "${@//!/!1}" ; do v=${v// /!0} ; v=${v//	/!+}; a[++n]=${v:-!.} ; done ; SCAM_ARGS=${a[*]} exec make --no-print-directory -f"$0"


define ///build.min
# compiled from build.scm
# Requires: core io parse compile gen runtime
# Requires: scam-ct
# Exports: build|~build prefix-of|#,!1.,sym:name;L.3995:S.3996@subst:S.3998@name:Q.4000@!4.:L.4003@S.4004!40global-name@S.4006!40sym exe-rules|~exe-rules mmap-rules|~mmap-rules mmap-all-deps|~mmap-all-deps mmap-all-requires|~mmap-all-requires link-rule|~link-rule test-rule|~test-rule compile-rule|~compile-rule rule|~rule scan-modules|~scan-modules scan-deps|~scan-deps if-bundled|~if-bundled if-bound|~if-bound if-exists|~if-exists mmap-okfiles|#,!1.,mmap:names;L.1856:S.1857@addsuffix:Q.1859@.ok:L.1863@S.1864!40mmap-objects@S.1866!40mmap@L.1868!40S.1869!50mmap-testmods!40S.1871!50mmap!40S.1873!50names mmap-testmods|#,!1.,mmap:names;L.1822:S.1823@foreach:S.1825@m:S.1827@names:L.1829@S.1830!40mod-testmod@L.1832!40S.1833!50assoc!40S.1835!50m!40S.1837!50mmap mmap-minfiles|#,!1.,mmap:names;L.1792:S.1793@filter-out:Q.1795@///%:L.1799@S.1800!40mmap-objects@S.1802!40mmap@S.1804!40names mmap-objects|#,!1.,mmap:names;L.1758:S.1759@foreach:S.1761@m:S.1763@names:L.1765@S.1766!40mod-object@L.1768!40S.1769!50assoc!40S.1771!50m!40S.1773!50mmap mmap-add|#,!1.,mmap:modname:source:object:testmod:requires:uses:is-boot;L.1719:S.1720@cons:L.1722@S!40vector@S.1723!40modname@S.1725!40source@S.1727!40object@S.1729!40testmod@S.1731!40requires@S.1733!40uses@S.1735!40is-boot:S.1738@mmap mod-deps|#,!1.,mod;L.1678:S.1679@promote:L.1681@S.1682!40wordlist@Q.1684!405@Q.1686!406@S.1688!40mod mod-is-boot|#,!1.,mod;L.1658:S.1659@nth:Q.1661@7:S.1663@mod mod-uses|#,!1.,mod;L.1639:S.1640@nth:Q.1642@6:S.1644@mod mod-requires|#,!1.,mod;L.1620:S.1621@nth:Q.1623@5:S.1625@mod mod-testmod|#,!1.,mod;L.1601:S.1602@nth:Q.1604@4:S.1606@mod mod-object|#,!1.,mod;L.1582:S.1583@nth:Q.1585@3:S.1587@mod mod-source|#,!1.,mod;L.1563:S.1564@nth:Q.1566@2:S.1568@mod mod-name|#,!1.,mod;L.1544:S.1545@nth:Q.1547@1:S.1549@mod strip-comments|~strip-comments scan-object|~scan-object scan-source|~scan-source echo-cmd|~echo-cmd *quiet*!V~*quiet* *self*!V~*self* link|~link epilogue|#,!1.,main-mod:main-func:rt;L.861:S.862@concat:Q.864@$(eval!40$(value!40:L.875@S.876!40bundle-var@S.878!40rt:Q.881@))!n:Q.887@$(call!40^start!a:L.896@S.897!40bundle-var@S.899!40main-mod:Q.902@!a:S.906@main-func:Q.908@!a$(SCAM_ARGS))!n prologue!=M,Q.831;#!3/bin/bash!n!c!b:for:v:in:"${!e//!3/!4}":!b:do:v=${v//:/@}:!b:v=${v//!2+/!3+}!b:a[++n]=${v!c-!3.}:!b:done:!b:SCAM_ARGS=${a[*]}:exec:make:--no-print-directory:-f"$0"!n!n,!1. read-object|~read-object bundle-var|#,!1.,file;L.761:S.762@concat:S.764@bundle-dir:L.766@S.767!40notdir@S.769!40file bundled?|#,!1.,path;L.727:S.728@filter:L.730@S.731!40concat@S.733!40bundle-dir@Q.735!40%:S.740@path bundle-path|#,!1.,source;L.695:S.696@concat:S.698@bundle-dir:L.700@S.701!40modnames-of@S.703!40source:Q.706@.min bundle-dir!=M,Q.673;///,!1. modnames-of|~modnames-of,p strip-comments|~strip-comments skip-comments|~skip-comments traverse-graph|~traverse-graph dbg-print|~dbg-print resolve-mod|~resolve-mod clean-path|#,!1.,f;L.303:S.304@patsubst:Q.306@./%:Q.310@%:L.314@S.315!40subst@Q.317!40/./@Q.321!40/@S.325!40f filtersub|~filtersub,p resolve|~resolve! base-env!V~base-env! builtin-argc|~builtin-argc! env-rewind|~env-rewind! env-rewind-x|~env-rewind-x! use-module|~use-module! require-module|~require-module! env-export|~env-export! import-binding|~import-binding! check-argc|~check-argc! check-type|~check-type! compile-warn|~compile-warn! gen-error|~gen-error! env-rewind-M|~env-rewind-M! after|~after! gensym|~gensym! gensym-name|~gensym-name! gen-global-name|~gen-global-name! *compile-mods*!V~*compile-mods*! *compile-outfile*!V~*compile-outfile*! *compile-file*!V~*compile-file*! *compile-subject*!V~*compile-subject*! compile-file|~compile-file! construct-file|#,icompile,infile:exports:exe:reqs:uses;L.605:S.606@concat:Q.608@#!40compiled!40from!40:S.617@infile:Q.619@!n:L.623@S.624!40if@S.626!40reqs@L.628!40S.629!50concat!40Q.631!50#!510Requires!c!510!40S.638!50reqs!40Q.640!50!n:L.646@S.647!40if@S.649!40uses@L.651!40S.652!50concat!40Q.654!50#!510Requires!c!510!40S.661!50uses!40Q.663!50!n:S.669@exports:S.671@exe compile-prelude|~compile-prelude! compile-text|~compile-text! ct-mod!=M,Q.283;scam-ct,icompile rt-mod!=M,Q.266;runtime,icompile parse-text|~parse-text! parse-subject|~parse-subject! describe-error|~describe-error! describe-lnum|~describe-lnum! parse-exp|~parse-exp! parse-exp|~parse-exp! find-word|~find-word! pdec|~pdec! penc|~penc! format-form|~format-form! symbol-to-string|~symbol-to-string,iparse,form;L.650:S.651@concat:Q.653@Q!40:L.658@S.659!40word@Q.661!402@S.663!40form symbol-name|~symbol-name,iparse,form;L.552:S.553@nth:Q.555@2:S.557@form string-value|~string-value,iparse,form;L.531:S.532@nth:Q.534@2:S.536@form form-assert|~form-assert! format-form|~format-form! form-index|~form-index! form-typename|~form-typename! form-types!V~form-types! sunquoted?|#,iparse,form;L.275:S.276@type?:Q.278@!e%:S.282@form unquoted?|#,iparse,form;L.252:S.253@type?:Q.255@!a%:S.260@form qquoted?|#,iparse,form;L.229:S.230@type?:Q.232@`%:S.237@form quoted?|#,iparse,form;L.206:S.207@type?:Q.209@'%:S.214@form error?|#,iparse,form;L.184:S.185@type?:Q.187@E%:S.191@form list?|#,iparse,form;L.162:S.163@type?:Q.165@L%:S.169@form string?|#,iparse,form;L.140:S.141@type?:Q.143@Q%:S.147@form symbol?|#,iparse,form;L.118:S.119@type?:Q.121@S%:S.125@form file-exists?|~file-exists?! read-lines|~read-lines! read-file|~read-file! write-file|~write-file! getline|~getline! shell!1|~shell!2! printn|~printn! echo-command|~echo-command! quote-sh-arg|~quote-sh-arg! xshell|~xshell! SCAM_DEBUG!VSCAM_DEBUG! assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
$(call ^require,io)
$(call ^require,parse)
$(call ^require,compile)
$(call ^require,gen)
~filtersub = $(patsubst $1,$2,$(filter $1,$3))
~resolve-mod = $(patsubst ./%,%,$(subst /./,/,$(dir $1)$2$(suffix $1)))
~dbg-print = $(and $(if $(findstring $1,$(value SCAM_DEBUG)),$(call ~printf,$2,$3))1,$3)
~traverse-graph = $(if $(call ^u,$(word 1,$1)),$(call ~cons,$(call ^u,$(word 1,$1)),$(call ~traverse-graph,$(call ~append,$(wordlist 2,99999999,$1),$(filter-out $(call ~append,$1,$3),$(call ^Y,$(call ^u,$(word 1,$1)),,,,,,,,,$2))),$2,$(call ~append,$(call ^u,$(word 1,$1)),$3))))
define ~skip-comments
$(if $(or $(and $1,$(if $(call ^u,$(word 1,$1)),,1)),$(filter #%,$(word 1,$(call ^u,$(word 1,$1))))),$(call ~skip-comments,$(wordlist 2,99999999,$1)),$1)
endef
define ~strip-comments
$(call ~concat-vec,$(call ~skip-comments,$(call ~split,
,$1)),
)
endef
~modnames-of = $(basename $(notdir $1))
~read-object = $(if $(filter ///%,$1),$(value ///$(notdir $1)),$(call ~read-file,$1))
define ~link
$(and $(call ~write-file,$1,#!/bin/bash
:; for v in "$${@//!/!1}" ; do v=$${v// /!0} ; v=$${v//	/!+}; a[++n]=$${v:-!.} ; done ; SCAM_ARGS=$${a[*]} exec make --no-print-directory -f"$$0"

$(foreach obj,$2,
$ define ///$(notdir $(call ~promote,$(obj)))
$(call ^Y,$(call ~read-object,$(call ~promote,$(obj))),,,,,,,,,$(if $5,$(value ~identity),$(value ~strip-comments)))
$ endef
)$$(eval $$(value ///$(notdir $4)))
$$(call ^start,///$(notdir $3),$(call ~gen-global-name,main),$$(SCAM_ARGS))
)1,$(shell chmod +x $(call ~quote-sh-arg,$1)))
endef
~*self* := $(firstword $(MAKEFILE_LIST))
~*quiet* := $(if $(if $(filter-out u%,$(flavor _@)),1),$(value _@),@)
~echo-cmd = $(subst $$,$$$$,@ echo $(call ~quote-sh-arg,$(call ~concat-vec,$(^av))))
~scan-source = $(call ^Y,$(shell sed -E 's/ //g;s/^\$[(require|use)"([^"]*)".*|.*/\1\2/g;/../!d' $(call ~quote-sh-arg,$1)),,,,,,,,,$$(filter-out !.,$$(foreach symbol,require% use%,$$(call ~demote,$$(foreach w,$$(call ~filtersub,$$(symbol),%,$$1),$$(call ~demote,$$(call ~resolve-mod,$(call ^e,$1),$$w)))))))
define ~scan-object
$(call ^Y,$(wordlist 1,4,$(call ~split,
,$(call ~read-object,$1))),,,,,,,,,$$(foreach key,Requires Uses,$$(call ^d,$$(foreach m,$$(call ~promote,$$(call ~filtersub,$$(call ^d,# $$(key): %),%,$$1)),$$(call ~resolve-mod,$(call ^e,$1),$$m)))))
endef
define ~strip-comments
$(call ~concat-vec,$(call ~skip-comments,$(call ~split,
,$1)),
)
endef
~if-exists = $(wildcard $1)
~if-bound = $(if $(if $(filter-out u%,$(flavor $1)),1),$1)
~if-bundled = $(call ~if-bound,///$(call ~modnames-of,$1).min)
~scan-deps = $(if $1,$(call ~scan-source,$1),$(call ~scan-object,$2))
~scan-modules = $(if $(if $(call ^u,$(word 1,$2)),,1),$3,$(if $(call ~assoc-initial,$(subst !,!1,$(call ^d,$(call ~modnames-of,$(call ^u,$(word 1,$2))))),$3),$(call ~scan-modules,$1,$(wordlist 2,99999999,$2),$3),$(call ^Y,$1,$(wordlist 2,99999999,$2),$3,$(call ~modnames-of,$(call ^u,$(word 1,$2))),$(call ~if-exists,$(filter %.scm,$(call ^u,$(word 1,$2)))),$(or $(if $(call ~if-exists,$(filter %.scm,$(call ^u,$(word 1,$2)))),$(call ~hash-get,odir,$1)$(call ~modnames-of,$(call ^u,$(word 1,$2))).min),$(call ~if-exists,$(call ^u,$(word 1,$2))),$(call ~if-exists,$(basename $(call ^u,$(word 1,$2))).min),$(if $(call ~hash-get,rebundle,$1),$(call ~if-bundled,$(call ^u,$(word 1,$2)))),$(call ^u,$(word 1,$2))),$(call ~scan-deps,$(call ~if-exists,$(filter %.scm,$(call ^u,$(word 1,$2)))),$(or $(if $(call ~if-exists,$(filter %.scm,$(call ^u,$(word 1,$2)))),$(call ~hash-get,odir,$1)$(call ~modnames-of,$(call ^u,$(word 1,$2))).min),$(call ~if-exists,$(call ^u,$(word 1,$2))),$(call ~if-exists,$(basename $(call ^u,$(word 1,$2))).min),$(if $(call ~hash-get,rebundle,$1),$(call ~if-bundled,$(call ^u,$(word 1,$2)))),$(call ^u,$(word 1,$2)))),,,$$(call ~scan-modules,$$1,$$(call ~append,$$2,$$(call ~promote,$$7),$$(call ~if-exists,$$(patsubst %.scm,%-q.scm,$$5))),$$(call ~cons,$$(call ^d,$$4) $$(call ^d,$$5) $$(call ^d,$$6) $$(call ^d,$$(call ~modnames-of,$$(call ~if-exists,$$(patsubst %.scm,%-q.scm,$$5)))) $$(call ^d,$$(call ~modnames-of,$$(call ~append,$$(call ~nth,1,$$7),$$(if $$(call ~hash-get,boot,$$1),,runtime.scm)))) $$(call ^d,$$(call ~modnames-of,$$(call ~append,$$(call ~nth,2,$$7),$$(if $$(call ~hash-get,boot,$$1),,scam-ct.scm)))) $$(call ^d,$$(call ~hash-get,boot,$$1)),$$3)))))
define ~rule
$1: $2$(if $3, | )$3$(call ~concat-vec,$(call ~cons,,$(foreach cmd&,$4,$(call ^d,$(if $(filter @%,$(word 1,$(call ^u,$(cmd&)))),$(call ^u,$(cmd&)),$(~*quiet*)$(call ^u,$(cmd&)))))),
	)


endef
~compile-rule = $(call ~rule,$1,$(call ~append,$2,$3,$(~*self*)),$4,$(call ^d,@ true $(call ^Y,$2,$5,$6,$7,$8,,,,,$$$$(and $$$$(info => compiling $(call ^e,$1,2))1,$$$$(call ~compile-file,$$(call ^e,$$1),$(call ^e,$1,2),$$(call ^e,$$5),$$(call ^e,$$2),$$(call ^e,$$3),$$(call ^e,$$4))))))
~test-rule = $(call ~rule,$1,$2,,$(call ^d,$(call ~echo-cmd,=> running ,$(basename $2))) $(call ^d,$(MAKE) -s -f $(if $(filter ///%,$3),$(call ~quote-sh-arg,$(~*self*)),$3) SCAM_MAIN='$(patsubst %.min,%,$2)' SCAM_MODS='$4') $(call ^d,touch $1))
~link-rule = $(call ~rule,$1,$2,$3,$(call ^d,@ true $(call ^Y,$(call ~sort-by,$$(notdir $$1),$4),$(call ~modnames-of,$(call ^u,$(word 1,$4))),,,,,,,,$$$$(and $$$$(info => linking $(call ^e,$1,2))1,$$$$(call ~link,$(call ^e,$1,2),$$(call ^e,$$1),$$(call ^e,$$2),$(call ^e,$5,2),$(call ^e,$6,2))))))
~mmap-all-requires = $(call ^set,~*mmap*,$(call ^set,~*mmap*,$1,$(~*mmap*)),$(call ~traverse-graph,$2,$$(call ~nth,5,$$(call ~assoc-initial,$$(subst !,!1,$$(call ^d,$$1)),$$(~*mmap*))),))
~mmap-all-deps = $(call ^set,~*mmap*,$(call ^set,~*mmap*,$1,$(~*mmap*)),$(call ~traverse-graph,$2,$$(call ~promote,$$(wordlist 5,6,$$(call ~assoc-initial,$$(subst !,!1,$$(call ^d,$$1)),$$(~*mmap*)))),))
~mmap-rules = $(call ~concat-vec,$(filter-out !.,$(foreach mod&,$1,$(call ^d,$(if $(call ~nth,2,$(call ^u,$(mod&))),$(if $(filter %.min,$(call ~nth,3,$(call ^u,$(mod&)))),$(call ~compile-rule,$(call ~nth,3,$(call ^u,$(mod&))),$(call ~nth,2,$(call ^u,$(mod&))),$(filter-out ///%,$(foreach m,$(call ~promote,$(wordlist 5,6,$(call ^u,$(mod&)))),$(call ~nth,3,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1)))),$(filter-out $(call ~nth,3,$(call ^u,$(mod&))).ok,$(addsuffix .ok,$(foreach m,$(foreach m,$(call ~promote,$(wordlist 5,6,$(call ^u,$(mod&)))),$(call ~nth,4,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1))),$(call ~nth,3,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1))))),$(filter-out ///%,$(foreach m,$(call ~mmap-all-deps,$1,$(call ~promote,$(wordlist 5,6,$(call ^u,$(mod&))))),$(call ~nth,3,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1)))),$(call ~nth,5,$(call ^u,$(mod&))),$(call ~nth,6,$(call ^u,$(mod&))),$(call ~nth,7,$(call ^u,$(mod&))))))$(if $(call ~nth,4,$(call ^u,$(mod&))),$(call ~test-rule,$(addsuffix .ok,$(filter-out ///%,$(foreach m,$(call ~nth,4,$(call ^u,$(mod&))),$(call ~nth,3,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1))))),$(filter-out ///%,$(foreach m,$(call ~nth,4,$(call ^u,$(mod&))),$(call ~nth,3,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1)))),$2,$(filter-out ///%,$(foreach m,$(call ~mmap-all-requires,$1,$(call ^d,$(call ~nth,4,$(call ^u,$(mod&))))),$(call ~nth,3,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1))))))))),)
~exe-rules = $(call ^Y,$(call ~scan-modules,$(call ~append,$(call ~hash-bind,odir,$(dir $1)),$(call ~hash-bind,rebundle,$(if $(call ~eq,~apply,~apply),1,$(if $4,,$(error Warning: must use --boot; bundles are unusable))))),$(call ~append,$2,$(if $(if $3,,1),$(subst %,trace,$(if $4,%.scm,///%.min))),$(if $4,$(subst %,scam-ct,$(if $4,%.scm,///%.min)))),$(call ~scan-modules,$(call ~hash-bind,boot,1,$(call ~append,$(call ~hash-bind,odir,$(dir $1)),$(call ~hash-bind,rebundle,$(if $(call ~eq,~apply,~apply),1,$(if $4,,$(error Warning: must use --boot; bundles are unusable)))))),$(call ^d,$(subst %,runtime,$(if $4,%.scm,///%.min))) $(call ^d,$(subst %,scam-ct,$(if $4,%.scm,///%.min))))),$(notdir $(basename $(call ~append,$2,$(if $(if $3,,1),$(subst %,trace,$(if $4,%.scm,///%.min))),$(if $4,$(subst %,scam-ct,$(if $4,%.scm,///%.min)))))),,,,,,,,$$(call ~link-rule,$(call ^e,$1),$$(filter-out ///%,$$(foreach m,$$2,$$(call ~nth,3,$$(call ~assoc-initial,$$(subst !,!1,$$(call ^d,$$m)),$$1)))),$$(addsuffix .ok,$$(foreach m,$$(foreach m,$$2,$$(call ~nth,4,$$(call ~assoc-initial,$$(subst !,!1,$$(call ^d,$$m)),$$1))),$$(call ~nth,3,$$(call ~assoc-initial,$$(subst !,!1,$$(call ^d,$$m)),$$1)))),$$(foreach m,$$(call ~mmap-all-requires,$$1,$$2),$$(call ~nth,3,$$(call ~assoc-initial,$$(subst !,!1,$$(call ^d,$$m)),$$1))),$$(foreach m,runtime,$$(call ~nth,3,$$(call ~assoc-initial,$$(subst !,!1,$$(call ^d,$$m)),$$1))),$(call ^e,$5))$$(call ~mmap-rules,$$1,$$(foreach m,runtime,$$(call ~nth,3,$$(call ~assoc-initial,$$(subst !,!1,$$(call ^d,$$m)),$$1)))))
~build = $(eval $(call ~dbg-print,B,Eval: %s,$(call ~rule,.PHONY,,/exe /dir)$(call ~rule,/exe,,/dir $(call ^d,$1))$(call ~rule,/dir,,,$(call ^d,mkdir -p $$(dir $(call ^e,$1))))$(call ~exe-rules,$1,$2,$(call ~hash-get,no-trace,$3),$(call ~hash-get,boot,$3),$(call ~hash-get,symbols,$3))))

endef
 
define ///compile.min
# compiled from compile.scm
# Requires: core parse gen gen0 gen1 io macros runtime
# Requires: scam-ct
# Exports: compile-file|~compile-file construct-file|#,!1.,infile:exports:exe:reqs:uses;L.605:S.606@concat:Q.608@#!40compiled!40from!40:S.617@infile:Q.619@!n:L.623@S.624!40if@S.626!40reqs@L.628!40S.629!50concat!40Q.631!50#!510Requires!c!510!40S.638!50reqs!40Q.640!50!n:L.646@S.647!40if@S.649!40uses@L.651!40S.652!50concat!40Q.654!50#!510Requires!c!510!40S.661!50uses!40Q.663!50!n:S.669@exports:S.671@exe compile-prelude|~compile-prelude compile-text|~compile-text ct-mod!=M,Q.283;scam-ct,!1. rt-mod!=M,Q.266;runtime,!1. file-exists?|~file-exists?! read-lines|~read-lines! read-file|~read-file! write-file|~write-file! getline|~getline! shell!1|~shell!2! printn|~printn! echo-command|~echo-command! quote-sh-arg|~quote-sh-arg! xshell|~xshell! SCAM_DEBUG!VSCAM_DEBUG! gen1|~gen1! c1-file|~c1-file! c1-file*|~c1-file*! c1-file|~c1-file! c1-fset|~c1-fset! c1-set|~c1-set! c1|~c1! c1-Q|#,igen1,node;L.1653:S.1654@subst:Q.1656@$:Q.1660@$$:L.1664@S.1665!40nth@Q.1667!402@S.1669!40node c1-X|~c1-X! c1-V|~c1-V! c1-B|~c1-B! c1-Y|~c1-Y! c1-f|~c1-f! c1-args9|~c1-args9! c1-F|~c1-F! il-vector|~il-vector! c1-E|~c1-E! c1-vec|~c1-vec! c1-arg-trim|~c1-arg-trim! c1-arg|~c1-arg! c1|~c1! one-char-names!V~one-char-names! voidify|#,igen1,e;L.561:S.562@if:L.564@S.565!40void-node?@S.567!40e@L.569!40S.570!50il-funcname!40S.572!50e:S.576@e:L.578@S!40vector@Q.579!40F@Q.583!40if@S.587!40e@L.589!40S!50vector!40Q.590!50Q!40Q.594!50!51. void-node?|#,igen1,node:name;L.520:S.521@define:`.523@S.524!40void-names:Q.526@error!40eval!40info!40^require;L.538:S.539@filter:S.541@void-names:S.543@name il-user-args|#,igen1,node;L.466:S.467@nth-rest:L.469@S.470!40if@L.472!40S.473!50type?!40Q.475!50F!40S.479!50node@Q.482!404@Q.484!403:S.487@node il-funcname|~il-funcname! gen-extract|~gen-extract! gen-embed|~gen-embed! gen-escape-lambda|~gen-escape-lambda! gen-escape-literal|~gen-escape-literal! marker!=M,Q.85;($),igen1 gen0|~gen0! c0|~c0! c0-error|~c0-error! c0-mq|~c0-mq! c0-mq-list|~c0-mq-list! c0-mq-node|~c0-mq-node! c0-mq-vec|~c0-mq-vec! il-qmerge|~il-qmerge! il-foldcat|~il-foldcat! il-demote|~il-demote! c0-mq|~c0-mq! lambda-env|~lambda-env! c0-block|~c0-block! c0-block-cc|~c0-block-cc! ml.special-require|~ml.special-require! ml.special-declare|~ml.special-declare! ml.special-define|~ml.special-define! c0-declare-define|~c0-declare-define! bind-sym|~bind-sym! check-name|~check-name! collect-flags|~collect-flags! special-form-func|#,igen0,name;L.1231:S.1232@local-to-global:L.1234@S.1235!40concat@Q.1237!40ml.special-@S.1241!40name c0-inline-fn|~c0-inline-fn! c0-vec|~c0-vec! c0-local|~c0-local! c0-block|~c0-block! c0|~c0! resolve|~resolve! base-env!V~base-env! builtin-argc|~builtin-argc! env-rewind|~env-rewind! env-rewind-x|~env-rewind-x! use-module|~use-module! require-module|~require-module! env-export|~env-export! import-binding|~import-binding! check-argc|~check-argc! check-type|~check-type! compile-warn|~compile-warn! gen-error|~gen-error! env-rewind-M|~env-rewind-M! after|~after! gensym|~gensym! gensym-name|~gensym-name! gen-global-name|~gen-global-name! *compile-mods*!V~*compile-mods*! *compile-outfile*!V~*compile-outfile*! *compile-file*!V~*compile-file*! *compile-subject*!V~*compile-subject*! parse-text|~parse-text! parse-subject|~parse-subject! describe-error|~describe-error! describe-lnum|~describe-lnum! parse-exp|~parse-exp! parse-exp|~parse-exp! find-word|~find-word! pdec|~pdec! penc|~penc! format-form|~format-form! symbol-to-string|~symbol-to-string,iparse,form;L.650:S.651@concat:Q.653@Q!40:L.658@S.659!40word@Q.661!402@S.663!40form symbol-name|~symbol-name,iparse,form;L.552:S.553@nth:Q.555@2:S.557@form string-value|~string-value,iparse,form;L.531:S.532@nth:Q.534@2:S.536@form form-assert|~form-assert! format-form|~format-form! form-index|~form-index! form-typename|~form-typename! form-types!V~form-types! sunquoted?|#,iparse,form;L.275:S.276@type?:Q.278@!e%:S.282@form unquoted?|#,iparse,form;L.252:S.253@type?:Q.255@!a%:S.260@form qquoted?|#,iparse,form;L.229:S.230@type?:Q.232@`%:S.237@form quoted?|#,iparse,form;L.206:S.207@type?:Q.209@'%:S.214@form error?|#,iparse,form;L.184:S.185@type?:Q.187@E%:S.191@form list?|#,iparse,form;L.162:S.163@type?:Q.165@L%:S.169@form string?|#,iparse,form;L.140:S.141@type?:Q.143@Q%:S.147@form symbol?|#,iparse,form;L.118:S.119@type?:Q.121@S%:S.125@form assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
$(call ^require,parse)
$(call ^require,gen)
$(call ^require,gen0)
$(call ^require,gen1)
$(call ^require,io)
$(if $(if 1,$(call ^require,macros)),)
~compile-text = $(call ^set,~*compile-subject*,$(call ^set,~*compile-subject*,$(call ~penc,$1),$(~*compile-subject*)),$(call ^set,~*compile-file*,$(call ^set,~*compile-file*,$3,$(~*compile-file*)),$(call ^set,~*compile-outfile*,$(call ^set,~*compile-outfile*,$4,$(~*compile-outfile*)),$(call ~c0-block-cc,$(call ~parse-subject,$(~*compile-subject*)),$(or $2,$(~base-env)),$(if $4,$$(call ~append,$$(call ~gen1,$$1,1),$$(call ^d,$$(call ~env-export,$$2))),$$(call ~append,$$(call ~gen1,$$1),$$(call ^d,$$2)))))))
~compile-prelude = $(and $(foreach r,$(~*compile-mods*),$(if $(filter runtime,$(notdir $(basename $r))),$(eval include $r)))1,$(if $(if $1,,1),$(call ~append,$(call ~require-module,runtime,),$(call ~use-module,scam-ct))))
define ~compile-file
$(call ^set,~*compile-mods*,$(call ^set,~*compile-mods*,$4,$(~*compile-mods*)),$(call ^Y,$(call ~read-file,$1),$2,$(call ~compile-prelude,$3),,,,,,,$$(call ^Y,$$(call ~compile-text,$$1,$$(wordlist 2,99999999,$$3),$(call ^e,$1),$$2),$$1,$(call ^e,$1),$$2,,,,,,$$$$(if $$$$(call ^u,$$$$(word 1,$$$$1)),$$$$(and $$$$(foreach e&,$$$$(call ^u,$$$$(word 1,$$$$1)),$$$$(call ^d,$$$$(info $$$$(call ~describe-error,$$$$(call ^u,$$$$(e&)),$$$$2,$$$$3))))1,$$$$(error error compiling SCAM)),$$$$(call ~write-file,$$$$4,# compiled from $$$$3
$$$$(if $(call ^e,$5,2),# Requires: $(call ^e,$5,2)
)$$$$(if $(call ^e,$6,2),# Requires: $(call ^e,$6,2)
)$$$$(call ~nth,3,$$$$1)$$$$(call ~nth,2,$$$$1))))))
endef

endef
 
define ///core.min
# compiled from core.scm
# Requires: runtime
# Requires: scam-ct
# Exports: assoc|#,!1.,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,!1.,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial type?|#,!1.,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by memoize|~memoize memoenc|~memoenc,p mcache|~mcache,p 1+|~1+ split|~split uniq|~uniq see|~see expect|#,!1.,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x printf|~printf sprintf|~sprintf vsprintf|~vsprintf format|~format hash-compact|~hash-compact hash-get|~hash-get hash-find|~hash-find hash-value|~hash-value,!1.,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,!1.,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind append|~append isnumber|~isnumber while|~while reverse|~reverse rev-zeroes|~rev-zeroes,p rev-by-10s|~rev-by-10s,p indices|~indices,!1.,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX vec-or|~vec-or,!1.,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words select-vec|~select-vec map-call|~map-call butlast|~butlast last|~last,!1.,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj cons|~cons concat-vec|~concat-vec xor|~xor identity|~identity,!1.,a;S.91:a eq|~eq SCAM_DEBUG!VSCAM_DEBUG ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
~eq = $(if $(findstring 1$1,$(findstring 1$2,1$1)),1)
~identity = $1
~xor = $(if $1,$(if $2,,$1),$2)
~concat-vec = $(call ~promote,$(subst $  ,$(call ~demote,$2),$1))
~cons = $(call ~demote,$1)$(if $2, )$2
~conj = $1$(if $1, )$(call ~demote,$2)
~last = $(call ~promote,$(lastword $1))
~butlast = $(wordlist 2,$(words $1),X $1)
~map-call = $(foreach x&,$2,$(call ^d,$(call $1,$(call ^u,$(x&)))))
~select-vec = $(filter-out !,$(foreach dx,$2,$(if $(call ^Y,$(call ~promote,$(dx)),,,,,,,,,$1),$(dx),!)))
~select-words = $(foreach a,$(foreach x,$2,$(if $(call ^Y,$x,,,,,,,,,$1),$x)),$a)
~vec-or = $(call ^u,$(word 1,$(filter-out !.,$1)))
~indicesX = $(if $(word $(words $2),$1),$(words $2) $(call ~indicesX,$1,. $2))
~indices = $(call ~indicesX,$1,.,1)
~rev-by-10s = $(if $1,$(if $2,$(foreach p,10 9 8 7 6 5 4 3 2 1,$(call ~rev-by-10s,$(wordlist $(word $p,0 1 2 3 4 5 6 7 8 9)$(patsubst %0,%1,$2),$p$2,$1),$(patsubst 0%,%,$2))),$(foreach p,10 9 8 7 6 5 4 3 2 1,$(word $p,$1))))
~rev-zeroes = $(if $(word 1$21,$1),$(call ~rev-zeroes,$1,0$2),$2)
~reverse = $(wordlist 1,99999999,$(call ~rev-by-10s,$1,$(call ~rev-zeroes,$1,)))
~while-0 = $(if $(filter iiiiiiiiiiiiiiiiiiii,$4),1 $(call ^d,$3),$(if $(call ^Y,$3,,,,,,,,,$1),$(call ~while-0,$1,$2,$(call ^Y,$3,,,,,,,,,$2),i$4),0 $(call ^d,$3)))
~while-N = $(if $(filter 0,$(word 1,$3)),$3,$(if $(filter iii,$5),$(if $(filter 1,$4),$(call ~while-N,$1,$2,$3,$4 0,ii),$3),$(call ~while-N,$1,$2,$(if $4,$(call ~while-N,$1,$2,$3,$(wordlist 2,99999999,$4)),$(call ~while-0,$1,$2,$(call ~nth,2,$3))),$4,i$5)))
~while = $(if $(call ^Y,$3,,,,,,,,,$1),$(call ^Y,$(call ^Y,$3,,,,,,,,,$2),,,,,,,,,$$(call ~nth,2,$$(call ~while-N,$(call ^e,$1),$(call ^e,$2),$$(call ~while-0,$(call ^e,$1),$(call ^e,$2),$$1),1,ii))),$3)
~isnumber = $(if $(filter 0% 1% 2% 3% 4% 5% 6% 7% 8% 9%,$(subst -,,$1)),$(if $(patsubst .%,%,$(patsubst %e,%,$(subst 0,,$(patsubst -%,%,$(subst $  ,_,$(subst E0,e,$(subst E-,E,$(subst e,E,$(subst 9,0,$(subst 8,0,$(subst 7,0,$(subst 6,0,$(subst 5,0,$(subst 4,0,$(subst 3,0,$(subst 2,0,$(subst 1,0,$1))))))))))))))))),,$1))
~append = $(filter %,$1 $2 $3 $4 $5 $6 $7 $8 $(if $(value 9),$(call ~promote,$(value 9))))
~hash-bind = $(subst %,!8,$(call ^d,$1))!=$(call ^d,$2)$(if $3, )$3
~hash-key = $(call ~promote,$(subst !8,%,$(word 1,$(subst !=, ,$1))))
~hash-value = $(call ~nth,2,$(subst !=, ,$1))
~hash-find = $(word 1,$(filter $(subst %,!8,$(call ^d,$1))!=%,$2))
~hash-get = $(call ~nth,2,$(subst !=, ,$(call ~hash-find,$1,$2))$(if $3, x $(call ~demote,$3)))
~hash-compact = $(if $(if $1,,1),$2,$(call ~append,$(word 1,$1),$(call ~hash-compact,$(filter-out $(word 1,$(subst !=,!=% ,$(word 1,$1))),$(wordlist 2,99999999,$1)))))
define ~format
$(or $(if $(findstring !,$1),$(if $(call ~eq,$1,$(foreach w,$1,$(call ~demote,$(call ~promote,$w)))),[$(foreach w,$1,$(call ~format,$(call ~promote,$w)))],$(if $(findstring !=,$(word 1,$1)),{$(call ~concat-vec,$(foreach e,$1,$(call ^d,$(call ~format,$(call ~promote,$(subst !8,%,$(word 1,$(subst !=, ,$e))))): $(call ~format,$(call ~nth,2,$(subst !=, ,$e))))),$(if ,,, ))}))),$(call ~isnumber,$1),"$(subst $ 	,\t,$(subst 
,\n,$(subst ",\",$(subst \,\\,$1))))")
endef
~vsprintf = $(call ~concat-vec,$(foreach w,$(join !. $(wordlist 2,99999999,$1),$(subst $  !% !%,%,$(subst %, !%,%s$(word 1,$1)))),$(if $(findstring !%s,$w),$(subst !%s,,$w),$(if $(findstring !%q,$w),$(call ~demote,$(call ~format,$(call ^u,$(word 1,$(subst !%q, ,$w)))))$(word 2,$(subst !%q,!. ,$w)),$(if $(findstring !%,$w),$(and $(info ** Warning: bad format string: '$(call ~nth,1,$1)')1,$(word 2,$(subst !%,! %,$w))))))))
~sprintf = $(call ~vsprintf,$(^av))
~printf = $(info $(call ~vsprintf,$(^av)))
define ~expect-x
$(if $(call ~eq,$1,$2),$(if $(findstring O,$(SCAM_DEBUG)),$(info OK: $(call ~format,$1))),$(and $(info $3: error: assertion failed
A: $(call ~format,$1)
B: $(call ~format,$2)
)1,$(error )))
endef
define ~see
$(if $(findstring $1,$2),1,$(and $(info Expected: $(subst 
,
          ,$1))1,$(info $   Within: $(subst 
,
          ,$2))))
endef
~uniq-x = $(if $1,$(word 1,$1) $(call ~uniq-x,$(filter-out $(word 1,$1),$(wordlist 2,99999999,$1))))
~uniq = $(subst ~1,~,$(subst ~p,%,$(filter %,$(call ~uniq-x,$(subst %,~p,$(subst ~,~1,$1))))))
~split = $(foreach w,$(subst $(call ^d,$1),!. !.,$(call ^d,$2)),$(or $(subst !.,,$w),!.))
~1+ = $(if $(filter %1 %2 %3 %4,$1),$(subst 1~,2,$(subst 2~,3,$(subst 3~,4,$(subst 4~,5,$1~)))),$(if $(filter %5 %6 %7,$1),$(subst 5~,6,$(subst 6~,7,$(subst 7~,8,$1~))),$(if $(findstring 9~,$1~),$(call ~1+,$(or $(subst 9~,,$1~),0))0,$(patsubst %0,%1,$(patsubst %8,%9,$1)))))
~mcache = $(and $(if $6,$(info Warning: memoized function passed more than three arguments))1,$(if $(if $(if $(filter-out u%,$(flavor $1)),1),,1),$(call ~set-global,$1,$(call ^Y,$3,$4,$5,,,,,,,$2)))1,$(value $1))
~memoenc = $(if $(or $1,$2,$3),~~$(subst ~,~0,$1)$(call ~memoenc,$2,$3))
~memoize = $(if $(if $(if $(filter-out u%,$(flavor $1)),1),,1),$(info Warning: [memoize-1] function '$1' not defined.),$(call ^Y,$(value $1),*memo$(call ~memoenc,$1),$1,,,,,,,$$(call ~set-rglobal,$$3,$$$$(call ~mcache,$$(call ^e,$$2)$$$$(call ~memoenc,$$$$1,$$$$2,$$$$3),$$(call ^e,$$1),$$$$1,$$$$2,$$$$3,$$$$(or $$$$4,$$$$5,$$$$6,$$$$7,$$$$8)))))
~sort-by = $(filter-out %!!,$(subst !!,!! ,$(sort $(foreach w,$2,$(call ~demote,$(call ^Y,$(call ~promote,$w),,,,,,,,,$1))!!$w))))
~assoc-initial = $(call ~promote,$(firstword $(if $(findstring %,$1),$(subst !8,$1,$(filter !8 !8!0%,$(subst $1,!8,$2))),$(filter $1 $1!0%,$2))))

endef
 
define ///escape.min
# compiled from escape.scm
# Requires: core runtime
# Requires: scam-ct
# Exports: protect-define|~protect-define protect-rhs|~protect-rhs protect-lhs|~protect-lhs protect-expr|~protect-expr protect-arg|~protect-arg make-balanced|~make-balanced,p check-balance|~check-balance,p check-balance-r|~check-balance-r,p balance|~balance,p balance-match|~balance-match,p balance-match-r|~balance-match-r,p balance2|~balance2,p protect-trim|~protect-trim protect-ltrim|~protect-ltrim replace-hash|~replace-hash,p,str;L.398:S.399@subst:Q.401@#:Q.405@$&:S.409@str replace-nl|~replace-nl,p,str;L.369:S.370@subst:Q.372@!n:Q.376@$!5:S.380@str quote-hash|~quote-hash,p protect-hash2|~protect-hash2,p assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
define ~protect-hash2
$(if $(findstring \.#,$1),$(call ~protect-hash2,$(subst \.#,.#\\,$1)),$(subst .#,,$1))
endef
define ~quote-hash
$(if $(findstring #,$1),$(call ~protect-hash2,$(subst #,.#\#,$1)),$1)
endef
define ~replace-nl
$(subst 
,$$!,$1)
endef
define ~replace-hash
$(subst #,$$&,$1)
endef
~protect-ltrim = $(if $(findstring $1x,$(wordlist 1,99999999,$1x)),$1,$$ $1)
define ~protect-trim
$(if $(and $(findstring $1,$(wordlist 1,99999999,$1)),$(filter-out 
%,$(word 1,$1)),$(filter-out %
,$(lastword $1))),$1,$$(if ,,$1))
endef
~balance2 = $(call ~promote,$(if $(findstring !C,$1),$$(if ,,$(subst !C,,$1)),$1))
~balance-match-r = $(if $1,$(call ~balance-match-r,$(word 1,$2),$(wordlist 2,99999999,$2),$(if $(filter !L%,$1),$3 $1,$(if $(and $(filter !R,$1),$(word 2,$3)),$(filter-out %!,$3!)($(subst !L,,$(subst !C,,$(lastword $3)))),$3$1))),$3)
~balance-match = $(call ~balance-match-r,$(word 1,$1),$(wordlist 2,99999999,$1),!.)
~balance = $(call ~balance2,$(subst !L,$$[,$(subst !R,$$],$(subst $  ,,$(call ~balance-match,$(subst $[, !L,$(subst $], !R ,$(subst $(if ,,,),$(if ,,!C,),$(call ~demote,$1)))))))))
~check-balance-r = $(if $(word 2,$1),$(call ~check-balance-r,$(subst $  ,,$(filter-out !L%!R,$(subst !L, !L,$(word 1,$1))))$(wordlist 2,99999999,$1)),$1)
~check-balance = $(call ~check-balance-r,$(subst $],!R .,$(subst $[,!L,$(subst !,,$(subst $ 	,,$(subst $  ,,$1))))))
~make-balanced = $(if $(findstring !,$2),$(call ~balance,$1),$(if $(findstring $(if ,,,),$2),$$(if ,,$1),$1))
~protect-arg = $(if $(or $(findstring $[,$1),$(findstring $],$1),$(findstring $(if ,,,),$1)),$(call ~make-balanced,$1,$(call ~check-balance,$1)),$1)
define ~protect-expr
$(subst 
,$$!,$1)
endef
define ~protect-lhs
$(subst #,$$&,$(subst X,$(subst 
,$$!,$(call ~protect-arg,$1)),$(if $(or $(findstring :,$1),$(findstring =,$1),$(if $(findstring $1,$(wordlist 1,99999999,$1)),,1),$(filter ifeq ifneq ifdef ifndef else endif define endef override include sinclude -include export unexport,$1)),$$(if ,,X),X)))
endef
define ~protect-rhs
$(call ~quote-hash,$(call ~protect-ltrim,$(subst 
,$$!,$1)))
endef
define ~protect-define
$(if $(or $(findstring define,$1),$(findstring endef,$1),$(findstring \,$1)),$(call ~concat-vec,$(foreach w&,$(call ~split,
,$1),$(call ^d,$(if $(filter define endef,$(word 1,$(call ^u,$(w&)))),$$ )$(call ^u,$(w&))$(if $(filter %\,$(call ^d,$(call ^u,$(w&)))),$$ ))),
),$1)
endef

endef
 
define ///gen.min
# compiled from gen.scm
# Requires: core io parse escape runtime
# Requires: scam-ct
# Exports: resolve|~resolve base-env!V~base-env builtin-argc|~builtin-argc builtins-other!V~builtins-other,p builtins-3!V~builtins-3,p builtins-2!V~builtins-2,p builtins-1!V~builtins-1,p env-rewind|~env-rewind env-rewind-x|~env-rewind-x use-module|~use-module require-module|~require-module mod-find|~mod-find,p env-from-file|~env-from-file,p *dummy-env*!V~*dummy-env*,p env-load|#,p,filename;L.2056:S.2057@define:`.2059@L.2060!40S.2061!50read-module-lines!40S.2063!50filename:L.2066@S.2067!40if@L.2069!40S.2070!50filter!40Q.2072!50///%!40S.2076!50filename@L.2079!40S.2080!50split!40Q.2082!50!n!40L.2086!50S.2087!510value!50S.2089!510filename@L.2093!40S.2094!50read-lines!40S.2096!50filename!40Q.2098!501!40Q.2100!504;L.2106:S.2107@env-parse:L.2109@S.2110!40read-module-lines@S.2112!40filename env-parse|#,p,lines;L.2009:S.2010@env-expand:L.2012@S.2013!40first@L.2015!40S.2016!50filtersub!40L.2018!50S!510vector!50Q.2019!510#!5110Exports!c!5110%!40Q.2028!50%!40S.2032!50lines env-export|~env-export env-import|~env-import,p import-binding|~import-binding env-expand|#,p,v;L.1568:S.1569@subst:Q.1571@!5n:Q.1575@!n:Q.1579@!5!40:Q.1584@!ai!40:Q.1590@!5V:Q.1594@!5=V!a:Q.1599@!d:Q.1603@!5=F!a:Q.1608@!e:Q.1612@!530:Q.1616@!c:Q.1620@!520:Q.1624@!b:Q.1628@!510:Q.1632@!a:Q.1636@!50:Q.1640@!5e:Q.1644@!e:Q.1648@!5d:Q.1652@!d:Q.1656@!5c:Q.1660@!c:Q.1664@!5b:Q.1668@!b:Q.1672@!5a:Q.1676@!a:Q.1680@!55:Q.1684@!541:Q.1688@!54:Q.1692@!531:Q.1696@!53:Q.1700@!521:Q.1704@!52:Q.1708@!511:S.1712@v env-compress|#,p,v;L.1393:S.1394@subst:Q.1398@!511:Q.1402@!52:Q.1406@!521:Q.1410@!53:Q.1414@!531:Q.1418@!54:Q.1422@!541:Q.1426@!55:Q.1432@!a:Q.1436@!5a:Q.1440@!b:Q.1444@!5b:Q.1448@!c:Q.1452@!5c:Q.1456@!d:Q.1460@!5d:Q.1464@!e:Q.1468@!5e:Q.1474@!50:Q.1478@!a:Q.1482@!510:Q.1486@!b:Q.1490@!520:Q.1494@!c:Q.1498@!530:Q.1502@!e:Q.1508@!5=F!a:Q.1513@!d:Q.1517@!5=V!a:Q.1522@!5V:Q.1526@!ai!40:Q.1532@!5!40:Q.1539@!n:Q.1543@!5n:S.1547@v check-argc|~check-argc check-type|~check-type compile-warn|~compile-warn gen-error|~gen-error env-rewind-M|~env-rewind-M after|~after gensym|~gensym gensym-name|~gensym-name filtersub|~filtersub,p gen-global-name|~gen-global-name *compile-mods*!V~*compile-mods* *compile-outfile*!V~*compile-outfile* *compile-file*!V~*compile-file* *compile-subject*!V~*compile-subject* protect-define|~protect-define! protect-rhs|~protect-rhs! protect-lhs|~protect-lhs! protect-expr|~protect-expr! protect-arg|~protect-arg! protect-trim|~protect-trim! protect-ltrim|~protect-ltrim! parse-text|~parse-text! parse-subject|~parse-subject! describe-error|~describe-error! describe-lnum|~describe-lnum! parse-exp|~parse-exp! parse-exp|~parse-exp! find-word|~find-word! pdec|~pdec! penc|~penc! format-form|~format-form! symbol-to-string|~symbol-to-string,iparse,form;L.650:S.651@concat:Q.653@Q!40:L.658@S.659!40word@Q.661!402@S.663!40form symbol-name|~symbol-name,iparse,form;L.552:S.553@nth:Q.555@2:S.557@form string-value|~string-value,iparse,form;L.531:S.532@nth:Q.534@2:S.536@form form-assert|~form-assert! format-form|~format-form! form-index|~form-index! form-typename|~form-typename! form-types!V~form-types! sunquoted?|#,iparse,form;L.275:S.276@type?:Q.278@!e%:S.282@form unquoted?|#,iparse,form;L.252:S.253@type?:Q.255@!a%:S.260@form qquoted?|#,iparse,form;L.229:S.230@type?:Q.232@`%:S.237@form quoted?|#,iparse,form;L.206:S.207@type?:Q.209@'%:S.214@form error?|#,iparse,form;L.184:S.185@type?:Q.187@E%:S.191@form list?|#,iparse,form;L.162:S.163@type?:Q.165@L%:S.169@form string?|#,iparse,form;L.140:S.141@type?:Q.143@Q%:S.147@form symbol?|#,iparse,form;L.118:S.119@type?:Q.121@S%:S.125@form file-exists?|~file-exists?! read-lines|~read-lines! read-file|~read-file! write-file|~write-file! getline|~getline! shell!1|~shell!2! printn|~printn! echo-command|~echo-command! quote-sh-arg|~quote-sh-arg! xshell|~xshell! SCAM_DEBUG!VSCAM_DEBUG! assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
$(call ^require,io)
$(call ^require,parse)
$(call ^require,escape)
~gen-global-name = $(SCAM_NS)$1
~filtersub = $(patsubst $1,$2,$(filter $1,$3))
~gensym-name = $(if $(filter $1&$3!=%,$2),$(call ~gensym-name,$1,$2 .,$(words $2)),$1&$3)
~gensym = S $(call ~gensym-name,$(call ~nth,2,$1),$2)
~after = $(wordlist 1,999999999,$(subst !S, ,$(subst $  ,,$(wordlist 2,99999999,$(subst !S$1!S,!S$1!S ,!S$(subst $  ,!S,$2)!S)))))
~env-rewind-M = $(call ~append,$(call ~hash-find,$$,$1),$(call ~after,$(call ~hash-find,$2,$1),$1))
~gen-error = $(call ^d,E.$(call ~form-index,$1)) $(call ^d,$(call ~vsprintf,$(wordlist 2,99999999,$(^av))))
~compile-warn = $(info $(call ~describe-error,$(call ~gen-error,$1,$2,$3,$4,$5),$(call ~pdec,$(~*compile-subject*)),$(~*compile-file*)))
~check-type = $(if $(filter $(or $(patsubst %,%%,$1),%),$(word 1,$2)),,$(call ~gen-error,$(or $2,$3),$(if $2,invalid,missing) $4 in $5$(if $1,; expected a $(call ~concat-vec,$(call ~map-call,~form-typename,$1), or ))))
~check-argc = $(if $(filter-out $1,$(words $(wordlist 3,99999999,$2))),$(call ~gen-error,$(call ~nth,2,$2),$(if ,,%q accepts %s arguments, not %s),$(call ~nth,2,$(call ~nth,2,$2)),$1,$(words $(wordlist 3,99999999,$2))))
~import-binding = $(if $(if $(subst !.,,$(word 3,$2)),,1),$(call ~hash-bind,$1,$(call ~append,$(wordlist 1,2,$2),i$(if $(or $(subst !.,,$(word 4,$2)),$(filter M%,$(word 1,$2))),$3),$(wordlist 4,99999999,$2))))
~env-import = $(if $2,$1,$(filter %,$(foreach b,$1,$(call ~import-binding,$(call ~promote,$(subst !8,%,$(word 1,$(subst !=, ,$b)))),$(call ~nth,2,$(subst !=, ,$b)),$3))))
define ~env-export
# Exports: $(subst 
,!n,$(subst $(if ,,,i ),! ,$(subst $(if ,,!=V,),!V,$(subst $(if ,,!=F,),|,$(subst !30,@,$(subst !20,:,$(subst !10,;,$(subst !0,$(if ,,,),$(subst @,!e,$(subst |,!d,$(subst :,!c,$(subst ;,!b,$(subst $(if ,,,),!a,$(subst !41,!5,$(subst !31,!4,$(subst !21,!3,$(subst !11,!2,$1)))))))))))))))))

endef
~*dummy-env* := $(call ~hash-bind,,I Q 1)
define ~env-from-file
$(if $1,$(or $(call ~env-import,$(subst !2,!11,$(subst !3,!21,$(subst !4,!31,$(subst !5,!41,$(subst !a,$(if ,,,),$(subst !b,;,$(subst !c,:,$(subst !d,|,$(subst !e,@,$(subst $(if ,,,),!0,$(subst ;,!10,$(subst :,!20,$(subst @,!30,$(subst |,$(if ,,!=F,),$(subst !V,$(if ,,!=V,),$(subst ! ,$(if ,,,i ),$(subst !n,
,$(call ^u,$(word 1,$(call ~filtersub,#!0Exports:!0%,%,$(if $(filter ///%,$1),$(call ~split,
,$(value $1)),$(call ~read-lines,$1,1,4)))))))))))))))))))))),$2,$(call ^d,$(notdir $(basename $1)))),$(~*dummy-env*)))
endef
$(if $(call ~memoize,~env-from-file),)
~mod-find = $(or $(firstword $(filter %$(notdir $1).min,$(~*compile-mods*))),$(if $(and $(if $(filter %/runtime.min,$(~*compile-mods*)),,1),$(if $(filter-out u%,$(flavor ///$(notdir $1).min)),1)),///$(notdir $1).min,$(info warning: cannot find module $1)))
~require-module = $(call ~env-from-file,$(call ~mod-find,$1),$2)
~use-module = $(call ^Y,$(call ~require-module,$1,),,,,,,,,,$$(if $$1,$$(call ^set,SCAM_MODS,$$(call ^set,SCAM_MODS,$$(~*compile-mods*),$$(SCAM_MODS)),$$(and $$(call ^require,$(call ^e,$1))1,$$(or $$(filter %,$$(foreach e,$$1,$$(if $$(filter X,$$(word 1,$$(call ~nth,2,$$(subst !=, ,$$e)))),$$e))),$$(~*dummy-env*))))))
~env-rewind-x = $(call ^Y,$(call ~hash-find,$2,$1),$1,$2,,,,,,,$$(if $$(call ~filtersub,i%,%,$$(word 3,$$(call ~nth,2,$$(subst !=, ,$$1)))),$$(call ~env-rewind-x,$$(call ~require-module,$$(call ~promote,$$(call ~filtersub,i%,%,$$(word 3,$$(call ~nth,2,$$(subst !=, ,$$1))))),1),$$3),$$(call ~after,$$1,$$2)))
define ~env-rewind
$(call ~append,$(call ~hash-find,$$,$1),$(and $3,$(if $(filter #,$(word 2,$3)),,1),$(call ~hash-bind,$2,$(wordlist 1,2,$3))),$(call ~env-rewind-x,$1,$2))
endef
~builtins-1 := abspath basename dir error eval firstword flavor info lastword notdir origin realpath shell sort strip suffix value warning wildcard words
~builtins-2 := addprefix addsuffix filter filter-out findstring join word
~builtins-3 := foreach patsubst subst wordlist
~builtins-other := if and or call
~builtin-argc = $(if $(filter $1,if),2 or 3,$(if $(filter $1,and or call),%,$(if $(filter $1,$(~builtins-3)),3,$(if $(filter $1,$(~builtins-2)),2,1))))
~base-env := $(call ~append,$(foreach b,$(call ~append,$(~builtins-1),$(~builtins-2),$(~builtins-3),$(~builtins-other)),$(call ~hash-bind,$(if $(filter subst foreach,$b),.)$b,B $(call ^d,$b) b)),$(call ~hash-bind,*args*,V ^av b),$(foreach v,MAKEFILE_LIST .DEFAULT_GOAL,$(call ~hash-bind,$v,V $(call ^d,$v) b)))
~resolve = $(if $(filter S%,$(word 1,$1)),$(call ~nth,2,$(subst !=, ,$(or $(filter $(word 2,$1)!=%,$2),$(filter $(word 2,$1)!=%,$(~base-env))))),-)

endef
 
define ///gen0.min
# compiled from gen0.scm
# Requires: core parse escape gen runtime
# Requires: scam-ct
# Exports: gen0|~gen0 c0|~c0 c0-error|~c0-error c0-mq|~c0-mq c0-mq-list|~c0-mq-list c0-mq-node|~c0-mq-node c0-mq-vec|~c0-mq-vec il-qmerge|~il-qmerge il-foldcat|~il-foldcat il-demote|~il-demote c0-mq|~c0-mq ml.special-begin|~ml.special-begin,p ml.special-lambda|~ml.special-lambda,p lambda-check|~lambda-check,p lambda-env|~lambda-env lambda-env2|~lambda-env2,p lambda-arg9|~lambda-arg9,p c0-block|~c0-block c0-block-cc|~c0-block-cc ml.special-require|~ml.special-require ml.special-declare|~ml.special-declare ml.special-define|~ml.special-define c0-declare-define|~c0-declare-define bind-sym|~bind-sym trimvec|~trimvec,p check-name|~check-name block-result|#,p,inblock:env:node;L.1826:S.1827@append:L.1829@S.1830!40if@S.1832!40inblock@L.1834!40S!50vector!40Q.1835!50env!40S.1839!50env:L.1843@S.1844!40or@S.1846!40node@Q.1848!40Q find-flag|~find-flag,p,name:flags;L.1781:S.1782@firstword:L.1784@S.1785!40filter@L.1787!40S.1788!50concat!40Q.1790!50%!40S.1794!50name@S.1797!40flags collect-flags|~collect-flags c0-L|~c0-L,p special-form-func|#,!1.,name;L.1231:S.1232@local-to-global:L.1234@S.1235!40concat@Q.1237!40ml.special-@S.1241!40name c0-inline-fn|~c0-inline-fn il-builtin|~il-builtin,p il-F|~il-F,p,form:env:fn:args;L.874:S.875@append:L.877@S!40vector@Q.878!40F@S.882!40fn:S.885@args:L.887@S.888!40c0-vec@L.890!40S.891!50rrest!40S.893!50form@S.896!40env c0-vec|~c0-vec c0-S|~c0-S,p c0-local|~c0-local c0-local-x|~c0-local-x,p c0-block|~c0-block c0|~c0 resolve|~resolve! base-env!V~base-env! builtin-argc|~builtin-argc! env-rewind|~env-rewind! env-rewind-x|~env-rewind-x! use-module|~use-module! require-module|~require-module! env-export|~env-export! import-binding|~import-binding! check-argc|~check-argc! check-type|~check-type! compile-warn|~compile-warn! gen-error|~gen-error! env-rewind-M|~env-rewind-M! after|~after! gensym|~gensym! gensym-name|~gensym-name! gen-global-name|~gen-global-name! *compile-mods*!V~*compile-mods*! *compile-outfile*!V~*compile-outfile*! *compile-file*!V~*compile-file*! *compile-subject*!V~*compile-subject*! protect-define|~protect-define! protect-rhs|~protect-rhs! protect-lhs|~protect-lhs! protect-expr|~protect-expr! protect-arg|~protect-arg! protect-trim|~protect-trim! protect-ltrim|~protect-ltrim! parse-text|~parse-text! parse-subject|~parse-subject! describe-error|~describe-error! describe-lnum|~describe-lnum! parse-exp|~parse-exp! parse-exp|~parse-exp! find-word|~find-word! pdec|~pdec! penc|~penc! format-form|~format-form! symbol-to-string|~symbol-to-string,iparse,form;L.650:S.651@concat:Q.653@Q!40:L.658@S.659!40word@Q.661!402@S.663!40form symbol-name|~symbol-name,iparse,form;L.552:S.553@nth:Q.555@2:S.557@form string-value|~string-value,iparse,form;L.531:S.532@nth:Q.534@2:S.536@form form-assert|~form-assert! format-form|~format-form! form-index|~form-index! form-typename|~form-typename! form-types!V~form-types! sunquoted?|#,iparse,form;L.275:S.276@type?:Q.278@!e%:S.282@form unquoted?|#,iparse,form;L.252:S.253@type?:Q.255@!a%:S.260@form qquoted?|#,iparse,form;L.229:S.230@type?:Q.232@`%:S.237@form quoted?|#,iparse,form;L.206:S.207@type?:Q.209@'%:S.214@form error?|#,iparse,form;L.184:S.185@type?:Q.187@E%:S.191@form list?|#,iparse,form;L.162:S.163@type?:Q.165@L%:S.169@form string?|#,iparse,form;L.140:S.141@type?:Q.143@Q%:S.147@form symbol?|#,iparse,form;L.118:S.119@type?:Q.121@S%:S.125@form assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
$(call ^require,parse)
$(call ^require,escape)
$(call ^require,gen)
~c0-local-x = $(if $(findstring $2,$1),R $(call ^d,($$.$3=$(subst $$,,$1)$(filter-out $(if ,,,1),$(if ,,,$(words $(subst ^,^ ,$3)))))),$(if $(findstring $$$$,$2),$(call ~c0-local-x,$1,$(subst $$$$,$$,$2),$3^),$(call ~gen-error,,impossible argument: %q,$1)))
~c0-local = $(if $(findstring $2,$1),R $(call ^d,$(subst $2,$$,$1)),$(call ~c0-local-x,$1,$(subst $$$$,$$,$2),^))
$(if $(if $(findstring U,$(SCAM_DEBUG)),$(and $(call ^fset,~c0-local-orig,$(value ~c0-local))1,$(call ^fset,~c0-local,$$(and $$(if $$(and $$(findstring U,$$(SCAM_DEBUG)),$$(if $$(findstring $$2,$$1),,1)),$$(call ~compile-warn,$$3,reference to upvalue '%s',$$(call ~nth,2,$$3)))1,$$(call ~c0-local-orig,$$1,$$2))))),)
define ~c0-S
$(if $(filter A,$(word 1,$3)),$(call ~c0-local,$(word 2,$3),$(word 2,$(call ~hash-get,$$,$2)),$1),$(if $(filter V,$(word 1,$3)),$(wordlist 1,2,$3),$(if $(filter F,$(word 1,$3)),$(if $(filter #,$(word 2,$3)),$(call ~gen-error,$1,attempt to obtain value of compound macro),F value $(call ^d,Q $(call ^d,$(call ~nth,2,$3)))),$(if $(filter M,$(word 1,$3)),$(call ~c0,$(call ~nth,2,$3),$(call ~env-rewind,$2,$(call ~nth,2,$1))),$(if $(filter I,$(word 1,$3)),$(call ~nth,2,$3),$(call ~gen-error,$1,$(if $(filter B,$(word 1,$3)),attempt to obtain value of builtin: %q,$(if $3,internal error: bad defn '$(call ^d,$3)',undefined variable: %q)),$(call ~nth,2,$1)))))))
endef
~c0-vec = $(foreach f&,$1,$(call ^d,$(call ~c0,$(call ^u,$(f&)),$2)))
~il-F = $(call ~append,F $(call ^d,$3),$4,$(call ~c0-vec,$(wordlist 3,99999999,$1),$2))
~il-builtin = $(if $(filter $(call ~builtin-argc,$3),$(filter-out 0,$(words $(wordlist 3,99999999,$1)))),$(call ~append,F $(call ^d,$3),,$(call ~c0-vec,$(wordlist 3,99999999,$1),$2)),$(call ~gen-error,$(call ~nth,2,$1),wrong number of arguments: %q accepts %s,$3,$(call ~builtin-argc,$3)))
define ~c0-inline-fn
$(or $(call ~check-argc,$(words $(call ^u,$(word 1,$(call ~nth,4,$3)))),$1),$(call ~c0-block,$(wordlist 2,99999999,$(call ~nth,4,$3)),$(call ~append,$(foreach da,$(call ^u,$(word 1,$(call ~nth,4,$3))),$(call ~hash-bind,$(call ~promote,$(da)),I $(call ^d,$(call ~c0,$(call ~nth,$(call ~find-word,$(call ^u,$(word 1,$(call ~nth,4,$3))),1,$(da)),$(wordlist 3,99999999,$1)),$2)))),$(call ~hash-bind,#pos,P $(call ~form-index,$1),$(call ~env-rewind,$2,$(call ~nth,2,$(call ~nth,2,$1)),$3)))))
endef
~c0-L = $(if $(filter F,$(word 1,$3)),$(if $(filter-out !.,$(word 4,$3)),$(call ~c0-inline-fn,$1,$2,$3),$(call ~append,f,$(word 2,$3),$(call ~c0-vec,$(wordlist 3,99999999,$1),$2))),$(if $(filter B,$(word 1,$3)),$(call ~il-builtin,$1,$2,$(call ~nth,2,$3),),$(if $(if $(word 2,$1),,1),$(call ~gen-error,$1,missing function/macro name),$(if $(filter X,$(word 1,$3)),$(if $(call ~nth,3,$3),$(call ~c0,$(call $(call ~nth,2,$3),$1),$2,$4),$(call ~gen-error,$1,cannot use xmacro in its own file)),$(if $3,Y $(call ~c0-vec,$(wordlist 2,99999999,$1),$2),$(if $(if $(filter-out u%,$(flavor ~ml.special-$(call ~nth,2,$(call ~nth,2,$1)))),1),$(call ~ml.special-$(call ~nth,2,$(call ~nth,2,$1)),$1,$2,$4),$(call ~gen-error,$(call ~nth,2,$1),undefined symbol: %q,$(call ~nth,2,$(call ~nth,2,$1)))))))))
~collect-flags = $(if $(and $(filter S%,$(word 1,$1)),$(filter &private &inline &global,$(call ~nth,2,$(call ^u,$(word 1,$1))))),$(call ~collect-flags,$(wordlist 2,99999999,$1),$(call ~append,$2,$(word 1,$1))),$(call ~cons,$2,$1))
~find-flag = $(firstword $(filter %$1,$2))
~check-name = $(foreach sym,$(or $(findstring :,$1),$(findstring $$,$1),$(findstring %,$1)),$(call ~gen-error,$1,names may not contain '%s' characters,$(sym)))
~trimvec = $(call ^d,$1)$(if $(or $2,$3), $(call ^d,$2)$(if $3, $(call ^d,$3)))
~bind-sym = $(call ~hash-bind,$(call ~nth,2,$2),$3 $(call ~trimvec,$(if $(firstword $(filter %&global,$4)),$(call ~nth,2,$2),$(call ~gen-global-name,$(call ~nth,2,$2))),$(if $(firstword $(filter %&private,$4)),p),$5))$(if $1, $1)
define ~c0-declare-define
$(call ~append,$(if $3,env $(call ^d,$(if $(filter L%,$(word 1,$4)),$(call ~bind-sym,$2,$(call ~nth,2,$4),F,$(call ^u,$(word 1,$6)),$(if $(firstword $(filter %&inline,$(call ^u,$(word 1,$6)))),$(call ~append,$(call ^d,$(foreach sym&,$(wordlist 3,99999999,$(if $(filter `% '%,$(word 1,$4)),$(call ~nth,2,$4),$4)),$(call ^d,$(call ~nth,2,$(call ^u,$(sym&)))))),$(wordlist 2,99999999,$6)))),$(if $(filter S%,$(word 1,$4)),$(call ~bind-sym,$2,$4,V,$(call ^u,$(word 1,$6))),$(if $(filter S%,$(word 1,$(call ~nth,2,$4))),$(call ~hash-bind,$(call ~nth,2,$(call ~nth,2,$4)),M $(call ^d,$(call ^u,$(word 1,$(wordlist 2,99999999,$6)))) $(call ^d,$(if $(firstword $(filter %&private,$(call ^u,$(word 1,$6)))),p)),$2),$(call ~hash-bind,$(call ~nth,2,$(call ~nth,2,$(call ~nth,2,$4))),F # $(call ^d,$(if $(firstword $(filter %&private,$(call ^u,$(word 1,$6)))),p)) $(call ^d,$(call ~append,$(call ^d,$(foreach sym&,$(wordlist 3,99999999,$(if $(filter `% '%,$(word 1,$4)),$(call ~nth,2,$4),$4)),$(call ^d,$(call ~nth,2,$(call ^u,$(sym&)))))),$(wordlist 2,99999999,$6))),$2)))))),$(or $(or $(or $(call ~check-type,L S,$(if $5,$4,$(if $(filter `% '%,$(word 1,$4)),$(call ~nth,2,$4),$4)),$1,FORM,($(or $5,define) $(if $5,,$(if $(filter `% '%,$(word 1,$4)),`))FORM$(if $5,, ...))),$(if $5,$(if $(wordlist 2,99999999,$6),$(call ~gen-error,$(wordlist 2,99999999,$6),too many arguments to (declare ...))),$(if $(if $(wordlist 2,99999999,$6),,1),$(call ~gen-error,$1,no BODY supplied to (define FORM BODY...)),$(if $(and $(filter S%,$(word 1,$(if $(filter `% '%,$(word 1,$4)),$(call ~nth,2,$4),$4))),$(word 2,$(wordlist 2,99999999,$6))),$(call ~gen-error,$(call ~nth,2,$(wordlist 2,99999999,$6)),too many arguments to (define %sVAR EXPR),$(if $(filter `% '%,$(word 1,$4)),`))))),$(if $(filter L%,$(word 1,$(if $(filter `% '%,$(word 1,$4)),$(call ~nth,2,$4),$4))),$(foreach _err,$(foreach _sym,$(wordlist 2,99999999,$(if $(filter `% '%,$(word 1,$4)),$(call ~nth,2,$4),$4)),$(if $(filter S%,$(_sym)),,$(call ^d,$(call ~check-type,S,$(call ~promote,$(_sym)),$1,NAME,$(call ~sprintf,(%s %s(NAME...)),$(or $5,define),$(if $(filter `% '%,$(word 1,$4)),`)))))),$(call ~promote,$(_err)))),$(call ~check-name,$(if $(filter L%,$(word 1,$4)),$(call ~nth,2,$4),$(if $(filter S%,$(word 1,$4)),$4,$(if $(filter S%,$(word 1,$(call ~nth,2,$4))),$(call ~nth,2,$4),$(call ~nth,2,$(call ~nth,2,$4)))))),$(and $(firstword $(filter %&inline,$(call ^u,$(word 1,$6)))),$(or $5,$(if $(filter L%,$(word 1,$4)),,1)),$(call ~gen-error,$(firstword $(filter %&inline,$(call ^u,$(word 1,$6)))),'&inline' applies only to function definitions))),$(if $(if $(or $5,$(filter `% '%,$(word 1,$4))),,1),$(call ~c0,$(if $(filter S%,$(word 1,$4)),L.3132 S.3133!0call $(call ^d,Q ^set) $(call ^d,Q $(call ^d,$(if $(firstword $(filter %&global,$(call ^u,$(word 1,$6)))),$(call ~nth,2,$4),$(call ~gen-global-name,$(call ~nth,2,$4))))) $(call ^d,$(call ~nth,2,$6)),L.3158 S.3159!0call $(call ^d,Q ^fset) $(call ^d,Q $(call ^d,$(if $(firstword $(filter %&global,$(call ^u,$(word 1,$6)))),$(call ~nth,2,$(call ~nth,2,$4)),$(call ~gen-global-name,$(call ~nth,2,$(call ~nth,2,$4)))))) $(call ^d,L.3179 S.3180!0lambda $(call ^d,L.3182 $(wordlist 3,99999999,$4)) $(wordlist 2,99999999,$6))),$(if $(filter L%,$(word 1,$4)),$(call ~bind-sym,$2,$(call ~nth,2,$4),F,$(call ^u,$(word 1,$6))),$2)))),Q))
endef
~ml.special-define = $(call ~c0-declare-define,$1,$2,$3,$(call ~nth,3,$1),,$(call ~collect-flags,$(wordlist 4,99999999,$1)))
~ml.special-declare = $(call ~c0-declare-define,$1,$2,$3,$(call ~nth,3,$1),declare,$(call ~collect-flags,$(wordlist 4,99999999,$1)))
~ml.special-require = $(or $(call ~check-type,Q,$(call ~nth,3,$1),$1,STRING,(require STRING)),$(call ^Y,$(call ~require-module,$(call ~nth,2,$(call ~nth,3,$1)),$(firstword $(filter %&private,$(wordlist 4,99999999,$1)))),$2,$(call ~nth,2,$(call ~nth,3,$1)),,,,,,,$$(if $$1,$$(call ~append,$$(if $(call ^e,$3),env $$(call ^d,$$(call ~append,$$1,$$2))),$$(or f ^require $$(call ^d,Q $$(call ^d,$$(notdir $$3))),Q)))),$(call ~gen-error,$1,require: Cannot find module %q,$(call ~nth,2,$(call ~nth,3,$1))))
~c0-block-cc = $(if $(if $1,,1),$(call ^Y,$(if $(if $5,,1),$4,$(call ~append,$4,$(filter-out Q,$(call ^d,$(if $(filter env,$(word 1,$5)),$(wordlist 3,99999999,$5),$5))))),$(if $(filter env,$(word 1,$5)),$(call ~nth,2,$5),$2),,,,,,,,$3),$(call ~c0-block-cc,$(wordlist 2,99999999,$1),$(if $(filter env,$(word 1,$5)),$(call ~nth,2,$5),$2),$3,$(if $(if $5,,1),$4,$(call ~append,$4,$(filter-out Q,$(call ^d,$(if $(filter env,$(word 1,$5)),$(wordlist 3,99999999,$5),$5))))),$(call ~c0,$(call ^u,$(word 1,$1)),$(if $(filter env,$(word 1,$5)),$(call ~nth,2,$5),$2),1)))
~c0-block = $(call ~c0-block-cc,$1,$2,$$(if $$(word 2,$$1),B $$1,$$(or $$(call ^u,$$(word 1,$$1)),Q)))
~lambda-arg9 = $(if $1,$(call ^Y,$(call ~gensym-name,arg9,$3),$1,$2,,,,,,,$$(call ~append,$$(foreach n,$$(call ~indicesX,$$2,.,1),$$(call ~hash-bind,$$(call ~nth,2,$$(call ~nth,$$n,$$2)),M $$(call ^d,L S!0call $$(call ^d,Q ^n) $$(call ^d,Q $$n) $$(call ^d,S $$1)))),$$(call ~hash-bind,$$1,A $$(call ^d,$$39)))))
~lambda-env2 = $(call ~hash-bind,$$,$$ $(call ^d,$3),$(call ~append,$(foreach n,$(call ~indicesX,$(wordlist 1,8,$1),.,1),$(call ~hash-bind,$(call ~nth,2,$(call ~nth,$n,$1)),A $(call ^d,$3$n))),$(call ~lambda-arg9,$(wordlist 9,99999999,$1),$3,$2),$2))
~lambda-env = $(call ~lambda-env2,$1,$2,$(or $(subst $$,$$$$,$(word 2,$(call ~hash-get,$$,$2))),$$))
~lambda-check = $(call ~check-type,$1,$2,$3,$4,(lambda (NAME...) BODY...))
~ml.special-lambda = $(or $(call ~lambda-check,L,$(call ~nth,3,$1),$1,(NAME...)),$(call ^u,$(word 1,$(filter-out !.,$(foreach a&,$(wordlist 2,99999999,$(call ~nth,3,$1)),$(call ^d,$(call ~lambda-check,S,$(call ^u,$(a&)),$1,NAME)))))),X $(call ^d,$(call ~c0-block,$(wordlist 4,99999999,$1),$(call ~lambda-env,$(wordlist 2,99999999,$(call ~nth,3,$1)),$2))))
~ml.special-begin = $(call ~c0-block,$(wordlist 3,99999999,$1),$2)
~il-demote = $(if $(filter Q%,$(word 1,$1)),Q $(call ^d,$(word 2,$1)),f ^d $(call ^d,$1))
~il-foldcat = $(if $(word 2,$1),C $1,$(if $(word 1,$1),$(call ^u,$(word 1,$1)),Q !.))
~il-qmerge = $(if $(filter Q%,$(word 1,$(word 1,$1))),$(call ~il-qmerge,$(wordlist 2,99999999,$1),$2$(word 2,$(call ^u,$(word 1,$1)))),$(call ~append,$(if $(subst !.,,$2),$(call ^d,Q $2)),$(if $1,$(call ~append,$(word 1,$1),$(call ~il-qmerge,$(wordlist 2,99999999,$1),)))))
~c0-mq-vec = $(call ~il-foldcat,$(call ~il-qmerge,$(subst $  , $(call ^d,Q !0) ,$2),$(call ^d,$(word 1,$1) )))
~c0-mq-node = $(call ~c0-mq-vec,$1,$(call ^d,$(call ~il-demote,$2)))
~c0-mq-list = $(call ~c0-mq-vec,$1,$(foreach a&,$(wordlist 2,99999999,$1),$(call ^d,$(if $(filter @%,$(word 1,$(call ^u,$(a&)))),$(call ~c0,$(call ~nth,2,$(call ^u,$(a&))),$2),$(call ~il-demote,$(call ~c0-mq,$(call ^u,$(a&)),$2,$3))))))
~c0-mq = $(if $(filter $(if ,,,%),$(word 1,$1)),$(if $3,$(call ~c0-mq-node,$1,$(call ~c0-mq,$(call ~nth,2,$1),$2,$(wordlist 2,99999999,$3))),$(call ~c0,$(call ~nth,2,$1),$2)),$(if $(filter `%,$(word 1,$1)),$(call ~c0-mq-node,$1,$(call ~c0-mq,$(call ~nth,2,$1),$2,$(call ~append,$3,1))),$(if $(filter L%,$(word 1,$1)),$(call ~c0-mq-list,$1,$2,$3),$(if $(filter E%,$(word 1,$1)),$1,Q $(call ^d,$1)))))
~c0-error = $(call ~gen-error,$1,$(if $(filter $(if ,,,%),$(word 1,$1)),unquote (,) outside of a quasiquoted (`) expression,bad AST node: %q),$1)
~c0 = $(if $(filter S%,$(word 1,$1)),$(call ~c0-S,$1,$2,$(call ~resolve,$1,$2)),$(if $(filter Q%,$(word 1,$1)),$1,$(if $(filter L%,$(word 1,$1)),$(call ~c0-L,$1,$2,$(call ~resolve,$(call ~nth,2,$1),$2),$3),$(if $(filter E%,$(word 1,$1)),$1,$(if $(filter '%,$(word 1,$1)),Q $(call ^d,$(call ~nth,2,$1)),$(if $(filter `%,$(word 1,$1)),$(call ~c0-mq,$(call ~nth,2,$1),$2),$(call ~c0-error,$1)))))))
~gen0 = $(call ~c0-block-cc,$1,$2,$$1)

endef
 
define ///gen1.min
# compiled from gen1.scm
# Requires: core parse escape gen gen0 runtime
# Requires: scam-ct
# Exports: gen1|~gen1 c1-file|~c1-file c1-file*|~c1-file* c1-file|~c1-file c1-fset|~c1-fset c1-set|~c1-set c1|~c1 c1-Q|#,!1.,node;L.1653:S.1654@subst:Q.1656@$:Q.1660@$$:L.1664@S.1665!40nth@Q.1667!402@S.1669!40node c1-X|~c1-X c1-V|~c1-V c1-B|~c1-B c1-Y|~c1-Y c1-f|~c1-f c1-args9|~c1-args9 c1-F|~c1-F il-vector|~il-vector c1-E|~c1-E c1-vec|~c1-vec c1-arg-trim|~c1-arg-trim c1-arg|~c1-arg c1|~c1 one-char-names!V~one-char-names voidify|#,!1.,e;L.561:S.562@if:L.564@S.565!40void-node?@S.567!40e@L.569!40S.570!50il-funcname!40S.572!50e:S.576@e:L.578@S!40vector@Q.579!40F@Q.583!40if@S.587!40e@L.589!40S!50vector!40Q.590!50Q!40Q.594!50!51. void-node?|#,!1.,node:name;L.520:S.521@define:`.523@S.524!40void-names:Q.526@error!40eval!40info!40^require;L.538:S.539@filter:S.541@void-names:S.543@name il-user-args|#,!1.,node;L.466:S.467@nth-rest:L.469@S.470!40if@L.472!40S.473!50type?!40Q.475!50F!40S.479!50node@Q.482!404@Q.484!403:S.487@node il-funcname|~il-funcname gen-extract|~gen-extract gen-embed|~gen-embed gen-escape-lambda|~gen-escape-lambda gen-escape-literal|~gen-escape-literal marker!=M,Q.85;($),!1. gen0|~gen0! c0|~c0! c0-error|~c0-error! c0-mq|~c0-mq! c0-mq-list|~c0-mq-list! c0-mq-node|~c0-mq-node! c0-mq-vec|~c0-mq-vec! il-qmerge|~il-qmerge! il-foldcat|~il-foldcat! il-demote|~il-demote! c0-mq|~c0-mq! lambda-env|~lambda-env! c0-block|~c0-block! c0-block-cc|~c0-block-cc! ml.special-require|~ml.special-require! ml.special-declare|~ml.special-declare! ml.special-define|~ml.special-define! c0-declare-define|~c0-declare-define! bind-sym|~bind-sym! check-name|~check-name! collect-flags|~collect-flags! special-form-func|#,igen0,name;L.1231:S.1232@local-to-global:L.1234@S.1235!40concat@Q.1237!40ml.special-@S.1241!40name c0-inline-fn|~c0-inline-fn! c0-vec|~c0-vec! c0-local|~c0-local! c0-block|~c0-block! c0|~c0! resolve|~resolve! base-env!V~base-env! builtin-argc|~builtin-argc! env-rewind|~env-rewind! env-rewind-x|~env-rewind-x! use-module|~use-module! require-module|~require-module! env-export|~env-export! import-binding|~import-binding! check-argc|~check-argc! check-type|~check-type! compile-warn|~compile-warn! gen-error|~gen-error! env-rewind-M|~env-rewind-M! after|~after! gensym|~gensym! gensym-name|~gensym-name! gen-global-name|~gen-global-name! *compile-mods*!V~*compile-mods*! *compile-outfile*!V~*compile-outfile*! *compile-file*!V~*compile-file*! *compile-subject*!V~*compile-subject*! protect-define|~protect-define! protect-rhs|~protect-rhs! protect-lhs|~protect-lhs! protect-expr|~protect-expr! protect-arg|~protect-arg! protect-trim|~protect-trim! protect-ltrim|~protect-ltrim! parse-text|~parse-text! parse-subject|~parse-subject! describe-error|~describe-error! describe-lnum|~describe-lnum! parse-exp|~parse-exp! parse-exp|~parse-exp! find-word|~find-word! pdec|~pdec! penc|~penc! format-form|~format-form! symbol-to-string|~symbol-to-string,iparse,form;L.650:S.651@concat:Q.653@Q!40:L.658@S.659!40word@Q.661!402@S.663!40form symbol-name|~symbol-name,iparse,form;L.552:S.553@nth:Q.555@2:S.557@form string-value|~string-value,iparse,form;L.531:S.532@nth:Q.534@2:S.536@form form-assert|~form-assert! format-form|~format-form! form-index|~form-index! form-typename|~form-typename! form-types!V~form-types! sunquoted?|#,iparse,form;L.275:S.276@type?:Q.278@!e%:S.282@form unquoted?|#,iparse,form;L.252:S.253@type?:Q.255@!a%:S.260@form qquoted?|#,iparse,form;L.229:S.230@type?:Q.232@`%:S.237@form quoted?|#,iparse,form;L.206:S.207@type?:Q.209@'%:S.214@form error?|#,iparse,form;L.184:S.185@type?:Q.187@E%:S.191@form list?|#,iparse,form;L.162:S.163@type?:Q.165@L%:S.169@form string?|#,iparse,form;L.140:S.141@type?:Q.143@Q%:S.147@form symbol?|#,iparse,form;L.118:S.119@type?:Q.121@S%:S.125@form assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
$(call ^require,parse)
$(call ^require,escape)
$(call ^require,gen)
$(call ^require,gen0)
~gen-escape-literal = $(subst $$,$$$$,$1)
~gen-escape-lambda = $(subst $[$$.=,$(if ,,$$$[call ^e,$$),$(subst $[$$.^,$[$$.,$(subst $[$$$$.,$[$$.,$(subst $$,$$$$,$1))))
~gen-embed = ($$.@$(subst $$,~S,$(subst $],~R,$(subst $(if ,,,),~C,$(subst $[,~L,$(subst ~,~1,$1)))))@)
~gen-extract = $(foreach w,$(wordlist 2,99999999,$(call ~split,$[$$.@,$1)),$(subst ~1,~,$(subst ~S,$$,$(subst ~R,$],$(subst ~C,$(if ,,,),$(subst ~L,$[,$(call ^u,$(word 1,$(call ~split,@$],$w)))))))))
~il-funcname = $(if $(filter f,$(word 1,$1)),$(word 2,$1),$(if $(filter F,$(word 1,$1)),$(or $(filter-out call,$(word 2,$1)),$(word 2,$(call ~nth,3,$1)))))
~one-char-names := a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z _
~c1-arg = $(if $(filter f F,$(word 1,$1)),$(call ~c1,$1),$(call ~protect-arg,$(call ~c1,$1)))
~c1-arg-trim = $(if $(filter f F,$(word 1,$1)),$(call ~c1,$1),$(call ~protect-trim,$(call ~protect-arg,$(call ~c1,$1))))
~c1-vec = $(subst ($$),,$(subst ($$) ,$2,$(foreach a,$1,$(call $3,$(call ~promote,$a))($$))))
~c1-E = $(call ~gen-embed,$1)
~il-vector = $(call ~il-foldcat,$(call ~il-qmerge,$(subst $  , $(call ^d,Q !0) ,$(foreach n&,$1,$(call ^d,$(call ~il-demote,$(call ^u,$(n&))))))))
~c1-F = $$($(word 2,$1) $(call ~protect-ltrim,$(call ~c1-vec,$(wordlist 3,99999999,$1),$(if ,,,),$(if $(filter and or,$(word 2,$1)),~c1-arg-trim,~c1-arg))))
~c1-args9 = $(if $(word 9,$1),$(if ,,$(call ~c1-vec,$(wordlist 1,8,$1),$(if ,,,),~c1-arg),$(call ~protect-arg,$(call ~c1,$(call ~il-vector,$(wordlist 9,99999999,$1))))),$(call ~c1-vec,$1,$(if ,,,),~c1-arg))
~c1-f = $$(call $(call ~protect-ltrim,$(call ~gen-escape-literal,$(call ~nth,2,$1)))$(if $(wordlist 3,99999999,$1),$(if ,,,))$(call ~c1-args9,$(wordlist 3,99999999,$1)))
~c1-Y = $$(call ^Y,$(call ~c1-args9,$(wordlist 3,99999999,$1))$(subst $  ,,$(filter $(if ,,,),$(or $(wordlist $(words $1),11,$(if ,,x x , , , , , , , , ,)),$(if ,,,))))$(call ~protect-arg,$(call ~c1,$(call ~nth,2,$1))))
~c1-B = $(if $(word 3,$1),$$(and $(call ~c1-vec,$(wordlist 2,99999999,$1),$(if ,,1,),~c1-arg)),$(if $(word 2,$1),$(call ~c1,$(call ~nth,2,$1))))
~c1-V = $$$(or $(filter $(~one-char-names),$(word 2,$1)),($(call ~gen-escape-literal,$(call ~nth,2,$1))))
~c1-X = $(call ~gen-escape-lambda,$(call ~c1,$(call ~nth,2,$1)))
~c1 = $(if $(filter Q%,$(word 1,$1)),$(subst $$,$$$$,$(call ~nth,2,$1)),$(if $(filter R,$(word 1,$1)),$(call ~nth,2,$1),$(if $(filter f,$(word 1,$1)),$(call ~c1-f,$1),$(if $(filter V,$(word 1,$1)),$(call ~c1-V,$1),$(if $(filter C,$(word 1,$1)),$(call ~c1-vec,$(wordlist 2,99999999,$1),,~c1),$(if $(filter X,$(word 1,$1)),$(call ~c1-X,$1),$(if $(filter B,$(word 1,$1)),$(call ~c1-B,$1),$(if $(filter Y,$(word 1,$1)),$(call ~c1-Y,$1),$(if $(filter F,$(word 1,$1)),$(call ~c1-F,$1),$(call ~c1-E,$1))))))))))
define ~c1-set
$(call ~protect-lhs,$1) := $(call ~protect-rhs,$2)

endef
define ~c1-fset
$(if $(findstring $$,$(subst $$$$,,$2)),$$(call ^fset,$(call ~protect-arg,$1),$(call ~protect-arg,$2))
,$(if $(or $(findstring #,$2),$(findstring 
,$2),$(filter ~%,$(subst $  ,~,$(subst $ 	,~,$2)))),define $(call ~protect-lhs,$1)
$(call ~protect-define,$(subst $$$$,$$,$2))
$ endef
,$(call ~protect-lhs,$1) = $(subst $$$$,$$,$(call ~protect-rhs,$2))
))
endef
~c1-file* = $(if $1,$(subst .$$. ,,$(foreach a,$1,$(call ~c1-file,$(call ~promote,$a)).$$.) ))
define ~c1-file
$(or $(and $(filter F,$(word 1,$1)),$(filter eval,$(word 2,$1)),$(filter Q%,$(word 3,$1)),$(if ,,$(call ~nth,2,$(call ~nth,3,$1))
)),$(if $(filter ^set ^fset,$(call ~il-funcname,$1)),$(call ^Y,$(wordlist $(if $(filter F,$(word 1,$1)),4,3),99999999,$1),$(call ~il-funcname,$1),,,,,,,,$$(if $$(if $$(call ~nth,3,$$1),,1),$$(call ^Y,$$(call ~c1,$$(call ~nth,1,$$1)),$$(call ~c1,$$(call ~nth,2,$$1)),,,,,,,,$$(if $$(filter ^set,$$2),$$(value ~c1-set),$$(value ~c1-fset)))))),$(if $(filter B,$(word 1,$1)),$(call ~c1-file*,$(wordlist 2,99999999,$1)),$(if $(filter R,$(word 1,$1)),$(call ~c1,$1)
,$(call ~protect-expr,$(call ~c1,$(if $(filter error eval info ^require,$(call ~il-funcname,$1)),$1,F if $(call ^d,$1) $(call ^d,Q !.))))
)))
endef
~gen1 = $(call ^Y,$(if $2,$(call ~c1-file*,$1),$(call ~c1,$(call ~append,B,$1))),,,,,,,,,$$(call ^d,$$(call ~gen-extract,$$1)) $$(call ^d,$$1))

endef
 
define ///getopts.min
# compiled from getopts.scm
# Requires: core runtime
# Requires: scam-ct
# Exports: getopts|~getopts getopts-loop|~getopts-loop assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
~getopts-loop = $(and $(call ^set,~opt,$(word 1,$5))1,$(call ^set,~file,$(call ~nth,1,$5))1,$(if $(if $5,,1),$(call ^d,$6) $(call ^d,$7),$(if $(if $(filter -%,$(~opt)),,1),$(call ~getopts-loop,$1,$2,$3,$4,$(wordlist 2,99999999,$5),$(call ~conj,$6,$(~file)),$7),$(if $(filter $1,$(~opt)),$(call ~getopts-loop,$1,$2,$3,$4,$(wordlist 2,99999999,$5),$6,$(call ~hash-bind,$(patsubst -%,%,$(patsubst -%,%,$(~opt))),1,$7)),$(if $(filter $2,$(~opt)),$(call ~getopts-loop,$1,$2,$3,$4,$(wordlist 3,99999999,$5),$6,$(call ~hash-bind,$(patsubst -%,%,$(patsubst -%,%,$(~opt))),$(call ~nth,2,$5),$7)),$(if $(filter $3,$(~opt)),$(call ~getopts-loop,$1,$2,$3,$4,,$6,$(call ~hash-bind,$(patsubst -%,%,$(patsubst -%,%,$(~opt))),$(wordlist 2,99999999,$5),$7)),$(call ^Y,$(~opt),$(wordlist 2,99999999,$5),,,,,,,,$4)))))))
~getopts = $(call ~getopts-loop,$(filter-out %= %=...,$2),$(patsubst %=,%,$(filter %=,$2)),$(patsubst %=...,%,$(filter %=...,$2)),$3,$1,,)

endef
 
define ///io.min
# compiled from io.scm
# Requires: core runtime
# Requires: scam-ct
# Exports: file-exists?|~file-exists? read-lines|~read-lines read-file|~read-file write-file|~write-file getline|~getline shell!1|~shell!2 printn|~printn echo-command|~echo-command quote-sh-arg|~quote-sh-arg xshell|~xshell SCAM_DEBUG!VSCAM_DEBUG assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
~xshell = $(and $(if $(filter S,$(SCAM_DEBUG)),$(info shell: $1))1,$(shell $1))
~quote-sh-arg = '$(subst ','\'',$1)'
define ~echo-command
printf '%b' $(call ~quote-sh-arg,$(subst 
,\n,$(subst \,\\,$1)))
endef
~printn = $(call ~xshell,$(call ~echo-command,$(call ~concat-vec,$(^av))) >&2)
define ~shell!
$(subst !1,!,$(subst !0, ,$(subst !n,
,$(subst $  ,,$(call ~xshell,$1 | sed -e 's/!/!1/g;s/ /!0/g;s/$$/!n/g')))))
endef
~getline = $(and $(if $1,$(call ~printn,$1))1,$(call ~shell!,head -1))
~write-file = $(if $1,$(call ~xshell,$(call ~echo-command,$2) > $1),$(info error: write-file: nil filename))
~read-file = $(if $1,$(call ~shell!,cat < $(call ~quote-sh-arg,$1)),$(info error: read-file: nil filename))
~read-lines = $(if $1,$(subst !n,,$(subst $  !n, !.,$(call ~xshell,sed -E '$(if $2,$(if ,,$2,$3!d;))s/!/!1/g;s/	/!+/g;s/ /!0/g;s/$$/!n/g' $1))),$(info error: read-lines: nil filename))
~file-exists? = $(if $(shell ls $(call ~quote-sh-arg,$1) 2> /dev/null),1)

endef
 
define ///macros.min
# compiled from macros.scm
# Requires: core parse gen gen0 runtime
# Requires: scam-ct
# Exports: ml.special-use|~ml.special-use ml.special-defmacro|~ml.special-defmacro ml.special-global-name|~ml.special-global-name ml.special-local-to-global|~ml.special-local-to-global ml.special-cond|~ml.special-cond ml.macro-cond|~ml.macro-cond cond-expand|~cond-expand cond-cxt!V~cond-cxt ml.special-print|~ml.special-print ml.special-for|~ml.special-for ml.special-foreach|~ml.special-foreach ml.special-let|~ml.special-let ml.macro-let|~ml.macro-let let-error|~let-error ml.special-let&|~ml.special-let& let&-check-bindings|~let&-check-bindings let&-check|~let&-check let&-env|~let&-env ml.special-?|~ml.special-? ml.special-let-global|~ml.special-let-global ml.macro-let-global|~ml.macro-let-global letg-expand|~letg-expand,p letg-error|~letg-error,p ml.special-set|~ml.special-set ml.special-vector|~ml.special-vector ml.special-subst|~ml.special-subst subst-x|~subst-x,p ml.special-concat|~ml.special-concat ml.special-current-file-line|~ml.special-current-file-line ml.special-current-env|~ml.special-current-env begin-block|~begin-block gen0|~gen0 c0|~c0 c0-error|~c0-error c0-mq|~c0-mq c0-mq-list|~c0-mq-list c0-mq-node|~c0-mq-node c0-mq-vec|~c0-mq-vec il-qmerge|~il-qmerge il-foldcat|~il-foldcat il-demote|~il-demote c0-mq|~c0-mq ml.special-begin|~ml.special-begin,p ml.special-lambda|~ml.special-lambda,p lambda-check|~lambda-check,p lambda-env|~lambda-env lambda-env2|~lambda-env2,p lambda-arg9|~lambda-arg9,p c0-block|~c0-block c0-block-cc|~c0-block-cc ml.special-require|~ml.special-require ml.special-declare|~ml.special-declare ml.special-define|~ml.special-define c0-declare-define|~c0-declare-define bind-sym|~bind-sym trimvec|~trimvec,p check-name|~check-name block-result|#,p,inblock:env:node;L.1826:S.1827@append:L.1829@S.1830!40if@S.1832!40inblock@L.1834!40S!50vector!40Q.1835!50env!40S.1839!50env:L.1843@S.1844!40or@S.1846!40node@Q.1848!40Q find-flag|~find-flag,p,name:flags;L.1781:S.1782@firstword:L.1784@S.1785!40filter@L.1787!40S.1788!50concat!40Q.1790!50%!40S.1794!50name@S.1797!40flags collect-flags|~collect-flags c0-L|~c0-L,p special-form-func|#,!1.,name;L.1231:S.1232@local-to-global:L.1234@S.1235!40concat@Q.1237!40ml.special-@S.1241!40name c0-inline-fn|~c0-inline-fn il-builtin|~il-builtin,p il-F|~il-F,p,form:env:fn:args;L.874:S.875@append:L.877@S!40vector@Q.878!40F@S.882!40fn:S.885@args:L.887@S.888!40c0-vec@L.890!40S.891!50rrest!40S.893!50form@S.896!40env c0-vec|~c0-vec c0-S|~c0-S,p c0-local|~c0-local c0-local-x|~c0-local-x,p c0-block|~c0-block c0|~c0 resolve|~resolve! base-env!V~base-env! builtin-argc|~builtin-argc! env-rewind|~env-rewind! env-rewind-x|~env-rewind-x! use-module|~use-module! require-module|~require-module! env-export|~env-export! import-binding|~import-binding! check-argc|~check-argc! check-type|~check-type! compile-warn|~compile-warn! gen-error|~gen-error! env-rewind-M|~env-rewind-M! after|~after! gensym|~gensym! gensym-name|~gensym-name! gen-global-name|~gen-global-name! *compile-mods*!V~*compile-mods*! *compile-outfile*!V~*compile-outfile*! *compile-file*!V~*compile-file*! *compile-subject*!V~*compile-subject*! protect-define|~protect-define! protect-rhs|~protect-rhs! protect-lhs|~protect-lhs! protect-expr|~protect-expr! protect-arg|~protect-arg! protect-trim|~protect-trim! protect-ltrim|~protect-ltrim! parse-text|~parse-text! parse-subject|~parse-subject! describe-error|~describe-error! describe-lnum|~describe-lnum! parse-exp|~parse-exp! parse-exp|~parse-exp! find-word|~find-word! pdec|~pdec! penc|~penc! format-form|~format-form! symbol-to-string|~symbol-to-string,iparse,form;L.650:S.651@concat:Q.653@Q!40:L.658@S.659!40word@Q.661!402@S.663!40form symbol-name|~symbol-name,iparse,form;L.552:S.553@nth:Q.555@2:S.557@form string-value|~string-value,iparse,form;L.531:S.532@nth:Q.534@2:S.536@form form-assert|~form-assert! format-form|~format-form! form-index|~form-index! form-typename|~form-typename! form-types!V~form-types! sunquoted?|#,iparse,form;L.275:S.276@type?:Q.278@!e%:S.282@form unquoted?|#,iparse,form;L.252:S.253@type?:Q.255@!a%:S.260@form qquoted?|#,iparse,form;L.229:S.230@type?:Q.232@`%:S.237@form quoted?|#,iparse,form;L.206:S.207@type?:Q.209@'%:S.214@form error?|#,iparse,form;L.184:S.185@type?:Q.187@E%:S.191@form list?|#,iparse,form;L.162:S.163@type?:Q.165@L%:S.169@form string?|#,iparse,form;L.140:S.141@type?:Q.143@Q%:S.147@form symbol?|#,iparse,form;L.118:S.119@type?:Q.121@S%:S.125@form assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when! resolve|~resolve! base-env!V~base-env! builtin-argc|~builtin-argc! env-rewind|~env-rewind! env-rewind-x|~env-rewind-x! use-module|~use-module! require-module|~require-module! env-export|~env-export! import-binding|~import-binding! check-argc|~check-argc! check-type|~check-type! compile-warn|~compile-warn! gen-error|~gen-error! env-rewind-M|~env-rewind-M! after|~after! gensym|~gensym! gensym-name|~gensym-name! gen-global-name|~gen-global-name! *compile-mods*!V~*compile-mods*! *compile-outfile*!V~*compile-outfile*! *compile-file*!V~*compile-file*! *compile-subject*!V~*compile-subject*! parse-text|~parse-text! parse-subject|~parse-subject! describe-error|~describe-error! describe-lnum|~describe-lnum! parse-exp|~parse-exp! parse-exp|~parse-exp! find-word|~find-word! pdec|~pdec! penc|~penc! format-form|~format-form! symbol-to-string|~symbol-to-string,iparse,form;L.650:S.651@concat:Q.653@Q!40:L.658@S.659!40word@Q.661!402@S.663!40form symbol-name|~symbol-name,iparse,form;L.552:S.553@nth:Q.555@2:S.557@form string-value|~string-value,iparse,form;L.531:S.532@nth:Q.534@2:S.536@form form-assert|~form-assert! format-form|~format-form! form-index|~form-index! form-typename|~form-typename! form-types!V~form-types! sunquoted?|#,iparse,form;L.275:S.276@type?:Q.278@!e%:S.282@form unquoted?|#,iparse,form;L.252:S.253@type?:Q.255@!a%:S.260@form qquoted?|#,iparse,form;L.229:S.230@type?:Q.232@`%:S.237@form quoted?|#,iparse,form;L.206:S.207@type?:Q.209@'%:S.214@form error?|#,iparse,form;L.184:S.185@type?:Q.187@E%:S.191@form list?|#,iparse,form;L.162:S.163@type?:Q.165@L%:S.169@form string?|#,iparse,form;L.140:S.141@type?:Q.143@Q%:S.147@form symbol?|#,iparse,form;L.118:S.119@type?:Q.121@S%:S.125@form assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
$(call ^require,parse)
$(call ^require,gen)
$(call ^require,gen0)
~begin-block = $(if $(filter 1,$(words $1)),$(call ^u,$(word 1,$1)),L.167 S.168!0begin $1)
~ml.special-current-env = Q $(call ^d,$2)
define ~ml.special-current-file-line
Q $(call ^d,$(~*compile-file*):$(call ~describe-lnum,$(or $(word 2,$(call ~hash-get,#pos,$2)),$(call ~form-index,$1)),$(~*compile-subject*)))
endef
~ml.special-concat = C $(call ~c0-vec,$(wordlist 3,99999999,$1),$2)
~subst-x = $(if $1,$(call ~subst-x,$(wordlist 3,99999999,$1),F subst $(call ^d,$(call ~nth,1,$1)) $(call ^d,$(call ~nth,2,$1)) $(call ^d,$2)),$2)
~ml.special-subst = $(call ^Y,$(wordlist 3,99999999,$1),$(call ~nth,2,$1),$2,,,,,,,$$(or $$(if $$(filter %2 %4 %6 %8 %0 1,$$(words $$1)),$$(call ~gen-error,$$2,wrong number of arguments to (subst {FROM TO}+ STR); must be multiple of 2 + 1)),$$(call ~subst-x,$$(call ~c0-vec,$$(call ~butlast,$$1),$$3),$$(call ~c0,$$(call ~promote,$$(lastword $$1)),$$3))))
~ml.special-vector = C $(subst $  , Q!0!10 ,$(call ~map-call,~il-demote,$(call ~c0-vec,$(wordlist 3,99999999,$1),$2)))
~ml.special-set = $(or $(call ~check-argc,2 or 3,$1),$(call ~check-type,S,$(call ~nth,3,$1),$1,NAME,(set NAME VALUE [RETVAL])),$(call ^Y,$(call ~resolve,$(call ~nth,3,$1),$2),$(wordlist 4,99999999,$1),$2,$(call ~nth,3,$1),,,,,,$$(if $$(if $$(filter V F,$$(word 1,$$1)),,1),$$(call ~gen-error,$$4,%q is not a global variable,$$(call ~nth,2,$$4)),$$(call ~append,f $$(call ^d,$$(if $$(filter V,$$(word 1,$$1)),^set,^fset)) $$(call ^d,Q $$(call ^d,$$(call ~nth,2,$$1))),$$(call ~c0-vec,$$2,$$3)))))
~letg-error = $(call ~check-type,$1,$2,$3,$4,(let-global ((VAR VALUE)...) BODY))
~letg-expand = $(if $(if $1,,1),$(call ~begin-block,$2),$(or $(call ~letg-error,L,$(call ^u,$(word 1,$1)),$3,(VAR VALUE)),$(call ~letg-error,S,$(call ~nth,2,$(call ^u,$(word 1,$1))),$(call ^u,$(word 1,$1)),VAR),$(call ~letg-error,,$(call ~nth,3,$(call ^u,$(word 1,$1))),$(call ^u,$(word 1,$1)),VALUE),L.1018 S.1019!0set $(call ^d,$(call ~nth,2,$(call ^u,$(word 1,$1)))) $(call ^d,L.1024 S.1025!0set $(call ^d,$(call ~nth,2,$(call ^u,$(word 1,$1)))) $(call ^d,$(call ~nth,3,$(call ^u,$(word 1,$1)))) $(call ^d,$(call ~nth,2,$(call ^u,$(word 1,$1))))) $(call ^d,$(call ~letg-expand,$(wordlist 2,99999999,$1),$2,$3))))
~ml.macro-let-global = $(or $(call ~letg-error,L,$(call ~nth,3,$1),$1,((VAR VALUE)...)),$(call ~letg-expand,$(wordlist 2,99999999,$(call ~nth,3,$1)),$(wordlist 4,99999999,$1),$1))
~ml.special-let-global = $(call ~c0,$(call ~ml.macro-let-global,$1),$2)
define ~ml.special-?
$(or $(call ~check-type,S,$(call ~nth,3,$1),$1,FUNC,(? FUNC ...)),$(if $(if $(filter-out F#,$(filter B% F%,$(subst $  ,,$(wordlist 1,2,$(call ~resolve,$(call ~nth,3,$1),$2))))),,1),$(call ~gen-error,$(call ~nth,3,$1),FUNC in (? FUNC ...) is not a function variable)),$(call ~append,f ^t $(call ^d,Q $(call ^d,$(call ~nth,2,$(call ~resolve,$(call ~nth,3,$1),$2)))),$(call ~c0-vec,$(wordlist 4,99999999,$1),$2)))
endef
~let&-env = $(call ~append,$(call ~reverse,$(foreach b,$1,$(call ~hash-bind,$(call ~nth,2,$(call ~nth,2,$(call ~promote,$b))),M $(call ^d,$(call ~nth,3,$(call ~promote,$b)))))),$2)
~let&-check = $(call ~check-type,$1,$2,$3,$4,(let ((VAR VALUE)...) BODY))
~let&-check-bindings = $(call ^u,$(word 1,$(filter-out !.,$(foreach b&,$1,$(call ^d,$(and $(or $(call ~let&-check,L,$(call ^u,$(b&)),$2,(NAME EXPR)))1,$(call ~let&-check,S,$(call ~nth,2,$(call ^u,$(b&))),$2,NAME)))))))
~ml.special-let& = $(or $(call ~let&-check,L,$(call ~nth,3,$1),$1,((NAME EXPR)...)),$(call ~let&-check-bindings,$(wordlist 2,99999999,$(call ~nth,3,$1)),$1),$(call ~c0-block,$(wordlist 4,99999999,$1),$(call ~let&-env,$(wordlist 2,99999999,$(call ~nth,3,$1)),$2)))
~let-error = $(call ~check-type,$1,$2,$3,$4,(let ((VAR VALUE)...) BODY))
~ml.macro-let = $(or $(call ~let-error,L,$(call ~nth,3,$1),$1,((VAR VALUE)...)),$(call ^u,$(word 1,$(filter-out !.,$(foreach b&,$(wordlist 2,99999999,$(call ~nth,3,$1)),$(call ^d,$(or $(call ~let-error,L,$(call ^u,$(b&)),$1,(VAR VALUE)),$(call ~let-error,S,$(call ~nth,2,$(call ^u,$(b&))),$(call ^u,$(b&)),VAR),$(call ~let-error,,$(call ~nth,3,$(call ^u,$(b&))),$(call ^u,$(b&)),VALUE))))))),$(call ~append,L $(call ^d,$(call ~append,L S!0lambda $(call ^d,$(call ~append,L,$(foreach b&,$(wordlist 2,99999999,$(call ~nth,3,$1)),$(call ^d,$(call ~nth,2,$(call ^u,$(b&))))))),$(wordlist 4,99999999,$1))),$(foreach b&,$(wordlist 2,99999999,$(call ~nth,3,$1)),$(call ^d,$(call ~nth,3,$(call ^u,$(b&)))))))
~ml.special-let = $(call ~c0,$(call ~ml.macro-let,$1),$2)
~ml.special-foreach = $(or $(call ~check-argc,3,$1),$(call ~check-type,S,$(call ~nth,3,$1),$1,VAR,(foreach VAR LIST EXPR)),$(call ^Y,$(call ~nth,3,$1),$(call ~nth,4,$1),$(call ~nth,5,$1),$2,,,,,,$$(call ~c0,L.2200 S.2201!0.foreach $$(call ^d,Q $$(word 2,$$1)) $$(call ^d,$$2) $$(call ^d,$$3),$$(call ~hash-bind,$$(call ~nth,2,$$1),V $$(word 2,$$1),$$4))))
~ml.special-for = $(call ~c0,L.2352 S.2353!0foreach $(call ^d,$(call ~gensym,$(call ~nth,3,$1))) $(call ^d,$(call ~nth,4,$1)) $(call ^d,L.2365 S.2366!0call $(call ^d,Q ^d) $(call ^d,L.2379 S.2380!0let& $(call ^d,L.2382 $(call ^d,L.2383 $(call ^d,$(call ~nth,3,$1)) $(call ^d,L.2387 S.2388!0call $(call ^d,Q ^u) $(call ^d,$(call ~gensym,$(call ~nth,3,$1)))))) $(wordlist 5,99999999,$1))),$2)
~ml.special-print = $(call ~c0,L.2454 S.2455!0info $(call ^d,L.2457 S.2458!0concat $(wordlist 3,99999999,$1)),$2)
~cond-cxt := (cond (TEST BODY)...)
~cond-expand = $(if $1,$(or $(call ~check-type,L,$1,$3,(TEST BODY),$(~cond-cxt)),$(call ~check-type,,$(call ~nth,2,$1),$1,TEST,$(~cond-cxt)),$(call ~check-type,,$(wordlist 3,99999999,$1),$1,BODY,$(~cond-cxt)),$(if $(and $(filter S%,$(word 1,$(call ~nth,2,$1))),$(call ~eq,else,$(word 2,$(call ~nth,2,$1)))),$(call ~begin-block,$(wordlist 3,99999999,$1)),L.2642 S.2643!0if $(call ^d,$(call ~nth,2,$1)) $(call ^d,$(call ~begin-block,$(wordlist 3,99999999,$1))) $(if $2,$(call ^d,$(call ~cond-expand,$(call ^u,$(word 1,$2)),$(wordlist 2,99999999,$2),$3))))))
~ml.macro-cond = $(or $(call ~cond-expand,$(call ~nth,3,$1),$(wordlist 4,99999999,$1),$1),Q !.)
~ml.special-cond = $(call ~c0,$(call ~ml.macro-cond,$1),$2)
~ml.special-local-to-global = $(or $(call ~check-argc,1,$1),C $(call ^d,Q $(call ^d,$(call ~gen-global-name,))) $(call ^d,$(call ~c0,$(call ~nth,3,$1),$2)))
~ml.special-global-name = $(or $(call ~check-argc,1,$1),$(call ~check-type,S,$(call ~nth,3,$1),$1,NAME,(get-global NAME)),$(if $(filter V F,$(word 1,$(call ~resolve,$(call ~nth,3,$1),$2))),Q $(call ^d,$(call ~nth,2,$(call ~resolve,$(call ~nth,3,$1),$2))),$(call ~gen-error,$(call ~nth,3,$1),%q is not a global variable,$(call ~nth,2,$(call ~nth,3,$1)))))
~ml.special-defmacro = $(or $(call ~check-type,L,$(call ~nth,3,$1),$1,(NAME ARG...),(defmacro (NAME ARG...) BODY...)),$(call ~check-type,S,$(call ~nth,2,$(call ~nth,3,$1)),$(call ~nth,3,$1),NAME,(defmacro (NAME ARG...) ...)),$(call ^Y,$(call ~c0,$(call ~append,L $(call ^d,S define),$(wordlist 3,99999999,$1)),$2,$3),,,,,,,,,$$(call ~append,env $$(call ^d,$$(call ~hash-bind,$$(call ~nth,2,$$(call ~nth,2,$$(call ~nth,3,$(call ^e,$1)))),X $$(call ^d,$$(call ~gen-global-name,$$(call ~nth,2,$$(call ~nth,2,$$(call ~nth,3,$(call ^e,$1)))))),$$(call ~nth,2,$$1))),$$(wordlist 3,99999999,$$1))))
~ml.special-use = $(or $(call ~check-argc,1,$1),$(call ~check-type,Q,$(call ~nth,3,$1),$1,NAME,(use NAME)),$(call ^Y,$(call ~use-module,$(call ~nth,2,$(call ~nth,3,$1))),$2,,,,,,,,$$(if $$1,$$(call ~append,$$(if $(call ^e,$3),env $$(call ^d,$$(call ~append,$$1,$$2))),$$(or $$(if ,,),Q)))),$(call ~gen-error,use: Cannot find module %q,$(call ~nth,2,$(call ~nth,3,$1))))

endef
 
define ///num.min
# compiled from num.scm
# Requires: core runtime
# Requires: scam-ct
# Exports: sum|~sum sum-small|~sum-small range|~range 0-|~0- u-range|~u-range mod|~mod mod-9|~mod-9 mod-5|~mod-5 mod-3|~mod-3 mod-2|~mod-2 mod-1|~mod-1 div-10|~div-10 mod-10|~mod-10 mod-10|~mod-10 umod|~umod /|~/ u/|~u/ longdiv|~longdiv longdiv-next|~longdiv-next longdiv|~longdiv digit-range|~digit-range strdiv|~strdiv topdigits|~topdigits ==|~== <=|~<= >=|~>= <|~< >|~> ^|~^ *|~* -|~- +|~+ u^|~u^ u^2|~u^2 u/2|~u/2 nodd|~nodd cmp|~cmp ucmp|~ucmp u-|~u- ndecode|~ndecode u*|~u* u+1|~u+1 u+|~u+ ucarry|~ucarry udecode|~udecode uencode|~uencode nnorm|~nnorm sign|~sign assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
~sign = $(findstring -,$1)
~nnorm = $(strip $(subst ., .,$(call ~butlast,$(subst -.,- .,$(subst i.,i .,$(subst $  ,,$1.))))))
~uencode = $(call ~reverse,$(subst 0, .,$(subst -,,$(subst 1,0i,$(subst 2,1i,$(subst 3,2i,$(subst 4,3i,$(subst 5,4i,$(subst 6,5i,$(subst 7,6i,$(subst 8,7i,$(subst 9,8i,$1))))))))))))
~udecode = $(and $(findstring i,$1),$2)$(or $(subst 8i,9,$(subst 7i,8,$(subst 6i,7,$(subst 5i,6,$(subst 4i,5,$(subst 3i,4,$(subst 2i,3,$(subst 1i,2,$(subst 0i,1,$(subst .,0,$(subst $  ,,$(wordlist 2,99999999,$(subst .i, .i,.$(subst $  ,,$(call ~reverse,$1))))))))))))))),0)
~ucarry = $(call ~while,$$(findstring iiiiiiiiii .,$$1),$$(subst iiiiiiiiii ., .i,$$1),$1 .)
~u+ = $(call ~ucarry,$(subst ..,.,$(subst i.,i,$(join $1,$2))))
~u+1 = $(call ~ucarry,$(join $(or $1,.),i))
~u* = $(call ~u+,$(subst i,$(subst .,,$(firstword $1)),$2),$(if $(word 2,$1),$(call ~u*,$(wordlist 2,99999999,$1),. $2)))
~ndecode = $(call ~udecode,$(if $(findstring -,$1),$(wordlist 2,$(words $1),. $(call ~u+1,$(foreach d,$1,$(subst $d,.,.iiiiiiiii)))),$1),$(findstring -,$1))
~u- = $(call ~nnorm,$(subst .i-,.,$(call ~u+,$1,$(join $(foreach d,$(subst ..,.,$(join $(subst i,,$1),$2)),$(subst $d,.,.iiiiiiiii)),i) .-)))
~ucmp = $(if $(or $1,$2),$(or $(call ~ucmp,$(wordlist 2,99999999,$1),$(wordlist 2,99999999,$2)),$(if $(findstring $(word 1,$2)i,$(word 1,$1)),a),$(if $(findstring $(word 1,$1)i,$(word 1,$2)),b)))
~cmp = $(call ^Y,$(call ~sign,$1),$(call ~sign,$2),$(call ~uencode,$1),$(call ~uencode,$2),,,,,,$$(if $$(call ~xor,$$1,$$2),$$(and $$(or $$(findstring i,$$3),$$(findstring i,$$4)),$$(if $$2,a,b)),$$(filter a b,$$(subst -a,b,$$(subst -b,a,$$1$$(call ~ucmp,$$3,$$4))))))
~nodd = $(findstring i,$(subst ii,,$(word 1,$1)))
~u/2 = $(call ~nnorm,$(wordlist 2,99999999,$(call ~ucarry,$(subst i,iiiii,$1))))
~u^2 = $(call ~u*,$1,$1)
~u^ = $(if $(call ~nodd,$2),$(call ~nnorm,$(call ~u*,$1,$(call ~u^2,$(call ~u^,$1,$(call ~u/2,$2))))),$(if $(findstring i,$2),$(call ~nnorm,$(call ~u^2,$(call ~u^,$1,$(call ~u/2,$2)))),.i))
~+ = $(call ^Y,$(call ~sign,$1),$(call ~sign,$2),$(call ~uencode,$1),$(call ~uencode,$2),,,,,,$$(if $$(call ~xor,$$1,$$2),$$(call ~ndecode,$$(if $$2,$$(call ~u-,$$3,$$4),$$(call ~u-,$$4,$$3))),$$(call ~udecode,$$(call ~u+,$$3,$$4),$$1)))
~- = $(call ~+,$1,$(subst --,,-$2))
~* = $(call ~udecode,$(call ~u*,$(call ~uencode,$1),$(call ~uencode,$2)),$(call ~xor,$(call ~sign,$1),$(call ~sign,$2)))
~^ = $(call ^Y,$(call ~sign,$1),$(call ~sign,$2),$(call ~uencode,$1),$(call ~uencode,$2),,,,,,$$(if $$2,nan,$$(call ~udecode,$$(call ~u^,$$3,$$4),$$(and $$1,$$(call ~nodd,$$4),-))))
~> = $(if $(filter a,$(call ~cmp,$1,$2)),1)
~< = $(if $(filter b,$(call ~cmp,$1,$2)),1)
$(if ,,~>=) = $(if $(filter b,$(call ~cmp,$1,$2)),,1)
$(if ,,~<=) = $(if $(filter a,$(call ~cmp,$1,$2)),,1)
$(if ,,~==) = $(if $(call ~cmp,$1,$2),,1)
~topdigits = $(call ^Y,$(wordlist $2,99999999,$1),,,,,,,,,$$(subst .,,$$(word 1,$$1)$$(subst i,iiiiiiiiii,$$(word 2,$$1)$$(subst i,iiiiiiiiii,$$(word 3,$$1)))))
~strdiv = $(subst I,i,$(subst i,,$(subst $2,I,$1)))
~digit-range = $(call ^Y,$(call ~topdigits,$1,$5),$(call ~topdigits,$2,$5),$3,$4,,,,,,.$$(call ~strdiv,$$1,$$2$$(if $$4,i)) .$$(patsubst iiiiiiiii%,iiiiiiiii,$$(call ~strdiv,$$1$$(if $$3,i),$$2)))
~longdiv-next = $(call ~append,$(if $3,$(call ~longdiv,$(call ~append,$(lastword $3),$2),$(call ~butlast,$3),$4)),$1)
~longdiv = $(call ^Y,$(call ~digit-range,$1,$3,$2,$(word 3,$3),$(patsubst 0,1,$(words $(wordlist 2,99999999,$3)))),$1,$3,$2,,,,,,$$(call ^Y,$$(call ~u-,$$2,$$(call ~ucarry,$$(subst i,$$(subst .,,$$(word 1,$$1)),$$3))),$$2,$$3,$$4,$$(word 1,$$1),$$(word 2,$$1),,,,$$$$(if $$$$(or $$$$(call ~eq,$$$$5,$$$$6),$$$$(filter b,$$$$(call ~ucmp,$$$$1,$$$$3))),$$$$(call ~longdiv-next,$$$$5,$$$$1,$$$$4,$$$$3),$$$$(call ~longdiv-next,$$$$6,$$$$(call ~u-,$$$$1,$$$$3),$$$$4,$$$$3))))
~u/ = $(if $(word $(words . $2),$1),$(call ~u/,$(wordlist 2,99999999,$1),$2,$(call ~append,$3,$(call ^u,$(word 1,$1)))),$(call ~longdiv,$1,$3,$2))
~/ = $(call ^Y,$(call ~sign,$1),$(call ~sign,$2),$(call ~nnorm,$(call ~uencode,$1)),$(call ~nnorm,$(call ~uencode,$2)),,,,,,$$(if $$(if $$4,,1),nan,$$(call ~udecode,$$(call ~u/,$$3,$$4),$$(call ~xor,$$1,$$2))))
~umod = $(call ^Y,$1,$2,$(subst .,,$2),$(subst $(subst .,,$2),,iiiiiiiiii),,,,,,$$(if $$(call ~eq,$$4,),$$(subst $$3,,$$(word 1,$$1)),$$(if $$(call ~eq,$$4,i),.$$(subst $$3,,$$(subst $$  ,,$$(subst .,,$$1))),$$(call ~u-,$$1,$$(call ~u*,$$(call ~u/,$$1,$$2),$$2)))))
~mod-10 = $(if $(filter %1 %2 %3 %4,$1),$(if $(filter %1 %2,$1),$(if $(filter %1,$1),1,2),$(if $(filter %3,$1),3,4)),$(if $(filter %5 %6 %7 %8,$1),$(if $(filter %5 %6,$1),$(if $(filter %5,$1),5,6),$(if $(filter %7,$1),7,8)),$(if $(filter %9,$1),9,0)))
~mod-10 = $(if $(filter %8 %9,$1),$(if $(filter %8,$1),8,9),$(words $(filter %1 %3 %5 %7 %9,$1)$(if $(filter %2 %3 %6 %7,$1), 1 1)$(if $(filter %4 %5 %6 %7,$1), 1 1 1 1)))
~div-10 = $(patsubst %$(call ~mod-10,$1),%,$1)
~mod-1 = 0
~mod-2 = $(if $(filter %1 %3 %5 %7 %9,$1),1,0)
~mod-3 = $(or $(subst 11,2,$(subst 111,,$(subst 2,11,$(subst 5,11,$(subst 8,11,$(subst 4,1,$(subst 7,1,$(subst 3,,$(subst 6,,$(subst 9,,$(subst 0,,$1))))))))))),0)
~mod-5 = $(word $(subst 0,10,$(call ~mod-10,$1)),1 2 3 4 0 1 2 3 4 0)
~mod-9 = $(words $(subst 1,1 ,$(subst 111111111,,$(subst 2,11,$(subst 3,21,$(subst 4,31,$(subst 5,41,$(subst 6,51,$(subst 7,61,$(subst 8,71,$(subst 9,,$(subst 0,,$1))))))))))))
~mod = $(if $(filter 1 2 3 5 9 10,$2),$(call ~mod-$2,$1),$(call ^Y,$(call ~sign,$1),$(call ~nnorm,$(call ~uencode,$1)),$(call ~nnorm,$(call ~uencode,$2)),,,,,,,$$(if $$(if $$3,,1),nan,$$(call ~udecode,$$(call ~umod,$$2,$$3),$$1))))
~u-range = $(if $(call ~>=,$1,$2),$(if $(call ~==,$1,$2),$1),$(if $(filter %0,$1),$(if $(filter %9,$2),$(if $(filter 0,$1),0 1 2 3 4 5 6 7 8 9 )$(foreach n,$(call ~u-range,$(or $(patsubst %0,%,$1),1),$(or $(patsubst %9,%,$2),0)),$n0 $n1 $n2 $n3 $n4 $n5 $n6 $n7 $n8 $n9 ),$(call ~u-range,$1,$(call ~-,$2,1)) $2),$1 $(call ~u-range,$(call ~1+,$1),$2)))
~0- = $(subst --,,-$(or $1,0))
~range = $(strip $(if $(call ~>=,$1,0),$(call ~u-range,$1,$2),$(addprefix -,$(call ~reverse,$(call ~u-range,$(if $(call ~<,$2,0),$(call ~0-,$2),1),$(call ~0-,$1)))) $(if $(call ~>=,$2,0),$(call ~u-range,0,$2))))
~sum-small = $(if $1,$(call ~+,$(word 1,$1),$(call ~sum-small,$(wordlist 2,99999999,$1))),0)
~sum = $(if $(word 50,$1),$(call ~+,$(call ~sum,$(wordlist 1,$(call ~/,$(words $1),2),$1)),$(call ~sum,$(wordlist $(call ~1+,$(call ~/,$(words $1),2)),99999999,$1))),$(call ~sum-small,$1))

endef
 
define ///parse.min
# compiled from parse.scm
# Requires: core runtime
# Requires: scam-ct
# Exports: parse-text|~parse-text parse-subject|~parse-subject parse-subj-r|~parse-subj-r,p describe-error|~describe-error natural?|~natural?,p get-error-desc|~get-error-desc,p describe-line|~describe-line,p describe-lnum|~describe-lnum parse-exp|~parse-exp parse-x|~parse-x,p parse-x2|~parse-x2,p parse-array|~parse-array,p parse-seq|~parse-seq,p parse-seq-err|~parse-seq-err,p new-Q|~new-Q,p parse-exp|~parse-exp find-word|~find-word pdec-str|~pdec-str,p pdec|~pdec penc|~penc expand-spaces|~expand-spaces,p compress-spaces|~compress-spaces,p compact-comments|~compact-comments,p format-form|~format-form symbol-to-string|~symbol-to-string,!1.,form;L.650:S.651@concat:Q.653@Q!40:L.658@S.659!40word@Q.661!402@S.663!40form symbol-name|~symbol-name,!1.,form;L.552:S.553@nth:Q.555@2:S.557@form string-value|~string-value,!1.,form;L.531:S.532@nth:Q.534@2:S.536@form form-assert|~form-assert format-form|~format-form form-index|~form-index form-typename|~form-typename form-types!V~form-types sunquoted?|#,!1.,form;L.275:S.276@type?:Q.278@!e%:S.282@form unquoted?|#,!1.,form;L.252:S.253@type?:Q.255@!a%:S.260@form qquoted?|#,!1.,form;L.229:S.230@type?:Q.232@`%:S.237@form quoted?|#,!1.,form;L.206:S.207@type?:Q.209@'%:S.214@form error?|#,!1.,form;L.184:S.185@type?:Q.187@E%:S.191@form list?|#,!1.,form;L.162:S.163@type?:Q.165@L%:S.169@form string?|#,!1.,form;L.140:S.141@type?:Q.143@Q%:S.147@form symbol?|#,!1.,form;L.118:S.119@type?:Q.121@S%:S.125@form assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
~form-types := $(call ~hash-bind,L,list,$(call ~hash-bind,Q,literal string,$(call ~hash-bind,S,symbol)))
~form-typename = $(or $(call ~hash-get,$(word 1,$1),$(~form-types)),invalid form)
~form-index = $(word 2,$(subst ., ,$(word 1,$1)))
define ~form-assert
$(if $(filter $1%,$(word 1,$2)),$2,$(error $(if ,,$3: expected $(call ~form-typename,$1), got $(call ~form-typename,$2):
$(call ~format-form,$2)
)))
endef
~string-value = $(call ~nth,2,$1)
~symbol-name = $(call ~nth,2,$1)
~symbol-to-string = Q $(word 2,$1)
~format-form = $(if $(filter L%,$(word 1,$1)),($(foreach n,$(wordlist 2,99999999,$1),$(call ~format-form,$(call ~promote,$n)))),$(if $(filter Q%,$(word 1,$1)),$(call ~format,$(call ~nth,2,$1)),$(if $(filter S%,$(word 1,$1)),$(call ~nth,2,$1),$(if $(filter '%,$(word 1,$1)),'$(call ~format-form,$(call ~nth,2,$1)),$(if $(filter `%,$(word 1,$1)),`$(call ~format-form,$(call ~nth,2,$1)),$(if ,,,$(call ~format,$1)))))))
define ~compact-comments
$(subst ; ;,;;,$(subst !s, ,$(subst $  ,,$(foreach c,$(subst ;, ;,$(subst 
, 
,$(subst ", ",$(subst $  ,!s,$1)))),$(if $(filter ;%,$c),$(subst !s,,$c)!s,$c)))))
endef
define ~compress-spaces
$(subst !6!6,!c,$(subst !2!0!2!0,!6,$(subst !0!0!0,!0!2,$(subst 
!0!0,
!2,$(subst 
 !0,
!0,$1)))))
endef
~expand-spaces = $(subst !2,!0!0,$(subst !6,!2!2!2,$(subst !c,!6!6,$1)))
define ~penc
$(call ~compress-spaces,$(call ~compact-comments,$(subst !+, !0!+ ,$(subst $   , ,$(subst 0  !,0!,$(subst $[, $[ ,$(subst $], $] ,$(subst [, [ ,$(subst ], ] ,$(subst ", " ,$(subst 
, 
 ,$(subst !0, !0 ,$(subst ;, ; ,$(subst \",!Q,$(subst \\,!b,$(subst ', ' ,$(subst `, ` ,$(subst $(if ,,, @),$(if ,,,@ ),$(subst $(if ,,,),$(if ,, , ),$(if $1,$(call ~demote,$1)))))))))))))))))))))
endef
~pdec = $(call ~promote,$(call ~expand-spaces,$(subst !b,\\,$(subst !Q,\",$(subst $  ,,$(subst !0!+,!+,$1))))))
define ~pdec-str
$(or $(call ~expand-spaces,$(subst !b,\,$(subst !Q,",$(subst \n,
,$(subst \t,!+,$(subst $  ,,$(subst !0!+,!+,$1))))))),!.)
endef
~find-word = $(foreach p,$(call ~1+,$(call ~1+,$2)),$(if $(filter $3,$(or $(wordlist $2,$p,$1),$3)),$(if $(filter $3,$(or $(word $2,$1),$3)),$2,$(foreach q,$(call ~1+,$2),$(if $(filter $3,$(or $(word $q,$1),$3)),$q,$p))),$(call ~find-word,$1,$(call ~1+,$p),$3)))
~new-Q = $(if $(word $3,$1),$3 Q.$2 $(call ~pdec-str,$(subst ",,$(wordlist $2,$3,$1))),$3 E.$2 ")
~parse-seq-err = $(if $(filter .,$(word 3,$3)),$(word 1,$2) E.$(word 1,$2) $(subst ],[,$(subst $],$[,$1)),$3 $1)
~parse-seq = $(if $(filter E%,$(word 2,$4)),$(if $(and $(filter $2,$(word 3,$4)),$(if $(word 4,$4),,1)),$(word 1,$4) L.$3 $5,$(call ~parse-seq-err,$2,$3,$4)),$(call ~parse-seq,$1,$2,$3,$(call ~parse-exp,$1,$(call ~1+,$(word 1,$4))),$(if $(word 2,$4),$(call ~conj,$5,$(wordlist 2,99999999,$4)))))
~parse-array = $(call ~parse-seq,$1,],$2 S!0vector,$2)
~parse-x2 = $(if $(filter E%,$(word 2,$3)),$(if $(filter .,$(word 3,$3)),$2 E.$2 $1,$3),$(call ~append,$(word 1,$3),$(or $(filter $(if ,,' ` , @),$(patsubst $(if ,,,@),@,$1)),$(error $(call ^Y,$1,,,,,,,,,Impossible x2: ))).$2 $(call ^d,$(wordlist 2,99999999,$3))))
define ~parse-x
$(if $(filter !0% 
% ;%,$(word $(call ~1+,$3),$2)),$3 E.$3 $1,$(call ~parse-x2,$1,$3,$(call ~parse-exp,$2,$(call ~1+,$3))))
endef
define ~parse-exp
$(or $(foreach w,$(word $2,$1),$(if $(filter !0% 
%,$w),$(call ~parse-exp,$1,$(call ~1+,$2)),$(if $(filter $] ],$w),$2 E.$2 $w,$(if $(filter $[,$w),$(call ~parse-seq,$1,$],$2,$2),$(if $(filter ",$w),$(call ~new-Q,$1,$2,$(call ~find-word,$1,$(call ~1+,$2),")),$(if $(filter ;%,$w),$(call ~parse-exp,$1,$(call ~1+,$(call ~find-word,$1,$2,
%))),$(if $(filter [,$w),$(call ~parse-array,$1,$2),$(if $(filter $(if ,,' ` , ,@),$w),$(call ~parse-x,$w,$1,$2),$(if $(call ~isnumber,$w),$2 Q.$2 $w,$2 S.$2 $w))))))))),$2 E.$2 .)
endef
define ~describe-lnum
$(words 1 $(filter 
,$(subst 
,
 ,$(wordlist 2,$(or $1,1),x$2))))
endef
define ~describe-line
$(call ^Y,$(call ~promote,$(lastword $(call ~split,
,$(wordlist 2,$(or $1,1),X $2)))),$(call ^u,$(word 1,$(call ~split,
,$(wordlist $(or $1,1),99999999,$2)))),,,,,,,,$$(call ^d,$$(call ~pdec,$$1)) $$(call ^d,$$(call ~pdec,$$(word 1,$$2))) $$(call ^d,$$(call ~pdec,$$(wordlist 2,99999999,$$2))))
endef
~get-error-desc = $(if $(filter ` ',$1),prefix "$1" must immediately precede expression,$(if $(filter ( ) [ ],$1),unmatched "$1",$(if $(filter ",$1),unterminated string,$1)))
~natural? = $(call ~isnumber,$(subst 0,,$(subst .,~,$(subst -,~,$(subst e,~,$(subst E,~,$1))))))
define ~describe-error
$(if $(if $(and $(filter E%,$(word 1,$1)),$(call ~natural?,$(or $(call ~form-index,$1),1))),,1),(internal error: bad error form)
,$(call ^Y,$(call ~penc,$2),$(call ~get-error-desc,$(call ~nth,2,$1)),$(if $3,$3:,line ),$(call ~form-index,$1),,,,,,$$3$$(call ~describe-lnum,$$4,$$1): $$2
at: $$(call ~concat-vec,$$(call ~describe-line,$$4,$$1),*)
))
endef
~parse-subj-r = $(if $(filter E%,$(word 2,$2)),$(if $(filter .,$(word 3,$2)),$3,$(call ~conj,$3,$(wordlist 2,99999999,$2))),$(call ~parse-subj-r,$1,$(call ~parse-exp,$1,$(call ~1+,$(word 1,$2))),$(call ~conj,$3,$(wordlist 2,99999999,$2))))
~parse-subject = $(call ~parse-subj-r,$1,$(call ~parse-exp,$1,1))
~parse-text = $(call ~parse-subject,$(call ~penc,$1))

endef
 
define ///repl.min
# compiled from repl.scm
# Requires: core io parse compile num runtime
# Requires: scam-ct
# Exports: repl-file|~repl-file repl-rep|~repl-rep repl|~repl initial-state!=M,L.1178;S.1179:eval-and-print;L.1181:S.1182@concat:Q.1184@(declare!40*1!40&global)!n:Q.1195@(declare!40*2!40&global)!n:L.1206@S.1207!40foreach@S.1209!40lib@S.1211!40LIBS@L.1213!40S.1214!50concat!40Q.1216!50(require!510"!40S.1223!50lib!40Q.1225!50"):Q.1232@!n;L.1237:S.1238@compile-prelude,!1. read-eval-print|~read-eval-print eval-and-print|~eval-and-print describe-env|~describe-env describe-binding|~describe-binding envtypes!V~envtypes help|~help *2!V*2 *1!V*1 LIBS!V~LIBS sum|~sum! sum-small|~sum-small! range|~range! 0-|~0-! u-range|~u-range! mod|~mod! mod-9|~mod-9! mod-5|~mod-5! mod-3|~mod-3! mod-2|~mod-2! mod-1|~mod-1! div-10|~div-10! mod-10|~mod-10! mod-10|~mod-10! umod|~umod! /|~/! u/|~u/! longdiv|~longdiv! longdiv-next|~longdiv-next! longdiv|~longdiv! digit-range|~digit-range! strdiv|~strdiv! topdigits|~topdigits! ==|~==! <=|~<=! >=|~>=! <|~<! >|~>! ^|~^! *|~*! -|~-! +|~+! u^|~u^! u^2|~u^2! u/2|~u/2! nodd|~nodd! cmp|~cmp! ucmp|~ucmp! u-|~u-! ndecode|~ndecode! u*|~u*! u+1|~u+1! u+|~u+! ucarry|~ucarry! udecode|~udecode! uencode|~uencode! nnorm|~nnorm! sign|~sign! compile-file|~compile-file! construct-file|#,icompile,infile:exports:exe:reqs:uses;L.605:S.606@concat:Q.608@#!40compiled!40from!40:S.617@infile:Q.619@!n:L.623@S.624!40if@S.626!40reqs@L.628!40S.629!50concat!40Q.631!50#!510Requires!c!510!40S.638!50reqs!40Q.640!50!n:L.646@S.647!40if@S.649!40uses@L.651!40S.652!50concat!40Q.654!50#!510Requires!c!510!40S.661!50uses!40Q.663!50!n:S.669@exports:S.671@exe compile-prelude|~compile-prelude! compile-text|~compile-text! ct-mod!=M,Q.283;scam-ct,icompile rt-mod!=M,Q.266;runtime,icompile parse-text|~parse-text! parse-subject|~parse-subject! describe-error|~describe-error! describe-lnum|~describe-lnum! parse-exp|~parse-exp! parse-exp|~parse-exp! find-word|~find-word! pdec|~pdec! penc|~penc! format-form|~format-form! symbol-to-string|~symbol-to-string,iparse,form;L.650:S.651@concat:Q.653@Q!40:L.658@S.659!40word@Q.661!402@S.663!40form symbol-name|~symbol-name,iparse,form;L.552:S.553@nth:Q.555@2:S.557@form string-value|~string-value,iparse,form;L.531:S.532@nth:Q.534@2:S.536@form form-assert|~form-assert! format-form|~format-form! form-index|~form-index! form-typename|~form-typename! form-types!V~form-types! sunquoted?|#,iparse,form;L.275:S.276@type?:Q.278@!e%:S.282@form unquoted?|#,iparse,form;L.252:S.253@type?:Q.255@!a%:S.260@form qquoted?|#,iparse,form;L.229:S.230@type?:Q.232@`%:S.237@form quoted?|#,iparse,form;L.206:S.207@type?:Q.209@'%:S.214@form error?|#,iparse,form;L.184:S.185@type?:Q.187@E%:S.191@form list?|#,iparse,form;L.162:S.163@type?:Q.165@L%:S.169@form string?|#,iparse,form;L.140:S.141@type?:Q.143@Q%:S.147@form symbol?|#,iparse,form;L.118:S.119@type?:Q.121@S%:S.125@form file-exists?|~file-exists?! read-lines|~read-lines! read-file|~read-file! write-file|~write-file! getline|~getline! shell!1|~shell!2! printn|~printn! echo-command|~echo-command! quote-sh-arg|~quote-sh-arg! xshell|~xshell! SCAM_DEBUG!VSCAM_DEBUG! assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
$(call ^require,io)
$(call ^require,parse)
$(call ^require,compile)
$(call ^require,num)
~LIBS := core io parse escape gen0 gen1 compile num
*1 := 
*2 := 
define ~help
$(info Commands:
  :q or ^D : exit REPL loop
  :        : reset input state
  :e       : show environment
  :E       : show environment (including imported entries)
  ?        : this message

Global variables in REPL:
  *1 = most recent value printed
  *2 = second most recent value

)
endef
~envtypes := $(call ~append,$(call ~hash-bind,F,function),$(call ~hash-bind,V,variable),$(call ~hash-bind,B,builtin))
define ~describe-binding
$(if $(filter M,$(word 1,$1)),symbol macro: $(call ~format-form,$(call ~nth,2,$1)),$(or $(and $(filter F,$(word 1,$1)),$(filter #,$(call ~nth,2,$1)),compound macro),$(call ~hash-get,$(word 1,$1),$(~envtypes)),<unknown>)$(if $(call ~nth,4,$1),$(call ~sprintf,: (%s) -> %s,$(call ^u,$(word 1,$(call ~nth,4,$1))),$(foreach _f,$(wordlist 2,99999999,$(call ~nth,4,$1)),$(call ~format-form,$(call ~promote,$(_f)))))))
endef
~describe-env = $(foreach w,$(call ~reverse,$(call ~hash-compact,$1)),$(if $(or $2,$(if $(call ~nth,3,$(call ~nth,2,$(subst !=, ,$w))),,1)),$(call ~printf,  %s : %s,$(call ~promote,$(subst !8,%,$(word 1,$(subst !=, ,$w)))),$(call ~describe-binding,$(call ~nth,2,$(subst !=, ,$w))))))
~eval-and-print = $(call ^Y,$(call ~compile-text,$1,$2,[console],),$2,$1,,,,,,,$$(if $$(filter $$[ [,$$(word 2,$$(call ^u,$$(word 1,$$(call ~nth,1,$$1))))),$$(call ^d,$$3) $$(call ^d,$$2),$$(if $$(filter .,$$(word 2,$$(call ^u,$$(word 1,$$(call ~nth,1,$$1))))),!. $$(call ^d,$$2),$$(if $$(call ~nth,1,$$1),$$(and $$(foreach err&,$$(call ~nth,1,$$1),$$(call ^d,$$(info $$(call ~describe-error,$$(call ^u,$$(err&)),$$3))))1,!. $$(call ^d,$$2)),$$(and $$(call ^set,*2,$$(call ^set,*1,$$(call ^Y,,,,,,,,,,$$(call ~nth,2,$$1)),$$(*1)))1,$$(if $$(*1),$$(info $$(call ~format,$$(*1))))1,!. $$(call ^d,$$(call ~nth,3,$$1)))))))
define ~read-eval-print
$(call ^Y,$(call ~getline,$(if $(call ^u,$(word 1,$1)),+ ,> )),$(call ~nth,1,$1),$(call ~nth,2,$1),$1,,,,,,$$(if $$(call ~eq,$$1,?
),$$(and $$(call ~help)1,$$4),$$(if $$(call ~eq,$$1,:
),!. $$(call ^d,$$3),$$(if $$(call ~eq,$$1,:q
),,$$(if $$(call ~eq,$$1,),,$$(if $$(call ~eq,$$1,:e
),$$(and $$(call ~describe-env,$$3)1,$$4),$$(if $$(call ~eq,$$1,:E
),$$(and $$(call ~describe-env,$$3,1)1,$$4),$$(call ~eval-and-print,$$2$$1,$$3))))))))
endef
define ~repl
$(and $(info SCAM interactive mode. Type '?' for help.)1,$(call ~while,$(value ~identity),$(value ~read-eval-print),$(call ~eval-and-print,(declare *1 &global)
(declare *2 &global)
$(foreach lib,$(~LIBS),(require "$(lib)"))
,$(call ~compile-prelude)))1,$(info ))
endef
define ~repl-rep
$(call ^Y,$(call ~compile-text,$1,$(call ~nth,2,$(call ~eval-and-print,(declare *1 &global)
(declare *2 &global)
$(foreach lib,$(~LIBS),(require "$(lib)"))
,$(call ~compile-prelude))),$(or $2,[commandline]),),,,,,,,,,$$(if $$(call ~nth,1,$$1),$$(and $$(foreach err&,$$(call ~nth,1,$$1),$$(call ^d,$$(info $$(call ~describe-error,$$(call ^u,$$(err&)),$(call ^e,$1)))))1,1),$$(info $$(call ^Y,,,,,,,,,,$$(call ~nth,2,$$1)))))
endef
~repl-file = $(call ^Y,$(call ~read-file,$1),,,,,,,,,$$(if $$1,$$(call ^Y,$$(call ~compile-text,$$1,$$(call ~compile-prelude),$(call ^e,$1),///~,),,,,,,,,,$$$$(if $$$$(call ~nth,1,$$$$1),$$$$(and $$$$(foreach err&,$$$$(call ~nth,1,$$$$1),$$$$(call ^d,$$$$(info $$$$(call ~describe-error,$$$$(call ^u,$$$$(err&)),$$(call ^e,$$1),$(call ^e,$1,2)))))1,1),$$$$(eval $$$$(call ~nth,2,$$$$1)))),$$(and $$(call ~printf,error: empty/missing file %q,$(call ^e,$1))1,1)))

endef
 
define ///runtime.min
# compiled from runtime.scm
# Exports: SCAM_MAIN!VSCAM_MAIN ^start|^start start|~start *started*!V*started* ^require|^require ^required-files!V~^required-files run-hooks|~run-hooks add-hook|~add-hook *hooks*!V~*hooks* bound?|#,!1.,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,!1.,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,!1.,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,!1.,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,!1.,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,!1.,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,!1. apply|~apply set-rglobal|~set-rglobal set-global|~set-global nth|~nth demote|~demote promote|~promote ^e|^e ^ed|~^ed ^es|~^es ^fset|^fset ^set|^set esc-LHS|~esc-LHS esc-RHS|#,p,str;L.1040:S.1041@subst:Q.1043@$:Q.1047@$$:Q.1051@#:Q.1055@$&:Q.1059@!n:Q.1063@$!5:S.1067@str ^t|^t F!=M,L.830;S.831:global-name;S.833:^f,!1. TC!=M,L.817;S.818:global-name;S.820:^tc,!1. ^ta|^ta ^tc|~^tc ^tp|^tp ^f|~^f ^apply|~^apply ^av|^av ^Y|^Y ^n|^n ^u|^u ^d|^d SCAM_DEBUG!VSCAM_DEBUG SCAM_MODS!VSCAM_MODS abspath!=B,abspath,b basename!=B,basename,b dir!=B,dir,b error!=B,error,b eval!=B,eval,b firstword!=B,firstword,b flavor!=B,flavor,b info!=B,info,b lastword!=B,lastword,b notdir!=B,notdir,b origin!=B,origin,b realpath!=B,realpath,b shell!=B,shell,b sort!=B,sort,b strip!=B,strip,b suffix!=B,suffix,b value!=B,value,b warning!=B,warning,b wildcard!=B,wildcard,b words!=B,words,b addprefix!=B,addprefix,b addsuffix!=B,addsuffix,b filter!=B,filter,b filter-out!=B,filter-out,b findstring!=B,findstring,b join!=B,join,b word!=B,word,b .foreach!=B,foreach,b patsubst!=B,patsubst,b .subst!=B,subst,b wordlist!=B,wordlist,b if!=B,if,b and!=B,and,b or!=B,or,b call!=B,call,b *args*!V^av,b MAKEFILE_LIST!VMAKEFILE_LIST,b .DEFAULT_GOAL!V.DEFAULT_GOAL,b
SCAM_DEBUG ?=
$(if $(if $(findstring R,$(SCAM_DEBUG)),$(info runtime: $(lastword $(MAKEFILE_LIST)))),)
define \n


endef
 [ := (
 ] := )
& := \#
! := $(\n)

^d = $(or $(subst $  ,!0,$(subst $ 	,!+,$(subst !,!1,$1))),!.)
^u = $(subst !1,!,$(subst !+,	,$(subst !0, ,$(subst !.,,$1))))
^n = $(call ^u,$(word $1,$2))
^Y = $(call if,,,$(10))
^av = $(subst !.,!. ,$(filter-out %!,$(subst !. ,!.,$(foreach n,1 2 3 4 5 6 7 8,$(call ^d,$($n)))$(if $9, $9) !)))
~^apply = $(call ^Y,$(call ^n,1,$2),$(call ^n,2,$2),$(call ^n,3,$2),$(call ^n,4,$2),$(call ^n,5,$2),$(call ^n,6,$2),$(call ^n,7,$2),$(call ^n,8,$2),$(wordlist 9,9999,$2),$1)
~^f = "$(subst ",\",$(subst \,\\,$1))"
^tp = $(info $1 $(call ~^f,$2))$2
~^tc = $(call $1,$2,$3,$4,$5,$6,$7,$8,$(call ^n,1,$9),$(wordlist 2,9999,$9))
^ta = $(if $(or $1,$2,$3,$4,$5,$6,$7,$8,$9), $(~^f)$(call ~^tc,^ta,$2,$3,$4,$5,$6,$7,$8,$9))
^t = $(info --> ($1$(call ~^tc,^ta,$2,$3,$4,$5,$6,$7,$8,$9)))$(call ^tp,<-- $1:,$(call ~^tc,$1,$2,$3,$4,$5,$6,$7,$8,$9))
define ~esc-LHS
$$(if ,,$(subst $],$$],$(subst $[,$$[,$(subst 
,$$!,$(subst #,$$&,$(subst $$,$$$$,$1))))))
endef
define ^set
$(eval $(call ~esc-LHS,$1) :=$$ $(subst 
,$$!,$(subst #,$$&,$(subst $$,$$$$,$2))))$3
endef
define ^fset
$(and $(eval define $(call ~esc-LHS,$1)
$(subst \$ 
,\$$ 
,$(subst define,$$ define,$(subst endef,$$ endef,$2
)))endef
)1,$3)
endef
$(if ,, ) := 
~^es = $(if $(findstring $(if ,,,),$1),$$(if ,,$1),$1)
~^ed = $(if $(filter $1,$(words $2)),$(subst $  ,,$2),$(call ~^ed,$1,$2 $$))
define ^e
$(subst $$,$(if $2,$(call ~^ed,$2),$$),$(call ~^es,$(subst 
,$$!,$(subst $[,$$[,$(subst $],$$],$(subst $$,$$$$,$1))))))
endef
~promote = $(call ^u,$1)
~demote = $(call ^d,$1)
~nth = $(call ^n,$1,$2)
~set-global = $(call ^set,$1,$2,$3)
~set-rglobal = $(call ^fset,$1,$2,$3)
~apply = $(call ~^apply,$1,$2)
~*hooks* := 
~add-hook = $(call ^set,~*hooks*,$(~*hooks*) $1=$2)
~run-hooks = $(foreach funcname,$(patsubst $1=%,%,$(filter $1=%,$(~*hooks*))),$(call $(funcname)))
~^required-files := ///runtime.min
^require = $(foreach ^file,$(filter-out $(~^required-files),$(or $(word 1,$(foreach f,$(SCAM_MODS),$(if $(filter $(notdir $1),$(notdir $(basename $f))),$f))),$(if $(if $(filter-out u%,$(flavor ///$(notdir $1).min)),1),///$(notdir $1).min,$1.min))),$(and $(call ^set,~^required-files,$(~^required-files) $(^file))1,$(if $(findstring R,$(SCAM_DEBUG)),$(info require: $(^file)))1,$(if $(filter ///%,$(^file)),$(eval $(value $(^file))),$(eval include $(^file)))1,$(call ~run-hooks,load)1,$(if $(findstring Rx,$(SCAM_DEBUG)),$(info exited: $(^file)))))
define ~start
$(if $(if $(*started*),,1),$(and $(call ^set,*started*,1)1,$(if $(if $(filter-out u%,$(flavor ///trace.min)),1),$(call ^require,trace))1,$(call ^require,$(notdir $1))1,$(call ^Y,$(call $2,$3),,,,,,,,,$$(eval .DEFAULT_GOAL :=
.PHONY: .scam/-exit
.scam/-exit: $$(.DEFAULT_GOAL); @exit '$$(or $$(subst ',,$$(strip $$1)),0)'$$$$(call ~run-hooks,exit)))))
endef
$(if $(if $(if $(if $(filter-out u%,$(flavor ^start)),1),,1),$(call ^fset,^start,$(value ~start))),)
$(if $(if $(SCAM_MAIN),$(call ~start,$(SCAM_MAIN),,)),)

endef
 
define ///scam-ct.min
# compiled from scam-ct.scm
# Requires: runtime
# Exports: unless!=X,~unless unless|~unless when!=X,~when when|~when SCAM_MAIN!VSCAM_MAIN! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! abspath!=B,abspath,b basename!=B,basename,b dir!=B,dir,b error!=B,error,b eval!=B,eval,b firstword!=B,firstword,b flavor!=B,flavor,b info!=B,info,b lastword!=B,lastword,b notdir!=B,notdir,b origin!=B,origin,b realpath!=B,realpath,b shell!=B,shell,b sort!=B,sort,b strip!=B,strip,b suffix!=B,suffix,b value!=B,value,b warning!=B,warning,b wildcard!=B,wildcard,b words!=B,words,b addprefix!=B,addprefix,b addsuffix!=B,addsuffix,b filter!=B,filter,b filter-out!=B,filter-out,b findstring!=B,findstring,b join!=B,join,b word!=B,word,b .foreach!=B,foreach,b patsubst!=B,patsubst,b .subst!=B,subst,b wordlist!=B,wordlist,b if!=B,if,b and!=B,and,b or!=B,or,b call!=B,call,b *args*!V^av,b MAKEFILE_LIST!VMAKEFILE_LIST,b .DEFAULT_GOAL!V.DEFAULT_GOAL,b
$(call ^require,runtime)
~when = L.56 S.57!0if $(call ^d,$(call ~nth,3,$1)) $(call ^d,L.62 S.63!0begin $(wordlist 4,99999999,$1))
~unless = L.118 S.119!0if $(call ^d,$(call ~nth,3,$1)) S.124!0nil $(call ^d,L.126 S.127!0begin $(wordlist 4,99999999,$1))

endef
 
define ///scam.min
# compiled from scam.scm
# Requires: core repl build getopts gen runtime
# Requires: scam-ct
# Exports: main|~main opt-err|~opt-err usage|~usage resolve|~resolve! base-env!V~base-env! builtin-argc|~builtin-argc! env-rewind|~env-rewind! env-rewind-x|~env-rewind-x! use-module|~use-module! require-module|~require-module! env-export|~env-export! import-binding|~import-binding! check-argc|~check-argc! check-type|~check-type! compile-warn|~compile-warn! gen-error|~gen-error! env-rewind-M|~env-rewind-M! after|~after! gensym|~gensym! gensym-name|~gensym-name! gen-global-name|~gen-global-name! *compile-mods*!V~*compile-mods*! *compile-outfile*!V~*compile-outfile*! *compile-file*!V~*compile-file*! *compile-subject*!V~*compile-subject*! getopts|~getopts! getopts-loop|~getopts-loop! build|~build! prefix-of|#,ibuild,sym:name;L.3995:S.3996@subst:S.3998@name:Q.4000@!4.:L.4003@S.4004!40global-name@S.4006!40sym exe-rules|~exe-rules! mmap-rules|~mmap-rules! mmap-all-deps|~mmap-all-deps! mmap-all-requires|~mmap-all-requires! link-rule|~link-rule! test-rule|~test-rule! compile-rule|~compile-rule! rule|~rule! scan-modules|~scan-modules! scan-deps|~scan-deps! if-bundled|~if-bundled! if-bound|~if-bound! if-exists|~if-exists! mmap-okfiles|#,ibuild,mmap:names;L.1856:S.1857@addsuffix:Q.1859@.ok:L.1863@S.1864!40mmap-objects@S.1866!40mmap@L.1868!40S.1869!50mmap-testmods!40S.1871!50mmap!40S.1873!50names mmap-testmods|#,ibuild,mmap:names;L.1822:S.1823@foreach:S.1825@m:S.1827@names:L.1829@S.1830!40mod-testmod@L.1832!40S.1833!50assoc!40S.1835!50m!40S.1837!50mmap mmap-minfiles|#,ibuild,mmap:names;L.1792:S.1793@filter-out:Q.1795@///%:L.1799@S.1800!40mmap-objects@S.1802!40mmap@S.1804!40names mmap-objects|#,ibuild,mmap:names;L.1758:S.1759@foreach:S.1761@m:S.1763@names:L.1765@S.1766!40mod-object@L.1768!40S.1769!50assoc!40S.1771!50m!40S.1773!50mmap mmap-add|#,ibuild,mmap:modname:source:object:testmod:requires:uses:is-boot;L.1719:S.1720@cons:L.1722@S!40vector@S.1723!40modname@S.1725!40source@S.1727!40object@S.1729!40testmod@S.1731!40requires@S.1733!40uses@S.1735!40is-boot:S.1738@mmap mod-deps|#,ibuild,mod;L.1678:S.1679@promote:L.1681@S.1682!40wordlist@Q.1684!405@Q.1686!406@S.1688!40mod mod-is-boot|#,ibuild,mod;L.1658:S.1659@nth:Q.1661@7:S.1663@mod mod-uses|#,ibuild,mod;L.1639:S.1640@nth:Q.1642@6:S.1644@mod mod-requires|#,ibuild,mod;L.1620:S.1621@nth:Q.1623@5:S.1625@mod mod-testmod|#,ibuild,mod;L.1601:S.1602@nth:Q.1604@4:S.1606@mod mod-object|#,ibuild,mod;L.1582:S.1583@nth:Q.1585@3:S.1587@mod mod-source|#,ibuild,mod;L.1563:S.1564@nth:Q.1566@2:S.1568@mod mod-name|#,ibuild,mod;L.1544:S.1545@nth:Q.1547@1:S.1549@mod strip-comments|~strip-comments! scan-object|~scan-object! scan-source|~scan-source! echo-cmd|~echo-cmd! *quiet*!V~*quiet*! *self*!V~*self*! link|~link! epilogue|#,ibuild,main-mod:main-func:rt;L.861:S.862@concat:Q.864@$(eval!40$(value!40:L.875@S.876!40bundle-var@S.878!40rt:Q.881@))!n:Q.887@$(call!40^start!a:L.896@S.897!40bundle-var@S.899!40main-mod:Q.902@!a:S.906@main-func:Q.908@!a$(SCAM_ARGS))!n prologue!=M,Q.831;#!3/bin/bash!n!c!b:for:v:in:"${!e//!3/!4}":!b:do:v=${v//:/@}:!b:v=${v//!2+/!3+}!b:a[++n]=${v!c-!3.}:!b:done:!b:SCAM_ARGS=${a[*]}:exec:make:--no-print-directory:-f"$0"!n!n,ibuild read-object|~read-object! bundle-var|#,ibuild,file;L.761:S.762@concat:S.764@bundle-dir:L.766@S.767!40notdir@S.769!40file bundled?|#,ibuild,path;L.727:S.728@filter:L.730@S.731!40concat@S.733!40bundle-dir@Q.735!40%:S.740@path bundle-path|#,ibuild,source;L.695:S.696@concat:S.698@bundle-dir:L.700@S.701!40modnames-of@S.703!40source:Q.706@.min bundle-dir!=M,Q.673;///,ibuild strip-comments|~strip-comments! skip-comments|~skip-comments! traverse-graph|~traverse-graph! dbg-print|~dbg-print! resolve-mod|~resolve-mod! clean-path|#,ibuild,f;L.303:S.304@patsubst:Q.306@./%:Q.310@%:L.314@S.315!40subst@Q.317!40/./@Q.321!40/@S.325!40f repl-file|~repl-file! repl-rep|~repl-rep! repl|~repl! initial-state!=M,L.1178;S.1179:eval-and-print;L.1181:S.1182@concat:Q.1184@(declare!40*1!40&global)!n:Q.1195@(declare!40*2!40&global)!n:L.1206@S.1207!40foreach@S.1209!40lib@S.1211!40LIBS@L.1213!40S.1214!50concat!40Q.1216!50(require!510"!40S.1223!50lib!40Q.1225!50"):Q.1232@!n;L.1237:S.1238@compile-prelude,irepl read-eval-print|~read-eval-print! eval-and-print|~eval-and-print! describe-env|~describe-env! describe-binding|~describe-binding! envtypes!V~envtypes! help|~help! *2!V*2! *1!V*1! LIBS!V~LIBS! assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
$(call ^require,repl)
$(call ^require,build)
$(call ^require,getopts)
$(call ^require,gen)
define ~usage
$(and $(if $(^av),$(info scam: $(call ~vsprintf,$(^av))))1,$(info Usage:

    scam [-i]              : enter interactive mode
    scam -o EXE FILE...    : build an executable from SRC
    scam -e EXPR           : eval and print value of expression
    scam -r MAK            : load and execute executable file MAK
    scam [-x] FILE ARG...  : compile and execute FILE

Options:

  --no-trace : Omit tracing functionality.  This will produce a slightly
               smaller executable.
)1,$(if $1,1))
endef
~opt-err = $(call ~usage,Unrecognized command option '%s',$1)
~main = $(call ^Y,$(call ~getopts,$1,-e= -h -i -r= -o= --symbols --boot --no-trace -x=...,$(value ~opt-err)),,,,,,,,,$$(if $$(call ~hash-get,o,$$(call ~nth,2,$$1)),$$(call ~build,$$(call ~hash-get,o,$$(call ~nth,2,$$1)),$$(call ~nth,1,$$1),$$(call ~nth,2,$$1)),$$(if $$(call ~hash-get,h,$$(call ~nth,2,$$1)),$$(call ~usage),$$(if $$(call ~hash-get,e,$$(call ~nth,2,$$1)),$$(call ~repl-rep,$$(call ~hash-get,e,$$(call ~nth,2,$$1))),$$(if $$(call ~hash-get,r,$$(call ~nth,2,$$1)),$$(eval include $$(call ~hash-get,r,$$(call ~nth,2,$$1))),$$(if $$(or $$(call ~hash-get,x,$$(call ~nth,2,$$1)),$$(call ~nth,1,$$1)),$$(if $$(call ~eq,$$(call ~gen-global-name,main),~main),$$(and $$(info scam: -x not supported; namespace collision)1,1),$$(and $$(call ~repl-file,$$(call ^u,$$(word 1,$$(or $$(call ~hash-get,x,$$(call ~nth,2,$$1)),$$(call ~nth,1,$$1)))))1,$$(call ~run-hooks,load)1,$$(call $$(call ~gen-global-name,main),$$(wordlist 2,99999999,$$(or $$(call ~hash-get,x,$$(call ~nth,2,$$1)),$$(call ~nth,1,$$1)))))),$$(call ~repl)))))))

endef
 
define ///trace.min
# compiled from trace.scm
# Requires: runtime
# Requires: scam-ct
# Exports: trace|~trace trace-dump|~trace-dump trace-rev|~trace-rev trace-check|~trace-check *traces-active*!V~*traces-active* trace-instrument|~trace-instrument trace-match-funcs|~trace-match-funcs trace-info|~trace-info trace-repeater|~trace-repeater list-of|~list-of trace-n2a|~trace-n2a trace-digits|~trace-digits *traces*!V~*traces* variables!=M,L.463;S.464:filter-out;S.466:*trace-ignore-vars*;L.468:S.469@subst:Q.471@%:Q.475@():S.480@.VARIABLES,!1. *trace-ignore-vars*!V~*trace-ignore-vars* .VARIABLES!V.VARIABLES SCAM_PRE!VSCAM_PRE SCAM_TRACE!VSCAM_TRACE ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
~*trace-ignore-vars* := 
~*traces* := 
override SCAM_PRE := $(value SCAM_PRE)
^K = $(eval ^K_$0:=$(subst ioooooooooo,oi,$(^K_$0:o%=io%)o))
~trace-digits = $(if $(if $(findstring i,$1),,1),$(call ~trace-digits,i$1),$(if $(findstring ioooooooooo,$1),$(call ~trace-digits,$(subst ioooooooooo,oi,$1)),$(subst $  ,,$(wordlist $(words $(subst i, i,$1)),99,. . . . . . . . $(foreach d,$(subst i, i,$1),$(words $(subst i,,$(subst o, o,$d))))))))
~trace-n2a = $(if $(if $(filter i%,$1),,1),$(call ~trace-n2a,i$1),$(if $(findstring ioooooooooo,$1),$(call ~trace-n2a,$(subst ioooooooooo,oi,$1)),$(subst 10,A,$(words $(subst i, i,$1)))!0$(subst $  ,,$(foreach d,$(subst i, i,$1),$(words $(subst i,,$(subst o, o,$d)))))))
~list-of = $(if $(word $1,$2),$2,$(call ~list-of,$1,$2 x))
~trace-repeater = $(subst NAME,$1,$(subst N-1,$(wordlist 2,99999999,$(call ~list-of,$(or $2,11))),$(if $3,$$(if $$(^X),$$(call if,,,$$(value NAME)),$$(if $$(foreach ^X,N-1,$$(if $$(NAME),)),)$$(foreach ^X,0,$$(NAME))),$$(NAME)$$(if $$(foreach ^xx,N-1,$$(NAME)),))))
~trace-info = $(info TRACE: $1$2$3$4$5)
~trace-match-funcs = $(foreach v,$(if $(findstring %,$1),$(filter $1,$(filter-out $(~*trace-ignore-vars*),$(subst %,(),$(.VARIABLES)))),$1),$(if $(filter recur%,$(flavor $v)),$v))
~trace-instrument = $(if $(filter v,$1),$(and $(call ~trace-info,$2, [,$(flavor $2),] = ,$(value $2))1,$3),$(if $(filter c,$1),$$(^K)$3,$(if $(filter x% X%,$1),$(and $(call ~set-rglobal,$2~0~,$3)1,$(call ~trace-repeater,$2~0~,$(patsubst x%,%,$(subst X,x,$1)),$(filter X%,$1))),$(if $(filter p,$1),$(or $(SCAM_PRE),$(call ~trace-info,SCAM_PRE undefined; needed for ,$2,:p))$3,$(if $(filter t,$1),$(subst CODE,$3,$$(info --> ($$0$$(^ta)))$$(call ^tp,<-- $$0:,CODE)),$(and $(call ~trace-info,Unknown action: ',$1,')1,$3))))))
~*traces-active* := 
~trace-check = $(call ^set,~*traces-active*,$(strip $(~*traces-active*) $(foreach w,$(~*traces*),$(foreach name,$(call ~trace-match-funcs,$(firstword $(subst :, % ,$w))),$(foreach action,$(or $(wordlist 2,99999999,$(subst :, ,.$w)),t),$(if $(if $(filter $(name):$(patsubst x%,x,$(subst X,x,$(action))),$(~*traces-active*)),,1),$(and $(call ~set-rglobal,$(name),$(call ~trace-instrument,$(action),$(name),$(value $(name))))1,$(name):$(patsubst x%,x,$(subst X,x,$(action))))))))))
~trace-rev = $(if $1,$(call ~trace-rev,$(wordlist 2,99999999,$1)) $(firstword $1))
~trace-dump = $(and $(foreach s,$(foreach s,$(~*traces*),$(word 1,$(subst :, ,$s))),$(if $(if $(filter $s,$(foreach s,$(~*traces-active*),$(word 1,$(subst :, ,$s)))),,1),$(call ~trace-info,spec ',$s,' did not match any functions.)))1,$(if $(filter %c,$(~*traces-active*)),$(and $(call ~trace-info,function invocations)1,$(foreach r,$(call ~trace-rev,$(sort $(foreach V,$(filter ^K_%,$(.VARIABLES)),$(call ~trace-digits,$(value $V))$(patsubst ^K_%,::%,$V)))),$(call ~trace-info,$(subst ., ,$(word 1,$(subst ::, ,$r))), : ,$(word 2,$(subst ::, ,$r)))))))
~trace = $(and $(call ^set,~*traces*,$(~*traces*) $1)1,$(call ~trace-check))
~*trace-ignore-vars* := $(filter-out $(~*trace-ignore-vars*),$(subst %,(),$(.VARIABLES)))
$(if $(call ~trace,$(SCAM_TRACE)),)
$(if $(call ~add-hook,load,~trace-check),)
$(if $(call ~add-hook,exit,~trace-dump),)

endef
$(eval $(value ///runtime.min))
$(call ^start,///scam,~main,$(SCAM_ARGS))
