#!/bin/bash
:; for v in "${@//!/!1}" ; do v=${v// /!0} ; v=${v//	/!+}; a[++n]=${v:-!.} ; done ; SCAM_ARGS=${a[*]} exec make --no-print-directory -j ${SCAM_JOBS:-9} -f"$0"


define ///build.min
# compiled from build.scm
# Requires: core io parse compile gen runtime
# Requires: scam-ct
# Exports: build!=!1!cEDefn1,~build,.,exe:files:opts prefix-of!=!1!cEDefn1,!c,.,sym:name;!3!cP0:3992:!4!cP2@3993@subst:!4!cP2@3995@name:!4!cP1@3997@!4.:!4!cP0@4000@!5!cP2!404001!40global-name@!5!cP2!404003!40sym exe-rules!=!1!cEDefn1,~exe-rules,.,exe:sources:no-trace:boot:keep-syms mmap-rules!=!1!cEDefn1,~mmap-rules,.,mmap:runtime mmap-all-deps!=!1!cEDefn1,~mmap-all-deps,.,mmap:mods mmap-all-requires!=!1!cEDefn1,~mmap-all-requires,.,mmap:mods link-rule!=!1!cEDefn1,~link-rule,.,exe:deps:oodeps:objects:runtime:keep-syms test-rule!=!1!cEDefn1,~test-rule,.,ok-file:test-object:runtime:mod-files compile-rule!=!1!cEDefn1,~compile-rule,.,object:source:deps:oodeps:mod-files:reqs:uses:is-boot rule!=!1!cEDefn1,~rule,.,target:deps:oodeps:commands scan-modules!=!1!cEDefn1,~scan-modules,.,env:sources:?mmap scan-deps!=!1!cEDefn1,~scan-deps,.,source:object if-bundled!=!1!cEDefn1,~if-bundled,.,file if-bound!=!1!cEDefn1,~if-bound,.,var if-exists!=!1!cEDefn1,~if-exists,.,file mmap-okfiles!=!1!cEDefn1,!c,.,mmap:names;!3!cP0:1821:!4!cP2@1822@addsuffix:!4!cP1@1824@.ok:!4!cP0@1828@!5!cP2!401829!40mmap-objects@!5!cP2!401831!40mmap@!5!cP0!401833!40!51!cP2!501834!50mmap-testmods!40!51!cP2!501836!50mmap!40!51!cP2!501838!50names mmap-testmods!=!1!cEDefn1,!c,.,mmap:names;!3!cP0:1787:!4!cP2@1788@foreach:!4!cP2@1790@m:!4!cP2@1792@names:!4!cP0@1794@!5!cP2!401795!40mod-testmod@!5!cP0!401797!40!51!cP2!501798!50assoc!40!51!cP2!501800!50m!40!51!cP2!501802!50mmap mmap-minfiles!=!1!cEDefn1,!c,.,mmap:names;!3!cP0:1756:!4!cP2@1757@filter-out:!4!cP1@1759@///%:!4!cP0@1764@!5!cP2!401765!40mmap-objects@!5!cP2!401767!40mmap@!5!cP2!401769!40names mmap-objects!=!1!cEDefn1,!c,.,mmap:names;!3!cP0:1722:!4!cP2@1723@foreach:!4!cP2@1725@m:!4!cP2@1727@names:!4!cP0@1729@!5!cP2!401730!40mod-object@!5!cP0!401732!40!51!cP2!501733!50assoc!40!51!cP2!501735!50m!40!51!cP2!501737!50mmap mmap-add!=!1!cEDefn1,!c,.,mmap:modname:source:object:testmod:requires:uses:is-boot;!3!cP0:1683:!4!cP2@1684@cons:!4!cP0@1686@!5!cP2!400!40vector@!5!cP2!401687!40modname@!5!cP2!401689!40source@!5!cP2!401691!40object@!5!cP2!401693!40testmod@!5!cP2!401695!40requires@!5!cP2!401697!40uses@!5!cP2!401699!40is-boot:!4!cP2@1702@mmap mod-deps!=!1!cEDefn1,!c,.,mod;!3!cP0:1642:!4!cP2@1643@promote:!4!cP0@1645@!5!cP2!401646!40wordlist@!5!cP1!401648!405@!5!cP1!401650!406@!5!cP2!401652!40mod mod-is-boot!=!1!cEDefn1,!c,.,mod;!3!cP0:1622:!4!cP2@1623@nth:!4!cP1@1625@7:!4!cP2@1627@mod mod-uses!=!1!cEDefn1,!c,.,mod;!3!cP0:1603:!4!cP2@1604@nth:!4!cP1@1606@6:!4!cP2@1608@mod mod-requires!=!1!cEDefn1,!c,.,mod;!3!cP0:1584:!4!cP2@1585@nth:!4!cP1@1587@5:!4!cP2@1589@mod mod-testmod!=!1!cEDefn1,!c,.,mod;!3!cP0:1565:!4!cP2@1566@nth:!4!cP1@1568@4:!4!cP2@1570@mod mod-object!=!1!cEDefn1,!c,.,mod;!3!cP0:1546:!4!cP2@1547@nth:!4!cP1@1549@3:!4!cP2@1551@mod mod-source!=!1!cEDefn1,!c,.,mod;!3!cP0:1527:!4!cP2@1528@nth:!4!cP1@1530@2:!4!cP2@1532@mod mod-name!=!1!cEDefn1,!c,.,mod;!3!cP0:1508:!4!cP2@1509@nth:!4!cP1@1511@1:!4!cP2@1513@mod scan-object!=!1!cEDefn1,~scan-object,.,file scan-source!=!1!cEDefn1,~scan-source,.,src echo-cmd!=!1!cEDefn1,~echo-cmd,.,...strs *quiet*!=!1!cEDefn2,~*quiet*,. *self*!=!1!cEDefn2,~*self*,. link!=!1!cEDefn1,~link,.,outfile:objects:main:runtime:keep-syms epilogue!=!1!cEDefn1,!c,.,main-mod:main-func:rt;!3!cP0:858:!4!cP2@859@concat:!4!cP1@861@$(eval!40$(value!40:!4!cP0@872@!5!cP2!40873!40bundle-var@!5!cP2!40875!40rt:!4!cP1@878@))!n:!4!cP1@884@$(call!40^start!a:!4!cP0@893@!5!cP2!40894!40bundle-var@!5!cP2!40896!40main-mod:!4!cP1@899@!a:!4!cP2@903@main-func:!4!cP1@905@!a$(SCAM_ARGS))!n prologue!=!1!cEDefn3,!2!cP1;828;#!3/bin/bash!n!c!b:for:v:in:"${!e//!3/!4}":!b:do:v=${v//:/@}:!b:v=${v//!2+/!3+}!b:a[++n]=${v!c-!3.}:!b:done:!b:SCAM_ARGS=${a[*]}:exec:make:--no-print-directory:-j:${SCAM_JOBS!c-9}:-f"$0"!n!n,. read-object!=!1!cEDefn1,~read-object,.,file bundle-var!=!1!cEDefn1,!c,.,file;!3!cP0:758:!4!cP2@759@concat:!4!cP2@761@bundle-dir:!4!cP0@763@!5!cP2!40764!40notdir@!5!cP2!40766!40file bundled?!=!1!cEDefn1,!c,.,path;!3!cP0:724:!4!cP2@725@filter:!4!cP0@727@!5!cP2!40728!40concat@!5!cP2!40730!40bundle-dir@!5!cP1!40732!40%:!4!cP2@737@path bundle-path!=!1!cEDefn1,!c,.,source;!3!cP0:692:!4!cP2@693@concat:!4!cP2@695@bundle-dir:!4!cP0@697@!5!cP2!40698!40modnames-of@!5!cP2!40700!40source:!4!cP1@703@.min bundle-dir!=!1!cEDefn3,!2!cP1;670;///,. modnames-of!=!1!cEDefn1,~modnames-of,p,files strip-comments!=!1!cEDefn1,~strip-comments,.,src skip-comments!=!1!cEDefn1,~skip-comments,.,lines traverse-graph!=!1!cEDefn1,~traverse-graph,.,nodes:get-children:visited-nodes dbg-print!=!1!cEDefn1,~dbg-print,.,code:fmt:str resolve-mod!=!1!cEDefn1,~resolve-mod,.,source:mod clean-path!=!1!cEDefn1,!c,.,f;!3!cP0:298:!4!cP2@299@patsubst:!4!cP1@301@./%:!4!cP1@306@%:!4!cP0@310@!5!cP2!40311!40subst@!5!cP1!40313!40/./@!5!cP1!40317!40/@!5!cP2!40321!40f filtersub!=!1!cEDefn1,~filtersub,p,pat:repl:str begin-block!=!1!cEDefn1,~begin-block,igen,forms resolve!=!1!cEDefn1,~resolve,igen,form:env base-env!=!1!cEDefn2,~base-env! builtin-names!=!1!cEDefn2,~builtin-names! builtins-3!=!1!cEDefn3,!2!cP1;3843;.foreach:patsubst:.subst:wordlist,igen builtins-2!=!1!cEDefn3,!2!cP1;3819;addprefix:addsuffix:filter:filter-out:findstring:join:word,igen builtins-1!=!1!cEDefn3,!2!cP0;3759;!3!cP2:3760:concat;!3!cP1:3762:abspath@basename@dir@error@eval@firstword@flavor;!3!cP1:3778:@info@lastword@notdir@origin@realpath@shell@sort;!3!cP1:3795:@strip@suffix@value@warning@wildcard@words,igen env-rewind!=!1!cEDefn1,~env-rewind,igen,env:name env-rewind-x!=!1!cEDefn1,~env-rewind-x,igen,env:name use-module!=!1!cEDefn1,~use-module,igen,mod require-module!=!1!cEDefn1,~require-module,igen,mod:read-priv env-export!=!1!cEDefn1,~env-export,igen,env import-binding!=!1!cEDefn1,~import-binding,igen,key:defn:d-name is-private?!=!1!cEDefn1,!c,igen,defn;!3!cP0:2714:!4!cP2@2715@filter:!4!cP1@2717@b!40p!40i%:!4!cP0@2726@!5!cP2!402727!40EDefn.priv@!5!cP2!402729!40defn check-argc!=!1!cEDefn1,~check-argc,igen,expected:args:sym err-expected!=!1!cEDefn1,~err-expected,igen,types:form:parent:what:where:?arg1:?arg2 form-description!=!1!cEDefn1,~form-description,igen,code compile-warn!=!1!cEDefn1,~compile-warn,igen,form:fmt:?a:?b:?c gen-error!=!1!cEDefn1,~gen-error,igen,form:fmt:...values env-rewind-M!=!1!cEDefn1,~env-rewind-M,igen,env:name after!=!1!cEDefn1,~after,igen,item:vec gensym!=!1!cEDefn1,~gensym,igen,base:env gensym-name!=!1!cEDefn1,~gensym-name,igen,base:env:suff gen-global-name!=!1!cEDefn1,~gen-global-name,igen,local:flags il-promote!=!1!cEDefn1,~il-promote,igen,node il-demote!=!1!cEDefn1,~il-demote,igen,node il-concat!=!1!cEDefn1,~il-concat,igen,nodes il-flatten!=!1!cEDefn1,~il-flatten,igen,nodes il-merge-strings!=!1!cEDefn1,~il-merge-strings,igen,nodes:accum NoOp!=!1!cEDefn3,!2!cP0;978;!3!cP2:979:IString;!3!cP1:981:!3.,igen *compile-mods*!=!1!cEDefn2,~*compile-mods*! *compile-outfile*!=!1!cEDefn2,~*compile-outfile*! *compile-file*!=!1!cEDefn2,~*compile-file*! *compile-subject*!=!1!cEDefn2,~*compile-subject*! MacroMarkerKey!=!1!cEDefn3,!2!cP1;658;!cm,igen LambdaMarkerKey!=!1!cEDefn3,!2!cP1;644;!c,igen NoGlobalName!=!1!cEDefn3,!2!cP1;473;!c,igen EDefn.priv!=!1!cEDefn1,!c,igen,defn;!3!cP0:457:!4!cP2@458@word:!4!cP1@460@3:!4!cP2@462@defn EBuiltin!=!1!cEDefn5,S;W;S,igen,!2!cEDefn0 EFunc!=!1!cEDefn5,S;W;S,igen,!2!cEDefn1 EVar!=!1!cEDefn5,S;W,igen,!2!cEDefn2 ESMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn3 EXMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn4 ERecord!=!1!cEDefn5,S;W;S,igen,!2!cEDefn5 EIL!=!1!cEDefn5,S;W,igen,!2!cEDefn6 EArg!=!1!cEDefn5,W,igen,!2!cEDefn7 EMarker!=!1!cEDefn5,W,igen,!2!cEDefn8 IString!=!1!cEDefn5,S,igen,!2!cIL0 IVar!=!1!cEDefn5,S,igen,!2!cIL1 IBuiltin!=!1!cEDefn5,W;L,igen,!2!cIL2 ICall!=!1!cEDefn5,S;L,igen,!2!cIL3 ILocal!=!1!cEDefn5,W;W,igen,!2!cIL4 IFuncall!=!1!cEDefn5,L,igen,!2!cIL5 IConcat!=!1!cEDefn5,L,igen,!2!cIL6 IBlock!=!1!cEDefn5,L,igen,!2!cIL7 ILambda!=!1!cEDefn5,S,igen,!2!cIL8 IEnv!=!1!cEDefn5,S;L,igen,!2!cIL9 compile-file!=!1!cEDefn1,~compile-file,icompile,infile:outfile:is-boot:mod-files:reqs:uses construct-file!=!1!cEDefn1,!c,icompile,infile:env:exe:reqs:uses;!3!cP0:398:!4!cP2@399@concat:!4!cP1@401@#!40compiled!40from!40:!4!cP2@410@infile:!4!cP1@412@!n:!4!cP0@416@!5!cP2!40417!40if@!5!cP2!40419!40reqs@!5!cP0!40421!40!51!cP2!50422!50concat!40!51!cP1!50424!50#!510Requires!c!510!40!51!cP2!50432!50reqs!40!51!cP1!50434!50!n:!4!cP0@440@!5!cP2!40441!40if@!5!cP2!40443!40uses@!5!cP0!40445!40!51!cP2!50446!50concat!40!51!cP1!50448!50#!510Requires!c!510!40!51!cP2!50456!50uses!40!51!cP1!50458!50!n:!4!cP0@464@!5!cP2!40465!40env-export@!5!cP2!40467!40env:!4!cP2@470@exe compile-prelude!=!1!cEDefn1,~compile-prelude,icompile,is-boot compile-text!=!1!cEDefn1,~compile-text,icompile,text:env:infile:outfile ct-mod!=!1!cEDefn3,!2!cP1;190;scam-ct,icompile rt-mod!=!1!cEDefn3,!2!cP1;173;runtime,icompile parse-text!=!1!cEDefn1,~parse-text,iparse,text parse-subject!=!1!cEDefn1,~parse-subject,iparse,subj describe-error!=!1!cEDefn1,~describe-error,iparse,form:text:filename describe-lnum!=!1!cEDefn1,~describe-lnum,iparse,pos:subj parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos parse-list!=!1!cEDefn1,!c,iparse,subj:pos;!3!cP0:2512:!4!cP2@2513@parse-seq:!4!cP2@2515@subj:!4!cP1@2517@):!4!cP2@2521@pos:!4!cP0@2523@!5!cP2!402524!40parse-exp@!5!cP2!402526!40subj@!5!cP0!402528!40!51!cP2!502529!501+!40!51!cP2!502531!50pos:!4!cP2@2535@nil parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos POut-format!=!1!cEDefn1,~POut-format,iparse,value POut-form!=!1!cEDefn1,!c,iparse,st;!3!cP0:1942:!4!cP2@1943@rest:!4!cP2@1945@st POut-pos!=!1!cEDefn1,!c,iparse,st;!3!cP0:1922:!4!cP2@1923@word:!4!cP1@1925@1:!4!cP2@1927@st POut!=!1!cEDefn1,!c,iparse,pos:form;!3!cP0:1898:!4!cP2@1899@concat:!4!cP2@1901@pos:!4!cP1@1903@!40:!4!cP2@1907@form find-word!=!1!cEDefn1,~find-word,iparse,str:pos:pat pdec!=!1!cEDefn1,~pdec,iparse,text penc!=!1!cEDefn1,~penc,iparse,text format-form!=!1!cEDefn1,~format-form,iparse,form form-set-indices!=!1!cEDefn1,~form-set-indices,iparse,pos:form form-typename!=!1!cEDefn1,~form-typename,iparse,form form-index!=!1!cEDefn1,~form-index,iparse,form PList-is-empty?!=!1!cEDefn1,~PList-is-empty?,iparse,form string-value!=!1!cEDefn1,~string-value,iparse,form;!3!cP0:318:!4!cP2@319@case:!4!cP2@321@form:!4!cP0@323@!5!cP0!40324!40!51!cP2!50325!50PString!40!51!cP2!50327!50n!40!51!cP2!50329!50value@!5!cP2!40332!40value:!4!cP0@335@!5!cP2!40336!40else@!5!cP0!40338!40!51!cP2!50339!50concat!40!51!cP1!50341!50ERROR!cstring-value(!40!51!cP2!50348!50form!40!51!cP1!50350!50) symbol-to-string!=!1!cEDefn1,~symbol-to-string,iparse,form symbol-name!=!1!cEDefn1,~symbol-name,iparse,form PList!=!1!cEDefn5,W;L,iparse,!2!cP0 PString!=!1!cEDefn5,W;S,iparse,!2!cP1 PSymbol!=!1!cEDefn5,W;S,iparse,!2!cP2 PQuote!=!1!cEDefn5,W;L,iparse,!2!cP3 PQQuote!=!1!cEDefn5,W;L,iparse,!2!cP4 PUnquote!=!1!cEDefn5,W;L,iparse,!2!cP5 PSplice!=!1!cEDefn5,W;L,iparse,!2!cP6 PError!=!1!cEDefn5,W;S,iparse,!2!cP7 file-exists?!=!1!cEDefn1,~file-exists?,iio,fname read-lines!=!1!cEDefn1,~read-lines,iio,fname:?start:?end read-file!=!1!cEDefn1,~read-file,iio,fname write-file!=!1!cEDefn1,~write-file,iio,filename:data getline!=!1!cEDefn1,~getline,iio,prompt shell!1!=!1!cEDefn1,~shell!2,iio,cmd printn!=!1!cEDefn1,~printn,iio,...strings echo-command!=!1!cEDefn1,~echo-command,iio,str quote-sh-arg!=!1!cEDefn1,~quote-sh-arg,iio,arg shellc!=!1!cEDefn1,~shellc,iio,...all logshell!=!1!cEDefn1,!c,iio,cmd;!3!cP0:36:!4!cP2@37@if:!4!cP0@39@!5!cP2!4040!40filter@!5!cP1!4042!40S@!5!cP2!4046!40SCAM_DEBUG:!4!cP0@49@!5!cP2!4050!40print@!5!cP1!4052!40shell!c!50@!5!cP2!4058!40cmd;!3!cP0:62:!4!cP2@63@shell:!4!cP2@65@cmd SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
$(call ^require,io)
$(call ^require,parse)
$(call ^require,compile)
$(call ^require,gen)
~filtersub = $(patsubst $1,$2,$(filter $1,$3))
~resolve-mod = $(patsubst ./%,%,$(subst /./,/,$(dir $1)$2$(suffix $1)))
~dbg-print = $(and $(if $(findstring $1,$(value SCAM_DEBUG)),$(call ~printf,$2,$3))1,$3)
~traverse-graph = $(if $(call ^u,$(word 1,$1)),$(call ~cons,$(call ^u,$(word 1,$1)),$(call ~traverse-graph,$(call ~append,$(wordlist 2,99999999,$1),$(filter-out $(call ~append,$1,$3),$(call ^Y,$(call ^u,$(word 1,$1)),,,,,,,,,$2))),$2,$(call ~append,$(call ^u,$(word 1,$1)),$3))))
define ~skip-comments
$(if $(or $(and $1,$(if $(call ^u,$(word 1,$1)),,1)),$(filter #%,$(word 1,$(call ^u,$(word 1,$1))))),$(call ~skip-comments,$(wordlist 2,99999999,$1)),$1)
endef
define ~strip-comments
$(call ~concat-vec,$(call ~skip-comments,$(call ~split,
,$1)),
)
endef
~modnames-of = $(basename $(notdir $1))
~read-object = $(if $(filter ///%,$1),$(value ///$(notdir $1)),$(call ~read-file,$1))
define ~link
$(and $(call ~write-file,$1,#!/bin/bash
:; for v in "$`{@//!/!1}" ; do v=$`{v// /!0} ; v=$`{v//	/!+}; a[++n]=$`{v:-!.} ; done ; SCAM_ARGS=$`{a[*]} exec make --no-print-directory -j $`{SCAM_JOBS:-9} -f"$`0"

$(foreach obj,$2,
$ define ///$(notdir $(call ^u,$(obj)))
$(call ^Y,$(call ~read-object,$(call ^u,$(obj))),,,,,,,,,$(if $5,$(value ~identity),$(value ~strip-comments)))
$ endef
)$`(eval $`(value ///$(notdir $4)))
$`(call ^start,///$(notdir $3),$(call ~gen-global-name,main,),$`(SCAM_ARGS))
)1,$(shell chmod +x $(call ~quote-sh-arg,$1)))
endef
~*self* := $(firstword $(MAKEFILE_LIST))
~*quiet* := $(if $(findstring M,$(SCAM_DEBUG)),,@)
~echo-cmd = $(subst $`,$`$`,@ echo $(call ~quote-sh-arg,$(call ~concat-vec,$(foreach N,1,$(^v)))))
~scan-source = $(call ^Y,$(shell sed -E 's/ //g;s/^\$[(require|use)"([^"]*)".*|.*/\1\2/g;/../!d' $(call ~quote-sh-arg,$1)),,,,,,,,,$`(filter-out !.,$`(foreach symbol,require% use%,$`(call ~demote,$`(foreach w,$`(call ~filtersub,$`(symbol),%,$`1),$`(call ~demote,$`(call ~resolve-mod,$(call ^E,$1),$`w)))))))
define ~scan-object
$(call ^Y,$(wordlist 1,4,$(call ~split,
,$(call ~read-object,$1))),,,,,,,,,$`(foreach key,Requires Uses,$`(call ^d,$`(foreach m,$`(call ~promote,$`(call ~filtersub,$`(call ^d,# $`(key): %),%,$`1)),$`(call ~resolve-mod,$(call ^E,$1),$`m)))))
endef
~if-exists = $(wildcard $1)
~if-bound = $(if $(if $(filter-out u%,$(flavor $1)),1),$1)
~if-bundled = $(call ~if-bound,///$(call ~modnames-of,$1).min)
~scan-deps = $(if $1,$(call ~scan-source,$1),$(call ~scan-object,$2))
~scan-modules = $(if $(if $(call ^u,$(word 1,$2)),,1),$3,$(if $(call ~assoc-initial,$(subst !,!1,$(call ^d,$(call ~modnames-of,$(call ^u,$(word 1,$2))))),$3),$(call ~scan-modules,$1,$(wordlist 2,99999999,$2),$3),$(call ^Y,$1,$(wordlist 2,99999999,$2),$3,$(call ~modnames-of,$(call ^u,$(word 1,$2))),$(call ~if-exists,$(filter %.scm,$(call ^u,$(word 1,$2)))),$(or $(if $(call ~if-exists,$(filter %.scm,$(call ^u,$(word 1,$2)))),$(call ~hash-get,odir,$1)$(call ~modnames-of,$(call ^u,$(word 1,$2))).min),$(call ~if-exists,$(call ^u,$(word 1,$2))),$(call ~if-exists,$(basename $(call ^u,$(word 1,$2))).min),$(if $(call ~hash-get,rebundle,$1),$(call ~if-bundled,$(call ^u,$(word 1,$2)))),$(call ^u,$(word 1,$2))),$(call ~scan-deps,$(call ~if-exists,$(filter %.scm,$(call ^u,$(word 1,$2)))),$(or $(if $(call ~if-exists,$(filter %.scm,$(call ^u,$(word 1,$2)))),$(call ~hash-get,odir,$1)$(call ~modnames-of,$(call ^u,$(word 1,$2))).min),$(call ~if-exists,$(call ^u,$(word 1,$2))),$(call ~if-exists,$(basename $(call ^u,$(word 1,$2))).min),$(if $(call ~hash-get,rebundle,$1),$(call ~if-bundled,$(call ^u,$(word 1,$2)))),$(call ^u,$(word 1,$2)))),,,$`(call ~scan-modules,$`1,$`(call ~append,$`2,$`(call ~promote,$`7),$`(call ~if-exists,$`(patsubst %.scm,%-q.scm,$`5))),$`(call ~cons,$`(call ^d,$`4) $`(call ^d,$`5) $`(call ^d,$`6) $`(call ^d,$`(call ~modnames-of,$`(call ~if-exists,$`(patsubst %.scm,%-q.scm,$`5)))) $`(call ^d,$`(call ~modnames-of,$`(call ~append,$`(call ~nth,1,$`7),$`(if $`(call ~hash-get,boot,$`1),,runtime.scm)))) $`(call ^d,$`(call ~modnames-of,$`(call ~append,$`(call ~nth,2,$`7),$`(if $`(call ~hash-get,boot,$`1),,scam-ct.scm)))) $`(call ^d,$`(call ~hash-get,boot,$`1)),$`3)))))
define ~rule
$1: $2$(if $3, | )$3$(call ~concat-vec,$(call ~cons,,$(foreach cmd,$4,$(call ^d,$(if $(filter @%,$(word 1,$(call ^u,$(cmd)))),$(call ^u,$(cmd)),$(~*quiet*)$(call ^u,$(cmd)))))),
	)


endef
~compile-rule = $(call ~rule,$1,$(call ~append,$2,$3,$(~*self*)),$4,$(call ^d,@ true $(call ^Y,$2,$5,$6,$7,$8,,,,,$``(and $``(info => compiling $(call ^E,$1,`))1,$``(call ~compile-file,$`(call ^E,$`1),$(call ^E,$1,`),$`(call ^E,$`5),$`(call ^E,$`2),$`(call ^E,$`3),$`(call ^E,$`4))))))
~test-rule = $(call ~rule,$1,$2,,$(call ^d,$(call ~echo-cmd,=> running ,$(basename $2))) $(call ^d,$(MAKE) -s -f $(if $(filter ///%,$3),$(call ~quote-sh-arg,$(~*self*)),$3) SCAM_MAIN='$(patsubst %.min,%,$2)' SCAM_MODS='$4') $(call ^d,touch $1))
~link-rule = $(call ~rule,$1,$2,$3,$(call ^d,@ true $(call ^Y,$(call ~sort-by,$`(notdir $`1),$4),$(call ~modnames-of,$(call ^u,$(word 1,$4))),,,,,,,,$``(and $``(info => linking $(call ^E,$1,`))1,$``(call ~link,$(call ^E,$1,`),$`(call ^E,$`1),$`(call ^E,$`2),$(call ^E,$5,`),$(call ^E,$6,`))))))
~mmap-all-requires = $(call ^set,~*mmap*,$(call ^set,~*mmap*,$1,$(~*mmap*)),$(call ~traverse-graph,$2,$`(call ~nth,5,$`(call ~assoc-initial,$`(subst !,!1,$`(call ^d,$`1)),$`(~*mmap*))),))
~mmap-all-deps = $(call ^set,~*mmap*,$(call ^set,~*mmap*,$1,$(~*mmap*)),$(call ~traverse-graph,$2,$`(call ~promote,$`(wordlist 5,6,$`(call ~assoc-initial,$`(subst !,!1,$`(call ^d,$`1)),$`(~*mmap*)))),))
~mmap-rules = $(call ~concat-vec,$(filter-out !.,$(foreach mod,$1,$(call ^d,$(if $(call ~nth,2,$(call ^u,$(mod))),$(if $(filter %.min,$(call ~nth,3,$(call ^u,$(mod)))),$(call ~compile-rule,$(call ~nth,3,$(call ^u,$(mod))),$(call ~nth,2,$(call ^u,$(mod))),$(filter-out ///%,$(foreach m,$(call ~promote,$(wordlist 5,6,$(call ^u,$(mod)))),$(call ~nth,3,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1)))),$(filter-out $(call ~nth,3,$(call ^u,$(mod))).ok,$(addsuffix .ok,$(foreach m,$(foreach m,$(call ~promote,$(wordlist 5,6,$(call ^u,$(mod)))),$(call ~nth,4,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1))),$(call ~nth,3,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1))))),$(filter-out ///%,$(foreach m,$(call ~mmap-all-deps,$1,$(call ~promote,$(wordlist 5,6,$(call ^u,$(mod))))),$(call ~nth,3,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1)))),$(call ~nth,5,$(call ^u,$(mod))),$(call ~nth,6,$(call ^u,$(mod))),$(call ~nth,7,$(call ^u,$(mod))))))$(if $(call ~nth,4,$(call ^u,$(mod))),$(call ~test-rule,$(addsuffix .ok,$(filter-out ///%,$(foreach m,$(call ~nth,4,$(call ^u,$(mod))),$(call ~nth,3,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1))))),$(filter-out ///%,$(foreach m,$(call ~nth,4,$(call ^u,$(mod))),$(call ~nth,3,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1)))),$2,$(filter-out ///%,$(foreach m,$(call ~mmap-all-requires,$1,$(call ^d,$(call ~nth,4,$(call ^u,$(mod))))),$(call ~nth,3,$(call ~assoc-initial,$(subst !,!1,$(call ^d,$m)),$1))))))))),)
~exe-rules = $(call ^Y,$(call ~scan-modules,$(call ~append,$(call ~hash-bind,odir,$(dir $1)),$(call ~hash-bind,rebundle,$(if $(call ~eq?,$(subst apply,,~apply),$(subst compile-file,,~compile-file)),1,$(if $4,,$(error Warning: must use --boot; bundles are unusable))))),$(call ~append,$2,$(if $(if $3,,1),$(subst %,trace,$(if $4,%.scm,///%.min))),$(if $4,$(subst %,scam-ct,$(if $4,%.scm,///%.min)))),$(call ~scan-modules,$(call ~hash-bind,boot,1,$(call ~append,$(call ~hash-bind,odir,$(dir $1)),$(call ~hash-bind,rebundle,$(if $(call ~eq?,$(subst apply,,~apply),$(subst compile-file,,~compile-file)),1,$(if $4,,$(error Warning: must use --boot; bundles are unusable)))))),$(call ^d,$(subst %,runtime,$(if $4,%.scm,///%.min))) $(call ^d,$(subst %,scam-ct,$(if $4,%.scm,///%.min))))),$(notdir $(basename $(call ~append,$2,$(if $(if $3,,1),$(subst %,trace,$(if $4,%.scm,///%.min))),$(if $4,$(subst %,scam-ct,$(if $4,%.scm,///%.min)))))),,,,,,,,$`(call ~link-rule,$(call ^E,$1),$`(filter-out ///%,$`(foreach m,$`2,$`(call ~nth,3,$`(call ~assoc-initial,$`(subst !,!1,$`(call ^d,$`m)),$`1)))),$`(addsuffix .ok,$`(foreach m,$`(foreach m,$`2,$`(call ~nth,4,$`(call ~assoc-initial,$`(subst !,!1,$`(call ^d,$`m)),$`1))),$`(call ~nth,3,$`(call ~assoc-initial,$`(subst !,!1,$`(call ^d,$`m)),$`1)))),$`(foreach m,$`(call ~mmap-all-requires,$`1,$`2),$`(call ~nth,3,$`(call ~assoc-initial,$`(subst !,!1,$`(call ^d,$`m)),$`1))),$`(foreach m,runtime,$`(call ~nth,3,$`(call ~assoc-initial,$`(subst !,!1,$`(call ^d,$`m)),$`1))),$(call ^E,$5))$`(call ~mmap-rules,$`1,$`(foreach m,runtime,$`(call ~nth,3,$`(call ~assoc-initial,$`(subst !,!1,$`(call ^d,$`m)),$`1)))))
~build = $(eval $(call ~dbg-print,B,Eval: %s,$(call ~rule,.PHONY,,/exe /dir,)$(call ~rule,/exe,,/dir $(call ^d,$1),)$(call ~rule,/dir,,,$(call ^d,mkdir -p $`(dir $(call ^E,$1))))$(call ~exe-rules,$1,$2,$(call ~hash-get,no-trace,$3),$(call ~hash-get,boot,$3),$(call ~hash-get,symbols,$3))))

endef
 
define ///compile.min
# compiled from compile.scm
# Requires: core parse gen gen0 gen1 io macros runtime
# Requires: scam-ct
# Exports: compile-file!=!1!cEDefn1,~compile-file,.,infile:outfile:is-boot:mod-files:reqs:uses construct-file!=!1!cEDefn1,!c,.,infile:env:exe:reqs:uses;!3!cP0:398:!4!cP2@399@concat:!4!cP1@401@#!40compiled!40from!40:!4!cP2@410@infile:!4!cP1@412@!n:!4!cP0@416@!5!cP2!40417!40if@!5!cP2!40419!40reqs@!5!cP0!40421!40!51!cP2!50422!50concat!40!51!cP1!50424!50#!510Requires!c!510!40!51!cP2!50432!50reqs!40!51!cP1!50434!50!n:!4!cP0@440@!5!cP2!40441!40if@!5!cP2!40443!40uses@!5!cP0!40445!40!51!cP2!50446!50concat!40!51!cP1!50448!50#!510Requires!c!510!40!51!cP2!50456!50uses!40!51!cP1!50458!50!n:!4!cP0@464@!5!cP2!40465!40env-export@!5!cP2!40467!40env:!4!cP2@470@exe compile-prelude!=!1!cEDefn1,~compile-prelude,.,is-boot compile-text!=!1!cEDefn1,~compile-text,.,text:env:infile:outfile ct-mod!=!1!cEDefn3,!2!cP1;190;scam-ct,. rt-mod!=!1!cEDefn3,!2!cP1;173;runtime,. file-exists?!=!1!cEDefn1,~file-exists?,iio,fname read-lines!=!1!cEDefn1,~read-lines,iio,fname:?start:?end read-file!=!1!cEDefn1,~read-file,iio,fname write-file!=!1!cEDefn1,~write-file,iio,filename:data getline!=!1!cEDefn1,~getline,iio,prompt shell!1!=!1!cEDefn1,~shell!2,iio,cmd printn!=!1!cEDefn1,~printn,iio,...strings echo-command!=!1!cEDefn1,~echo-command,iio,str quote-sh-arg!=!1!cEDefn1,~quote-sh-arg,iio,arg shellc!=!1!cEDefn1,~shellc,iio,...all logshell!=!1!cEDefn1,!c,iio,cmd;!3!cP0:36:!4!cP2@37@if:!4!cP0@39@!5!cP2!4040!40filter@!5!cP1!4042!40S@!5!cP2!4046!40SCAM_DEBUG:!4!cP0@49@!5!cP2!4050!40print@!5!cP1!4052!40shell!c!50@!5!cP2!4058!40cmd;!3!cP0:62:!4!cP2@63@shell:!4!cP2@65@cmd SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! gen1!=!1!cEDefn1,~gen1,igen1,node-vec:is-file c1-file!=!1!cEDefn1,~c1-file,igen1,node c1-file*!=!1!cEDefn1,~c1-file*,igen1,nodes c1-file-fset!=!1!cEDefn1,~c1-file-fset,igen1,lhs:rhs c1-file-set!=!1!cEDefn1,~c1-file-set,igen1,lhs:rhs c1-file!=!1!cEDefn1,~c1-file,igen1,node c1!=!1!cEDefn1,~c1,igen1,node c1-Var!=!1!cEDefn1,~c1-Var,igen1,name c1-Block!=!1!cEDefn1,~c1-Block,igen1,nodes c1-Funcall!=!1!cEDefn1,~c1-Funcall,igen1,nodes c1-Local!=!1!cEDefn1,~c1-Local,igen1,ndx:level make-list!=!1!cEDefn1,~make-list,igen1,a:b:words c1-Call!=!1!cEDefn1,~c1-Call,igen1,name:args c1-args9!=!1!cEDefn1,~c1-args9,igen1,nodes c1-Builtin!=!1!cEDefn1,~c1-Builtin,igen1,name:args il-vector!=!1!cEDefn1,~il-vector,igen1,nodes c1-Error!=!1!cEDefn1,~c1-Error,igen1,node c1-vec!=!1!cEDefn1,~c1-vec,igen1,args:delim:quotefn c1-arg-trim!=!1!cEDefn1,~c1-arg-trim,igen1,node c1-arg!=!1!cEDefn1,~c1-arg,igen1,node is-balanced?!=!1!cEDefn1,!c,igen1,node;!3!cP0:1505:!4!cP2@1506@case:!4!cP2@1508@node:!4!cP0@1510@!5!cP0!401511!40!51!cP2!501512!50ICall!40!51!cP2!501514!50_!40!51!cP2!501516!50_@!5!cP1!401519!401:!4!cP0@1522@!5!cP0!401523!40!51!cP2!501524!50IVar!40!51!cP2!501526!50_@!5!cP1!401529!401:!4!cP0@1532@!5!cP0!401533!40!51!cP2!501534!50IBuiltin!40!51!cP2!501536!50_!40!51!cP2!501538!50_@!5!cP1!401541!401:!4!cP0@1544@!5!cP0!401545!40!51!cP2!501546!50IFuncall!40!51!cP2!501548!50_@!5!cP1!401551!401 c1!=!1!cEDefn1,~c1,igen1,node one-char-names!=!1!cEDefn3,!2!cP0;1359;!3!cP2:1360:concat;!3!cP1:1362:a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@;!3!cP1:1417:A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@_,igen1 voidify!=!1!cEDefn1,!c,igen1,node;!3!cP0:1275:!4!cP2@1276@if:!4!cP0@1278@!5!cP2!401279!40case@!5!cP2!401281!40node@!5!cP0!401283!40!51!cP0!501284!50!511!cP2!5101285!510IBuiltin!50!511!cP2!5101287!510name!50!511!cP2!5101289!510args!40!51!cP0!501292!50!511!cP2!5101293!510filter!50!511!cP1!5101295!510error!5110eval!5110info!50!511!cP2!5101303!510name@!5!cP0!401307!40!51!cP0!501308!50!511!cP2!5101309!510ICall!50!511!cP2!5101311!510name!50!511!cP2!5101313!510args!40!51!cP0!501316!50!511!cP2!5101317!510filter!50!511!cP1!5101319!510^require!50!511!cP2!5101323!510name:!4!cP2@1328@node:!4!cP0@1330@!5!cP2!401331!40IBuiltin@!5!cP1!401333!40if@!5!cP0!401337!40!51!cP2!500!50vector!40!51!cP2!501338!50node!40!51!cP0!501340!50!511!cP2!5101341!510IString!50!511!cP1!5101343!510!511. gen-extract!=!1!cEDefn1,~gen-extract,igen1,code gen-embed!=!1!cEDefn1,~gen-embed,igen1,str gen-decode!=!1!cEDefn1,!c,igen1,str;!3!cP0:1093:!4!cP2@1094@subst:!4!cP1@1096@~N:!4!cP1@1100@!n:!4!cP1@1104@~S:!4!cP1@1108@$:!4!cP1@1112@~R:!4!cP1@1116@):!4!cP1@1120@~C:!4!cP1@1124@!a:!4!cP1@1128@~L:!4!cP1@1132@(:!4!cP1@1136@~1:!4!cP1@1140@~:!4!cP2@1144@str gen-encode!=!1!cEDefn1,!c,igen1,str;!3!cP0:1026:!4!cP2@1027@subst:!4!cP1@1029@~:!4!cP1@1033@~1:!4!cP1@1037@(:!4!cP1@1041@~L:!4!cP1@1045@!a:!4!cP1@1049@~C:!4!cP1@1053@):!4!cP1@1057@~R:!4!cP1@1061@$:!4!cP1@1065@~S:!4!cP1@1069@!n:!4!cP1@1073@~N:!4!cP2@1077@str c1-Lambda!=!1!cEDefn1,~c1-Lambda,igen1,code c0!=!1!cEDefn1,~c0,igen0,form:env:?inblock c0-error!=!1!cEDefn1,~c0-error,igen0,form c0-qq!=!1!cEDefn1,~c0-qq,igen0,env:form:?nest c0-qq-form!=!1!cEDefn1,~c0-qq-form,igen0,template:sub c0-qq!=!1!cEDefn1,~c0-qq,igen0,!2. ml.special-begin!=!1!cEDefn1,~ml.special-begin,igen0,env:sym:args:inblock c0-block!=!1!cEDefn1,~c0-block,igen0,forms:env c0-block-cc!=!1!cEDefn1,~c0-block-cc,igen0,env:forms:k:?results:?o ml.special-require!=!1!cEDefn1,~ml.special-require,igen0,env:sym:args:inblock ml.special-declare!=!1!cEDefn1,~ml.special-declare,igen0,env:sym:args:inblock ml.special-define!=!1!cEDefn1,~ml.special-define,igen0,env:sym:args:inblock c0-def!=!1!cEDefn1,!c,igen0,env:sym:args:inblock:is-define;!3!cP0:4235:!4!cP2@4236@env-strip:!4!cP2@4238@inblock:!4!cP0@4240@!5!cP2!404241!40c0-def2@!5!cP2!404243!40env@!5!cP0!404245!40!51!cP2!504246!50form-index!40!51!cP2!504248!50sym@!5!cP0!404251!40!51!cP2!504252!50first!40!51!cP2!504254!50args@!5!cP0!404257!40!51!cP2!504258!50get-flags!40!51!cP2!504260!50args!40!51!cP1!504262!501@!5!cP0!404265!40!51!cP2!504266!50skip-flags!40!51!cP2!504268!50args!40!51!cP1!504270!501@!5!cP2!404273!40is-define@!5!cP2!404275!40nil c0-def2!=!1!cEDefn1,~c0-def2,igen0,env:pos:what:flags:body:is-define:is-macro c0-def-compound!=!1!cEDefn1,~c0-def-compound,igen0,env:n:name:args:flags:body:is-define:is-macro check-optional-args!=!1!cEDefn1,~check-optional-args,igen0,args:?seen-optional c0-def-symbol!=!1!cEDefn1,~c0-def-symbol,igen0,env:n:name:flags:body:is-define:is-macro c0-check-body!=!1!cEDefn1,~c0-check-body,igen0,where:first-form:is-define c0-lambda!=!1!cEDefn1,~c0-lambda,igen0,env:args:body lambda-env!=!1!cEDefn1,!c,igen0,args:env;!3!cP0:2743:!4!cP2@2744@append:!4!cP0@2746@!5!cP2!402747!40lambda-env-args@!5!cP2!402749!40args@!5!cP0!402751!40!51!cP2!502752!50concat!40!51!cP1!502754!50.!40!51!cP0!502758!50!511!cP2!5102759!510emarker-level!50!511!cP0!5102761!510!5111!cP2!51102762!5110hash-get!510!5111!cP2!51102764!5110LambdaMarkerKey!510!5111!cP2!51102766!5110env:!4!cP2@2772@env emarker-level!=!1!cEDefn1,~emarker-level,igen0,marker lambda-arg!=!1!cEDefn1,!c,igen0,sym:single-value:rest-value;!3!cP0:2221:!4!cP2@2222@foreach:!4!cP2@2224@name:!4!cP0@2226@!5!cP2!402227!40symbol-name@!5!cP2!402229!40sym:!4!cP0@2232@!5!cP2!402233!40if@!5!cP0!402235!40!51!cP2!502236!50filter!40!51!cP1!502238!50...%!40!51!cP2!502243!50name@!5!cP0!402271!40!51!cP2!502272!50hash-bind!40!51!cP0!502274!50!511!cP2!5102275!510or!50!511!cP0!5102277!510!5111!cP2!51102278!5110patsubst!510!5111!cP1!51102280!5110...%!510!5111!cP1!51102285!5110%!510!5111!cP2!51102289!5110name!50!511!cP2!5102292!510name!40!51!cP2!502295!50rest-value@!5!cP0!402298!40!51!cP2!502299!50hash-bind!40!51!cP0!502301!50!511!cP2!5102302!510patsubst!50!511!cP1!5102304!510?%!50!511!cP1!5102309!510%!50!511!cP2!5102313!510name!40!51!cP2!502316!50single-value c0-record!=!1!cEDefn1,~c0-record,igen0,env:sym:args:encodings:tag special-form-func!=!1!cEDefn1,!c,igen0,name;!3!cP0:1658:!4!cP2@1659@declare:!4!cP0@1661@!5!cP2!401662!40ml.special-;!3!cP0:1666:!4!cP2@1667@concat:!4!cP0@1669@!5!cP2!401670!40global-name@!5!cP2!401672!40ml.special-:!4!cP2@1675@name c0-call!=!1!cEDefn1,~c0-call,igen0,env:sym:args:realname:formal-args:body get-argc!=!1!cEDefn1,~get-argc,igen0,args c0-vec!=!1!cEDefn1,~c0-vec,igen0,forms:env c0-S-error!=!1!cEDefn1,~c0-S-error,igen0,sym:defn c0-builtin!=!1!cEDefn1,~c0-builtin,igen0,env:name:argc c0-macro!=!1!cEDefn1,~c0-macro,igen0,env:sym:inln c0-local!=!1!cEDefn1,~c0-local,igen0,arg:marker:sym c0-lambda!=!1!cEDefn1,~c0-lambda,igen0,env:args:body c0-block!=!1!cEDefn1,~c0-block,igen0,forms:env c0!=!1!cEDefn1,~c0,igen0,form:env:?inblock skip-flags!=!1!cEDefn1,~skip-flags,igen0,args:skip get-flags!=!1!cEDefn1,~get-flags,igen0,args:skip scan-flags-x!=!1!cEDefn1,~scan-flags-x,igen0,args:n:prev-n scan-flags!=!1!cEDefn1,!c,igen0,args:skip;!3!cP0:168:!4!cP2@169@scan-flags-x:!4!cP2@171@args:!4!cP0@173@!5!cP2!40174!401+@!5!cP2!40176!40skip:!4!cP2@179@skip scan-flags-x!=!1!cEDefn1,~scan-flags-x,igen0,args:n:prev-n env-strip!=!1!cEDefn1,~env-strip,igen0,inblock:node block-result!=!1!cEDefn1,~block-result,igen0,inblock:env:node begin-block!=!1!cEDefn1,~begin-block,igen,forms resolve!=!1!cEDefn1,~resolve,igen,form:env base-env!=!1!cEDefn2,~base-env! builtin-names!=!1!cEDefn2,~builtin-names! builtins-3!=!1!cEDefn3,!2!cP1;3843;.foreach:patsubst:.subst:wordlist,igen builtins-2!=!1!cEDefn3,!2!cP1;3819;addprefix:addsuffix:filter:filter-out:findstring:join:word,igen builtins-1!=!1!cEDefn3,!2!cP0;3759;!3!cP2:3760:concat;!3!cP1:3762:abspath@basename@dir@error@eval@firstword@flavor;!3!cP1:3778:@info@lastword@notdir@origin@realpath@shell@sort;!3!cP1:3795:@strip@suffix@value@warning@wildcard@words,igen env-rewind!=!1!cEDefn1,~env-rewind,igen,env:name env-rewind-x!=!1!cEDefn1,~env-rewind-x,igen,env:name use-module!=!1!cEDefn1,~use-module,igen,mod require-module!=!1!cEDefn1,~require-module,igen,mod:read-priv env-export!=!1!cEDefn1,~env-export,igen,env import-binding!=!1!cEDefn1,~import-binding,igen,key:defn:d-name is-private?!=!1!cEDefn1,!c,igen,defn;!3!cP0:2714:!4!cP2@2715@filter:!4!cP1@2717@b!40p!40i%:!4!cP0@2726@!5!cP2!402727!40EDefn.priv@!5!cP2!402729!40defn check-argc!=!1!cEDefn1,~check-argc,igen,expected:args:sym err-expected!=!1!cEDefn1,~err-expected,igen,types:form:parent:what:where:?arg1:?arg2 form-description!=!1!cEDefn1,~form-description,igen,code compile-warn!=!1!cEDefn1,~compile-warn,igen,form:fmt:?a:?b:?c gen-error!=!1!cEDefn1,~gen-error,igen,form:fmt:...values env-rewind-M!=!1!cEDefn1,~env-rewind-M,igen,env:name after!=!1!cEDefn1,~after,igen,item:vec gensym!=!1!cEDefn1,~gensym,igen,base:env gensym-name!=!1!cEDefn1,~gensym-name,igen,base:env:suff gen-global-name!=!1!cEDefn1,~gen-global-name,igen,local:flags il-promote!=!1!cEDefn1,~il-promote,igen,node il-demote!=!1!cEDefn1,~il-demote,igen,node il-concat!=!1!cEDefn1,~il-concat,igen,nodes il-flatten!=!1!cEDefn1,~il-flatten,igen,nodes il-merge-strings!=!1!cEDefn1,~il-merge-strings,igen,nodes:accum NoOp!=!1!cEDefn3,!2!cP0;978;!3!cP2:979:IString;!3!cP1:981:!3.,igen *compile-mods*!=!1!cEDefn2,~*compile-mods*! *compile-outfile*!=!1!cEDefn2,~*compile-outfile*! *compile-file*!=!1!cEDefn2,~*compile-file*! *compile-subject*!=!1!cEDefn2,~*compile-subject*! MacroMarkerKey!=!1!cEDefn3,!2!cP1;658;!cm,igen LambdaMarkerKey!=!1!cEDefn3,!2!cP1;644;!c,igen NoGlobalName!=!1!cEDefn3,!2!cP1;473;!c,igen EDefn.priv!=!1!cEDefn1,!c,igen,defn;!3!cP0:457:!4!cP2@458@word:!4!cP1@460@3:!4!cP2@462@defn EBuiltin!=!1!cEDefn5,S;W;S,igen,!2!cEDefn0 EFunc!=!1!cEDefn5,S;W;S,igen,!2!cEDefn1 EVar!=!1!cEDefn5,S;W,igen,!2!cEDefn2 ESMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn3 EXMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn4 ERecord!=!1!cEDefn5,S;W;S,igen,!2!cEDefn5 EIL!=!1!cEDefn5,S;W,igen,!2!cEDefn6 EArg!=!1!cEDefn5,W,igen,!2!cEDefn7 EMarker!=!1!cEDefn5,W,igen,!2!cEDefn8 IString!=!1!cEDefn5,S,igen,!2!cIL0 IVar!=!1!cEDefn5,S,igen,!2!cIL1 IBuiltin!=!1!cEDefn5,W;L,igen,!2!cIL2 ICall!=!1!cEDefn5,S;L,igen,!2!cIL3 ILocal!=!1!cEDefn5,W;W,igen,!2!cIL4 IFuncall!=!1!cEDefn5,L,igen,!2!cIL5 IConcat!=!1!cEDefn5,L,igen,!2!cIL6 IBlock!=!1!cEDefn5,L,igen,!2!cIL7 ILambda!=!1!cEDefn5,S,igen,!2!cIL8 IEnv!=!1!cEDefn5,S;L,igen,!2!cIL9 parse-text!=!1!cEDefn1,~parse-text,iparse,text parse-subject!=!1!cEDefn1,~parse-subject,iparse,subj describe-error!=!1!cEDefn1,~describe-error,iparse,form:text:filename describe-lnum!=!1!cEDefn1,~describe-lnum,iparse,pos:subj parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos parse-list!=!1!cEDefn1,!c,iparse,subj:pos;!3!cP0:2512:!4!cP2@2513@parse-seq:!4!cP2@2515@subj:!4!cP1@2517@):!4!cP2@2521@pos:!4!cP0@2523@!5!cP2!402524!40parse-exp@!5!cP2!402526!40subj@!5!cP0!402528!40!51!cP2!502529!501+!40!51!cP2!502531!50pos:!4!cP2@2535@nil parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos POut-format!=!1!cEDefn1,~POut-format,iparse,value POut-form!=!1!cEDefn1,!c,iparse,st;!3!cP0:1942:!4!cP2@1943@rest:!4!cP2@1945@st POut-pos!=!1!cEDefn1,!c,iparse,st;!3!cP0:1922:!4!cP2@1923@word:!4!cP1@1925@1:!4!cP2@1927@st POut!=!1!cEDefn1,!c,iparse,pos:form;!3!cP0:1898:!4!cP2@1899@concat:!4!cP2@1901@pos:!4!cP1@1903@!40:!4!cP2@1907@form find-word!=!1!cEDefn1,~find-word,iparse,str:pos:pat pdec!=!1!cEDefn1,~pdec,iparse,text penc!=!1!cEDefn1,~penc,iparse,text format-form!=!1!cEDefn1,~format-form,iparse,form form-set-indices!=!1!cEDefn1,~form-set-indices,iparse,pos:form form-typename!=!1!cEDefn1,~form-typename,iparse,form form-index!=!1!cEDefn1,~form-index,iparse,form PList-is-empty?!=!1!cEDefn1,~PList-is-empty?,iparse,form string-value!=!1!cEDefn1,~string-value,iparse,form;!3!cP0:318:!4!cP2@319@case:!4!cP2@321@form:!4!cP0@323@!5!cP0!40324!40!51!cP2!50325!50PString!40!51!cP2!50327!50n!40!51!cP2!50329!50value@!5!cP2!40332!40value:!4!cP0@335@!5!cP2!40336!40else@!5!cP0!40338!40!51!cP2!50339!50concat!40!51!cP1!50341!50ERROR!cstring-value(!40!51!cP2!50348!50form!40!51!cP1!50350!50) symbol-to-string!=!1!cEDefn1,~symbol-to-string,iparse,form symbol-name!=!1!cEDefn1,~symbol-name,iparse,form PList!=!1!cEDefn5,W;L,iparse,!2!cP0 PString!=!1!cEDefn5,W;S,iparse,!2!cP1 PSymbol!=!1!cEDefn5,W;S,iparse,!2!cP2 PQuote!=!1!cEDefn5,W;L,iparse,!2!cP3 PQQuote!=!1!cEDefn5,W;L,iparse,!2!cP4 PUnquote!=!1!cEDefn5,W;L,iparse,!2!cP5 PSplice!=!1!cEDefn5,W;L,iparse,!2!cP6 PError!=!1!cEDefn5,W;S,iparse,!2!cP7 intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
$(call ^require,parse)
$(call ^require,gen)
$(call ^require,gen0)
$(call ^require,gen1)
$(call ^require,io)
$(call ^require,macros)
~compile-text = $(call ^set,~*compile-subject*,$(call ^set,~*compile-subject*,$(call ~penc,$1),$(~*compile-subject*)),$(call ^set,~*compile-file*,$(call ^set,~*compile-file*,$3,$(~*compile-file*)),$(call ~c0-block-cc,$2,$(call ~parse-subject,$(~*compile-subject*)),$`(call ~conj,$`(call ~gen1,$`2,$(call ^E,$4)),$`1))))
~compile-prelude = $(if $(if $1,,1),$(call ~append,$(call ~require-module,runtime,),$(call ~use-module,scam-ct)))
define ~compile-file
$(and $(if $(findstring B,$(SCAM_DEBUG)),$(call ~printf,compile-file: %s -> %s%s
 mod-files = %s
 reqs = %s
 uses = %s
,$1,$2,$(if $3, [--boot]),$4,$5,$6))1,$(call ^set,~*compile-mods*,$(call ^set,~*compile-mods*,$4,$(~*compile-mods*)),$(call ^Y,$(call ~read-file,$1),$2,$(call ~compile-prelude,$3),,,,,,,$`(call ^Y,$`(call ~compile-text,$`1,$`(wordlist 2,99999999,$`3),$(call ^E,$1),$`2),$`1,$(call ^E,$1),$`2,,,,,,$``(if $``(call ^u,$``(word 1,$``1)),$``(and $``(foreach e,$``(call ^u,$``(word 1,$``1)),$``(call ^d,$``(info $``(call ~describe-error,$``(call ^u,$``e),$``2,$``3))))1,$``(error $``(subst %S,$``(if $``(call ~eq?,1,$``(words $``(call ^u,$``(word 1,$``1)))),,s),compilation error%S))),$``(call ~write-file,$``4,# compiled from $``3
$``(if $(call ^E,$5,`),# Requires: $(call ^E,$5,`)
)$``(if $(call ^E,$6,`),# Requires: $(call ^E,$6,`)
)$``(call ~env-export,$``(call ~nth,3,$``1))$``(call ~nth,2,$``1)))))))
endef

endef
 
define ///core.min
# compiled from core.scm
# Requires: runtime
# Requires: scam-ct
# Exports: intersperse!=!1!cEDefn1,~intersperse,.,value:vec foldr!=!1!cEDefn1,~foldr,.,f:z:v foldl!=!1!cEDefn1,~foldl,.,f:z:v index-of!=!1!cEDefn1,~index-of,.,vec:item assoc!=!1!cEDefn1,!c,.,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,.,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,.,prefix:vec type?!=!1!cEDefn1,!c,.,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,.,key-func:values memoize!=!1!cEDefn1,~memoize,.,funcname memoenc!=!1!cEDefn1,~memoenc,p,a:?b:?c mcache!=!1!cEDefn1,~mcache,p,varname:func:a:b:c:more 1+!=!1!cEDefn1,~1+,.,n split!=!1!cEDefn1,~split,.,delim:str uniq!=!1!cEDefn1,~uniq,.,vec see!=!1!cEDefn1,~see,.,substr:str fexpect!=!1!cEDefn1,!c,.,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,.,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,.,a:b:file-line printf!=!1!cEDefn1,~printf,.,format:...values sprintf!=!1!cEDefn1,~sprintf,.,format:...values vsprintf!=!1!cEDefn1,~vsprintf,.,fmt:values format!=!1!cEDefn1,~format,.,str format-custom!=!1!cEDefn1,~format-custom,.,str:funcs format-add!=!1!cEDefn1,~format-add,.,func *format-funcs*!=!1!cEDefn2,~*format-funcs*,. format-record!=!1!cEDefn1,~format-record,.,record data-foreach!=!1!cEDefn1,~data-foreach,p,func:encodings:values:accum format-hash!=!1!cEDefn1,~format-hash,.,h format!=!1!cEDefn1,~format,.,value hash-compact!=!1!cEDefn1,~hash-compact,.,hash:?result hash-get!=!1!cEDefn1,~hash-get,.,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,.,key:hash hash-value!=!1!cEDefn1,~hash-value,.,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,.,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,.,key:val:?hash append!=!1!cEDefn1,~append,.,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,.,s while!=!1!cEDefn1,~while,.,pred:do:initial reverse!=!1!cEDefn1,~reverse,.,list rev-zeroes!=!1!cEDefn1,~rev-zeroes,p,list:z rev-by-10s!=!1!cEDefn1,~rev-by-10s,p,list:z indices!=!1!cEDefn1,~indices,.,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,.,in:out vec-or!=!1!cEDefn1,~vec-or,.,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,.,fn:list select-vec!=!1!cEDefn1,~select-vec,.,fn:list map-call!=!1!cEDefn1,~map-call,.,funcname:vec butlast!=!1!cEDefn1,~butlast,.,vec strip-vec!=!1!cEDefn1,~strip-vec,.,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,.,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,.,vec:item cons!=!1!cEDefn1,~cons,.,item:vec concat-vec!=!1!cEDefn1,~concat-vec,.,vec:?delim xor!=!1!cEDefn1,~xor,.,a:b identity!=!1!cEDefn1,~identity,.,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,.,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG,. ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
~eq? = $(if $(findstring 1$1,$(findstring 1$2,1$1)),1)
~identity = $1
~xor = $(if $1,$(if $2,,$1),$2)
~concat-vec = $(call ~promote,$(subst $  ,$(call ~demote,$2),$1))
~cons = $(call ~demote,$1)$(if $2, )$2
~conj = $1$(if $1, )$(call ~demote,$2)
~last = $(call ~promote,$(lastword $1))
~strip-vec = $(filter %,$1)
~butlast = $(wordlist 2,$(words $1),X $1)
~map-call = $(foreach x,$2,$(call ^d,$(call $1,$(call ^u,$x))))
~select-vec = $(filter-out !,$(foreach dx,$2,$(if $(call ^Y,$(call ~promote,$(dx)),,,,,,,,,$1),$(dx),!)))
~select-words = $(foreach a,$(foreach x,$2,$(if $(call ^Y,$x,,,,,,,,,$1),$x)),$a)
~vec-or = $(call ^u,$(word 1,$(filter-out !.,$1)))
~indicesX = $(if $(word $(words $2),$1),$(words $2) $(call ~indicesX,$1,1 $2))
~indices = $(call ~indicesX,$1,1)
~rev-by-10s = $(if $1,$(if $2,$(foreach p,10 9 8 7 6 5 4 3 2 1,$(call ~rev-by-10s,$(wordlist $(word $p,0 1 2 3 4 5 6 7 8 9)$(patsubst %0,%1,$2),$p$2,$1),$(patsubst 0%,%,$2))),$(foreach p,10 9 8 7 6 5 4 3 2 1,$(word $p,$1))))
~rev-zeroes = $(if $(word 1$21,$1),$(call ~rev-zeroes,$1,0$2),$2)
~reverse = $(wordlist 1,99999999,$(call ~rev-by-10s,$1,$(call ~rev-zeroes,$1,)))
~while-0 = $(if $(filter iiiiiiiiiiiiiiiiiiii,$4),1 $(call ^d,$3),$(if $(call ^Y,$3,,,,,,,,,$1),$(call ~while-0,$1,$2,$(call ^Y,$3,,,,,,,,,$2),i$4),0 $(call ^d,$3)))
~while-N = $(if $(filter 0,$(word 1,$3)),$3,$(if $(filter iii,$5),$(if $(filter 1,$4),$(call ~while-N,$1,$2,$3,$4 0,ii),$3),$(call ~while-N,$1,$2,$(if $4,$(call ~while-N,$1,$2,$3,$(wordlist 2,99999999,$4),),$(call ~while-0,$1,$2,$(call ~nth,2,$3),)),$4,i$5)))
~while = $(if $(call ^Y,$3,,,,,,,,,$1),$(call ^Y,$(call ^Y,$3,,,,,,,,,$2),,,,,,,,,$`(call ~nth,2,$`(call ~while-N,$(call ^E,$1),$(call ^E,$2),$`(call ~while-0,$(call ^E,$1),$(call ^E,$2),$`1,),1,ii))),$3)
~numeric? = $(if $(filter 0% 1% 2% 3% 4% 5% 6% 7% 8% 9%,$(subst -,,$1)),$(if $(patsubst .%,%,$(patsubst %e,%,$(subst 0,,$(patsubst -%,%,$(subst $  ,_,$(subst E0,e,$(subst E-,E,$(subst e,E,$(subst 9,0,$(subst 8,0,$(subst 7,0,$(subst 6,0,$(subst 5,0,$(subst 4,0,$(subst 3,0,$(subst 2,0,$(subst 1,0,$1))))))))))))))))),,$1))
~append = $(filter %,$1 $2 $3 $4 $5 $6 $7 $8 $(if $(9),$(call ~promote,$(9))))
~hash-bind = $(subst %,!8,$(call ^d,$1))!=$(call ^d,$2)$(if $3, )$3
~hash-key = $(call ~promote,$(subst !8,%,$(word 1,$(subst !=, ,$1))))
~hash-value = $(call ~nth,2,$(subst !=, ,$1))
~hash-find = $(word 1,$(filter $(subst %,!8,$(call ^d,$1))!=%,$2))
~hash-get = $(call ~nth,2,$(subst !=, ,$(call ~hash-find,$1,$2))$(if $3, x $(call ~demote,$3)))
~hash-compact = $(if $(if $1,,1),$2,$(call ~append,$(word 1,$1),$(call ~hash-compact,$(filter-out $(word 1,$(subst !=,!=% ,$(word 1,$1))),$(wordlist 2,99999999,$1)))))
~format-hash = $(if $(findstring !=,$1),$(if $(call ~eq?,$1,$(foreach w,$1,$(call ~hash-bind,$(call ~nth,1,$(subst !=, ,$w)),$(call ~nth,2,$(subst !=, ,$w))))),{$(call ~concat-vec,$(foreach e,$1,$(call ^d,$(call ~format,$(call ~promote,$(subst !8,%,$(word 1,$(subst !=, ,$e))))): $(call ~format,$(call ~nth,2,$(subst !=, ,$e))))),$(if ,,, ))}))
~data-foreach = $(if $2,$(call ~data-foreach,$1,$(wordlist 2,99999999,$2),$(wordlist 2,99999999,$3),$4$(if $4, )$(call ^Y,$(if $(filter L,$(word 1,$2)),$3,$(if $(filter S,$(word 1,$2)),$(call ~nth,1,$3),$(if $(filter W,$(word 1,$2)),$(word 1,$3),$(error bad encoding in ctor pattern)))),$(word 1,$2),,,,,,,,$1)),$4)
~format-record = $(if $(filter !:%,$(word 1,$1)),$(call ^Y,$(call ~hash-get,$(word 1,$1),$(^tags)),$(wordlist 2,99999999,$1),$(word 1,$1),$1,,,,,,$`(and $`1,$`(call ~eq?,$`(filter %,$`4),$`(filter %,$`(call ~data-foreach,$``(if $``(call ~eq?,S,$``2),$``(call ^d,$``1),$``1),$`(wordlist 2,99999999,$`1),$`2,$`3))),($`(call ~nth,1,$`1)$`(if $`(wordlist 2,99999999,$`1), )$`(call ~data-foreach,$``(if $``(and $``(call ~eq?,L,$``2),$``(if $``1,,1)),[],$``(call ~format,$``1)),$`(wordlist 2,99999999,$`1),$`2,)))))
~*format-funcs* := 
~format-add = $(call ^set,~*format-funcs*,$(call ~cons,$1,$(~*format-funcs*)))
~format-custom = $(if $2,$(or $(call ^Y,$1,,,,,,,,,$(call ^u,$(word 1,$2))),$(call ~format-custom,$1,$(wordlist 2,99999999,$2))))
define ~format
$(or $(call ~format-custom,$1,$(~*format-funcs*)),$(if $(findstring !,$1),$(or $(call ~format-hash,$1),$(call ~format-record,$1))),$(if $(or $(findstring !,$1),$(and $(findstring $  ,$1),$(call ~numeric?,$(subst $  ,,$1)))),$(if $(call ~eq?,$1,$(foreach w,$1,$(call ~demote,$(call ~promote,$w)))),[$(foreach w,$1,$(call ~format,$(call ~promote,$w)))])),$(call ~numeric?,$1),"$(subst $ 	,\t,$(subst 
,\n,$(subst ",\",$(subst \,\\,$1))))")
endef
~vsprintf = $(call ~concat-vec,$(foreach w,$(join !. $2,$(subst $  !% !%,%,$(subst %, !%,%s$(call ^d,$1)))),$(if $(findstring !%s,$w),$(subst !%s,,$w),$(if $(findstring !%q,$w),$(call ~cons,$(call ~format,$(call ^u,$(word 1,$(subst !%q,!. ,$w)))),$(word 2,$(subst !%q,!. ,$w))),$(if $(findstring !%,$w),$(subst !%,[unkonwn % escape]%,$w))))))
~sprintf = $(call ~vsprintf,$1,$(foreach N,2,$(^v)))
~printf = $(info $(call ~vsprintf,$1,$(foreach N,2,$(^v))))
define ~expect-x
$(if $(call ~eq?,$1,$2),$(if $(findstring O,$(SCAM_DEBUG)),$(info $3: OK: $1)),$(and $(info $3: error: assertion failed
A: $(call ~format,$1)
B: $(call ~format,$2)

Raw:
A: $1
B: $2
)1,$(if $(if $(findstring K,$(SCAM_DEBUG)),,1),$(error ))))
endef
define ~see
$(if $(findstring $1,$2),1,$(and $(info Expected: $(subst 
,
          ,$1))1,$(info $   Within: $(subst 
,
          ,$2))))
endef
~uniq-x = $(if $1,$(word 1,$1) $(call ~uniq-x,$(filter-out $(word 1,$1),$(wordlist 2,99999999,$1))))
~uniq = $(subst ~1,~,$(subst ~p,%,$(filter %,$(call ~uniq-x,$(subst %,~p,$(subst ~,~1,$1))))))
~split = $(foreach w,$(subst $(call ^d,$1),!. !.,$(call ^d,$2)),$(or $(subst !.,,$w),!.))
~1+ = $(if $(filter %1 %2 %3 %4,$1),$(subst 1~,2,$(subst 2~,3,$(subst 3~,4,$(subst 4~,5,$1~)))),$(if $(filter %5 %6 %7,$1),$(subst 5~,6,$(subst 6~,7,$(subst 7~,8,$1~))),$(if $(findstring 9~,$1~),$(call ~1+,$(or $(subst 9~,,$1~),0))0,$(patsubst %0,%1,$(patsubst %8,%9,$1)))))
~mcache = $(and $(if $6,$(info Warning: memoized function passed more than three arguments))1,$(if $(if $(if $(filter-out u%,$(flavor $1)),1),,1),$(call ~set-global,$1,$(call ^Y,$3,$4,$5,,,,,,,$2)))1,$(value $1))
~memoenc = $(if $(or $1,$2,$3),~~$(subst ~,~0,$1)$(call ~memoenc,$2,$3))
~memoize = $(if $(if $(if $(filter-out u%,$(flavor $1)),1),,1),$(info Warning: [memoize-1] function '$1' not defined.),$(call ^Y,$(value $1),*memo$(call ~memoenc,$1),$1,,,,,,,$`(call ~set-rglobal,$`3,$``(call ~mcache,$`(call ^E,$`2)$``(call ~memoenc,$``1,$``2,$``3),$`(call ^E,$`1),$``1,$``2,$``3,$``(or $``4,$``5,$``6,$``7,$``8)))))
~sort-by = $(filter-out %!!,$(subst !!,!! ,$(sort $(foreach w,$2,$(call ~demote,$(call ^Y,$(call ~promote,$w),,,,,,,,,$1))!!$w))))
~assoc-initial = $(call ~promote,$(firstword $(if $(findstring %,$1),$(subst !8,$1,$(filter !8 !8!0%,$(subst $1,!8,$2))),$(filter $1 $1!0%,$2))))
~index-of = $(words $(subst !_, ,$(filter %!|,$(subst !_$(call ^d,$2)!_,!_!| ,!_$(subst $  ,!_,$1)!_))))
~foldl = $(if $(firstword $3),$(call ~foldl,$1,$(call ^Y,$2,$(call ^u,$(word 1,$3)),,,,,,,,$1),$(wordlist 2,99999999,$3)),$2)
~foldr = $(if $(firstword $3),$(call ^Y,$(call ^u,$(word 1,$3)),$(call ~foldr,$1,$2,$(wordlist 2,99999999,$3)),,,,,,,,$1),$2)
~intersperse = $(subst $  , $(call ^d,$1) ,$2)

endef
 
define ///escape.min
# compiled from escape.scm
# Requires: core runtime
# Requires: scam-ct
# Exports: protect-define!=!1!cEDefn1,~protect-define,.,str protect-rhs!=!1!cEDefn1,~protect-rhs,.,str protect-lhs!=!1!cEDefn1,~protect-lhs,.,str protect-expr!=!1!cEDefn1,~protect-expr,.,str protect-arg!=!1!cEDefn1,~protect-arg,.,str make-balanced!=!1!cEDefn1,~make-balanced,p,str:chk check-balance!=!1!cEDefn1,~check-balance,p,str check-balance-r!=!1!cEDefn1,~check-balance-r,p,str balance!=!1!cEDefn1,~balance,p,str balance-match!=!1!cEDefn1,~balance-match,p,str balance-match-r!=!1!cEDefn1,~balance-match-r,p,w:str:stack balance2!=!1!cEDefn1,~balance2,p,e protect-trim!=!1!cEDefn1,~protect-trim,.,s protect-ltrim!=!1!cEDefn1,~protect-ltrim,.,str replace-hash!=!1!cEDefn1,~replace-hash,p,str;!3!cP0:441:!4!cP2@442@subst:!4!cP1@444@#:!4!cP1@448@$":!4!cP2@453@str replace-nl!=!1!cEDefn1,~replace-nl,p,str;!3!cP0:411:!4!cP2@412@subst:!4!cP1@414@!n:!4!cP1@418@$':!4!cP2@423@str quote-hash!=!1!cEDefn1,~quote-hash,p,str protect-hash2!=!1!cEDefn1,~protect-hash2,p,str escape!=!1!cEDefn1,~escape,.,str;!3!cP0:241:!4!cP2@242@subst:!4!cP1@244@$:!4!cP1@248@$`:!4!cP2@253@str intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
~escape = $(subst $`,$``,$1)
define ~protect-hash2
$(if $(findstring \.#,$1),$(call ~protect-hash2,$(subst \.#,.#\\,$1)),$(subst .#,,$1))
endef
define ~quote-hash
$(if $(findstring #,$1),$(call ~protect-hash2,$(subst #,.#\#,$1)),$1)
endef
define ~replace-nl
$(subst 
,$`',$1)
endef
define ~replace-hash
$(subst #,$`",$1)
endef
~protect-ltrim = $(if $(findstring $(word 1,0$10),0),$` )$1
define ~protect-trim
$(if $(and $(findstring $1,$(wordlist 1,99999999,$1)),$(filter-out 
%,$(word 1,$1)),$(filter-out %
,$(lastword $1))),$1,$(if $1,$`(if ,,$1)))
endef
~balance2 = $(call ~promote,$(if $(findstring !C,$1),$`(if ,,$(subst !C,,$1)),$1))
~balance-match-r = $(if $1,$(call ~balance-match-r,$(word 1,$2),$(wordlist 2,99999999,$2),$(if $(filter !L%,$1),$3 $1,$(if $(and $(filter !R,$1),$(word 2,$3)),$(filter-out %!,$3!)($(subst !L,,$(subst !C,,$(lastword $3)))),$3$1))),$3)
~balance-match = $(call ~balance-match-r,$(word 1,$1),$(wordlist 2,99999999,$1),!.)
~balance = $(call ~balance2,$(subst !L,$`[,$(subst !R,$`],$(subst $  ,,$(call ~balance-match,$(subst $[, !L,$(subst $], !R ,$(subst $(if ,,,),$(if ,,!C,),$(call ~demote,$1)))))))))
~check-balance-r = $(if $(word 2,$1),$(call ~check-balance-r,$(subst $  ,,$(filter-out !L%!R,$(subst !L, !L,$(word 1,$1))))$(wordlist 2,99999999,$1)),$1)
~check-balance = $(call ~check-balance-r,$(subst $],!R .,$(subst $[,!L,$(subst !,,$(subst $ 	,,$(subst $  ,,$1))))))
~make-balanced = $(if $(findstring !,$2),$(call ~balance,$1),$(if $(findstring $(if ,,,),$2),$`(if ,,$1),$1))
~protect-arg = $(if $(or $(findstring $[,$1),$(findstring $],$1),$(findstring $(if ,,,),$1)),$(call ~make-balanced,$1,$(call ~check-balance,$1)),$1)
define ~protect-expr
$(subst 
,$`',$1)
endef
define ~protect-lhs
$(subst #,$`",$(subst X,$(subst 
,$`',$(call ~protect-arg,$1)),$(if $(or $(findstring :,$1),$(findstring =,$1),$(if $(findstring $1,$(wordlist 1,99999999,$1)),,1),$(filter ifeq ifneq ifdef ifndef else endif define endef override include sinclude -include export unexport private undefine vpath,$1)),$`(if ,,X),X)))
endef
define ~protect-rhs
$(call ~quote-hash,$(call ~protect-ltrim,$(subst 
,$`',$1)))
endef
define ~protect-define
$(if $(or $(findstring define,$1),$(findstring endef,$1),$(findstring \,$1)),$(subst |1,|,$(subst |0, ,$(subst $  ,
,$(foreach w,$(call ~split,
,$1),$(subst $  ,|0,$(subst |,|1,$(if $(filter define endef,$(word 1,$(call ^u,$w))),$` )$(call ^u,$w)$(if $(filter %\,$w),$` ))))))),$1)
endef

endef
 
define ///gen.min
# compiled from gen.scm
# Requires: core io parse escape runtime
# Requires: scam-ct
# Exports: begin-block!=!1!cEDefn1,~begin-block,.,forms resolve!=!1!cEDefn1,~resolve,.,form:env base-env!=!1!cEDefn2,~base-env,. builtin-names!=!1!cEDefn2,~builtin-names,. builtins-3!=!1!cEDefn3,!2!cP1;3843;.foreach:patsubst:.subst:wordlist,. builtins-2!=!1!cEDefn3,!2!cP1;3819;addprefix:addsuffix:filter:filter-out:findstring:join:word,. builtins-1!=!1!cEDefn3,!2!cP0;3759;!3!cP2:3760:concat;!3!cP1:3762:abspath@basename@dir@error@eval@firstword@flavor;!3!cP1:3778:@info@lastword@notdir@origin@realpath@shell@sort;!3!cP1:3795:@strip@suffix@value@warning@wildcard@words,. env-rewind!=!1!cEDefn1,~env-rewind,.,env:name env-rewind-x!=!1!cEDefn1,~env-rewind-x,.,env:name use-module!=!1!cEDefn1,~use-module,.,mod require-module!=!1!cEDefn1,~require-module,.,mod:read-priv mod-find!=!1!cEDefn1,~mod-find,p,name env-from-file!=!1!cEDefn1,~env-from-file,p,filename:read-priv *dummy-env*!=!1!cEDefn2,~*dummy-env*,p env-load!=!1!cEDefn1,!c,p,filename;!3!cP0:3076:!4!cP2@3077@define:!4!cP4@3079@!4!cP0@3080@!5!cP2!403081!40read-module-lines@!5!cP2!403083!40filename:!4!cP0@3086@!5!cP2!403087!40if@!5!cP0!403089!40!51!cP2!503090!50filter!40!51!cP1!503092!50///%!40!51!cP2!503097!50filename@!5!cP0!403100!40!51!cP2!503101!50split!40!51!cP1!503103!50!n!40!51!cP0!503107!50!511!cP2!5103108!510value!50!511!cP2!5103110!510filename@!5!cP0!403114!40!51!cP2!503115!50read-lines!40!51!cP2!503117!50filename!40!51!cP1!503119!501!40!51!cP1!503121!504;!3!cP0:3127:!4!cP2@3128@env-parse:!4!cP0@3130@!5!cP2!403131!40read-module-lines@!5!cP2!403133!40filename env-parse!=!1!cEDefn1,!c,p,lines;!3!cP0:3029:!4!cP2@3030@env-expand:!4!cP0@3032@!5!cP2!403033!40first@!5!cP0!403035!40!51!cP2!503036!50filtersub!40!51!cP0!503038!50!511!cP2!5100!510vector!50!511!cP1!5103039!510#!5110Exports!c!5110%!40!51!cP1!503048!50%!40!51!cP2!503052!50lines env-export!=!1!cEDefn1,~env-export,.,env env-import!=!1!cEDefn1,~env-import,p,exports:read-priv:d-name import-binding!=!1!cEDefn1,~import-binding,.,key:defn:d-name is-private?!=!1!cEDefn1,!c,.,defn;!3!cP0:2714:!4!cP2@2715@filter:!4!cP1@2717@b!40p!40i%:!4!cP0@2726@!5!cP2!402727!40EDefn.priv@!5!cP2!402729!40defn env-expand!=!1!cEDefn1,!c,p,v;!3!cP0:2550:!4!cP2@2551@subst:!4!cP1@2553@!5n:!4!cP1@2557@!n:!4!cP1@2561@!5!40:!4!cP1@2566@!ai!40:!4!cP1@2572@!5V:!4!cP1@2576@!5=V!a:!4!cP1@2581@!d:!4!cP1@2585@!5=F!a:!4!cP1@2590@!e:!4!cP1@2594@!530:!4!cP1@2598@!c:!4!cP1@2602@!520:!4!cP1@2606@!b:!4!cP1@2610@!510:!4!cP1@2614@!a:!4!cP1@2618@!50:!4!cP1@2622@!5e:!4!cP1@2626@!e:!4!cP1@2630@!5d:!4!cP1@2634@!d:!4!cP1@2638@!5c:!4!cP1@2642@!c:!4!cP1@2646@!5b:!4!cP1@2650@!b:!4!cP1@2654@!5a:!4!cP1@2658@!a:!4!cP1@2662@!55:!4!cP1@2666@!541:!4!cP1@2670@!54:!4!cP1@2674@!531:!4!cP1@2678@!53:!4!cP1@2682@!521:!4!cP1@2686@!52:!4!cP1@2690@!511:!4!cP2@2694@v env-compress!=!1!cEDefn1,!c,p,v;!3!cP0:2374:!4!cP2@2375@subst:!4!cP1@2379@!511:!4!cP1@2383@!52:!4!cP1@2387@!521:!4!cP1@2391@!53:!4!cP1@2395@!531:!4!cP1@2399@!54:!4!cP1@2403@!541:!4!cP1@2407@!55:!4!cP1@2413@!a:!4!cP1@2417@!5a:!4!cP1@2421@!b:!4!cP1@2425@!5b:!4!cP1@2429@!c:!4!cP1@2433@!5c:!4!cP1@2437@!d:!4!cP1@2441@!5d:!4!cP1@2445@!e:!4!cP1@2449@!5e:!4!cP1@2455@!50:!4!cP1@2459@!a:!4!cP1@2463@!510:!4!cP1@2467@!b:!4!cP1@2471@!520:!4!cP1@2475@!c:!4!cP1@2479@!530:!4!cP1@2483@!e:!4!cP1@2489@!5=F!a:!4!cP1@2494@!d:!4!cP1@2498@!5=V!a:!4!cP1@2503@!5V:!4!cP1@2507@!ai!40:!4!cP1@2513@!5!40:!4!cP1@2520@!n:!4!cP1@2524@!5n:!4!cP2@2528@v check-argc!=!1!cEDefn1,~check-argc,.,expected:args:sym err-expected!=!1!cEDefn1,~err-expected,.,types:form:parent:what:where:?arg1:?arg2 form-description!=!1!cEDefn1,~form-description,.,code compile-warn!=!1!cEDefn1,~compile-warn,.,form:fmt:?a:?b:?c gen-error!=!1!cEDefn1,~gen-error,.,form:fmt:...values env-rewind-M!=!1!cEDefn1,~env-rewind-M,.,env:name after!=!1!cEDefn1,~after,.,item:vec gensym!=!1!cEDefn1,~gensym,.,base:env gensym-name!=!1!cEDefn1,~gensym-name,.,base:env:suff filtersub!=!1!cEDefn1,~filtersub,p,pat:repl:str gen-global-name!=!1!cEDefn1,~gen-global-name,.,local:flags il-promote!=!1!cEDefn1,~il-promote,.,node il-demote!=!1!cEDefn1,~il-demote,.,node il-concat!=!1!cEDefn1,~il-concat,.,nodes il-flatten!=!1!cEDefn1,~il-flatten,.,nodes il-merge-strings!=!1!cEDefn1,~il-merge-strings,.,nodes:accum NoOp!=!1!cEDefn3,!2!cP0;978;!3!cP2:979:IString;!3!cP1:981:!3.,. *compile-mods*!=!1!cEDefn2,~*compile-mods*,. *compile-outfile*!=!1!cEDefn2,~*compile-outfile*,. *compile-file*!=!1!cEDefn2,~*compile-file*,. *compile-subject*!=!1!cEDefn2,~*compile-subject*,. MacroMarkerKey!=!1!cEDefn3,!2!cP1;658;!cm,. LambdaMarkerKey!=!1!cEDefn3,!2!cP1;644;!c,. NoGlobalName!=!1!cEDefn3,!2!cP1;473;!c,. EDefn.priv!=!1!cEDefn1,!c,.,defn;!3!cP0:457:!4!cP2@458@word:!4!cP1@460@3:!4!cP2@462@defn EBuiltin!=!1!cEDefn5,S;W;S,.,!2!cEDefn0 EFunc!=!1!cEDefn5,S;W;S,.,!2!cEDefn1 EVar!=!1!cEDefn5,S;W,.,!2!cEDefn2 ESMacro!=!1!cEDefn5,S;W,.,!2!cEDefn3 EXMacro!=!1!cEDefn5,S;W,.,!2!cEDefn4 ERecord!=!1!cEDefn5,S;W;S,.,!2!cEDefn5 EIL!=!1!cEDefn5,S;W,.,!2!cEDefn6 EArg!=!1!cEDefn5,W,.,!2!cEDefn7 EMarker!=!1!cEDefn5,W,.,!2!cEDefn8 IString!=!1!cEDefn5,S,.,!2!cIL0 IVar!=!1!cEDefn5,S,.,!2!cIL1 IBuiltin!=!1!cEDefn5,W;L,.,!2!cIL2 ICall!=!1!cEDefn5,S;L,.,!2!cIL3 ILocal!=!1!cEDefn5,W;W,.,!2!cIL4 IFuncall!=!1!cEDefn5,L,.,!2!cIL5 IConcat!=!1!cEDefn5,L,.,!2!cIL6 IBlock!=!1!cEDefn5,L,.,!2!cIL7 ILambda!=!1!cEDefn5,S,.,!2!cIL8 IEnv!=!1!cEDefn5,S;L,.,!2!cIL9 protect-define!=!1!cEDefn1,~protect-define,iescape,str protect-rhs!=!1!cEDefn1,~protect-rhs,iescape,str protect-lhs!=!1!cEDefn1,~protect-lhs,iescape,str protect-expr!=!1!cEDefn1,~protect-expr,iescape,str protect-arg!=!1!cEDefn1,~protect-arg,iescape,str protect-trim!=!1!cEDefn1,~protect-trim,iescape,s protect-ltrim!=!1!cEDefn1,~protect-ltrim,iescape,str escape!=!1!cEDefn1,~escape,iescape,str;!3!cP0:241:!4!cP2@242@subst:!4!cP1@244@$:!4!cP1@248@$`:!4!cP2@253@str parse-text!=!1!cEDefn1,~parse-text,iparse,text parse-subject!=!1!cEDefn1,~parse-subject,iparse,subj describe-error!=!1!cEDefn1,~describe-error,iparse,form:text:filename describe-lnum!=!1!cEDefn1,~describe-lnum,iparse,pos:subj parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos parse-list!=!1!cEDefn1,!c,iparse,subj:pos;!3!cP0:2512:!4!cP2@2513@parse-seq:!4!cP2@2515@subj:!4!cP1@2517@):!4!cP2@2521@pos:!4!cP0@2523@!5!cP2!402524!40parse-exp@!5!cP2!402526!40subj@!5!cP0!402528!40!51!cP2!502529!501+!40!51!cP2!502531!50pos:!4!cP2@2535@nil parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos POut-format!=!1!cEDefn1,~POut-format,iparse,value POut-form!=!1!cEDefn1,!c,iparse,st;!3!cP0:1942:!4!cP2@1943@rest:!4!cP2@1945@st POut-pos!=!1!cEDefn1,!c,iparse,st;!3!cP0:1922:!4!cP2@1923@word:!4!cP1@1925@1:!4!cP2@1927@st POut!=!1!cEDefn1,!c,iparse,pos:form;!3!cP0:1898:!4!cP2@1899@concat:!4!cP2@1901@pos:!4!cP1@1903@!40:!4!cP2@1907@form find-word!=!1!cEDefn1,~find-word,iparse,str:pos:pat pdec!=!1!cEDefn1,~pdec,iparse,text penc!=!1!cEDefn1,~penc,iparse,text format-form!=!1!cEDefn1,~format-form,iparse,form form-set-indices!=!1!cEDefn1,~form-set-indices,iparse,pos:form form-typename!=!1!cEDefn1,~form-typename,iparse,form form-index!=!1!cEDefn1,~form-index,iparse,form PList-is-empty?!=!1!cEDefn1,~PList-is-empty?,iparse,form string-value!=!1!cEDefn1,~string-value,iparse,form;!3!cP0:318:!4!cP2@319@case:!4!cP2@321@form:!4!cP0@323@!5!cP0!40324!40!51!cP2!50325!50PString!40!51!cP2!50327!50n!40!51!cP2!50329!50value@!5!cP2!40332!40value:!4!cP0@335@!5!cP2!40336!40else@!5!cP0!40338!40!51!cP2!50339!50concat!40!51!cP1!50341!50ERROR!cstring-value(!40!51!cP2!50348!50form!40!51!cP1!50350!50) symbol-to-string!=!1!cEDefn1,~symbol-to-string,iparse,form symbol-name!=!1!cEDefn1,~symbol-name,iparse,form PList!=!1!cEDefn5,W;L,iparse,!2!cP0 PString!=!1!cEDefn5,W;S,iparse,!2!cP1 PSymbol!=!1!cEDefn5,W;S,iparse,!2!cP2 PQuote!=!1!cEDefn5,W;L,iparse,!2!cP3 PQQuote!=!1!cEDefn5,W;L,iparse,!2!cP4 PUnquote!=!1!cEDefn5,W;L,iparse,!2!cP5 PSplice!=!1!cEDefn5,W;L,iparse,!2!cP6 PError!=!1!cEDefn5,W;S,iparse,!2!cP7 file-exists?!=!1!cEDefn1,~file-exists?,iio,fname read-lines!=!1!cEDefn1,~read-lines,iio,fname:?start:?end read-file!=!1!cEDefn1,~read-file,iio,fname write-file!=!1!cEDefn1,~write-file,iio,filename:data getline!=!1!cEDefn1,~getline,iio,prompt shell!1!=!1!cEDefn1,~shell!2,iio,cmd printn!=!1!cEDefn1,~printn,iio,...strings echo-command!=!1!cEDefn1,~echo-command,iio,str quote-sh-arg!=!1!cEDefn1,~quote-sh-arg,iio,arg shellc!=!1!cEDefn1,~shellc,iio,...all logshell!=!1!cEDefn1,!c,iio,cmd;!3!cP0:36:!4!cP2@37@if:!4!cP0@39@!5!cP2!4040!40filter@!5!cP1!4042!40S@!5!cP2!4046!40SCAM_DEBUG:!4!cP0@49@!5!cP2!4050!40print@!5!cP1!4052!40shell!c!50@!5!cP2!4058!40cmd;!3!cP0:62:!4!cP2@63@shell:!4!cP2@65@cmd SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
$(call ^require,io)
$(call ^require,parse)
$(call ^require,escape)
$(if $(call ^add-tags,!1:IL0!=IString!0S !1:IL1!=IVar!0S !1:IL2!=IBuiltin!0W!0L !1:IL3!=ICall!0S!0L !1:IL4!=ILocal!0W!0W !1:IL5!=IFuncall!0L !1:IL6!=IConcat!0L !1:IL7!=IBlock!0L !1:IL8!=ILambda!0S !1:IL9!=IEnv!0S!0L),)
$(if $(call ^add-tags,!1:EDefn0!=EBuiltin!0S!0W!0S !1:EDefn1!=EFunc!0S!0W!0S !1:EDefn2!=EVar!0S!0W !1:EDefn3!=ESMacro!0S!0W !1:EDefn4!=EXMacro!0S!0W !1:EDefn5!=ERecord!0S!0W!0S !1:EDefn6!=EIL!0S!0W !1:EDefn7!=EArg!0W !1:EDefn8!=EMarker!0W),)
~il-merge-strings = $(if $(filter !:IL0,$(firstword $(call ^u,$(word 1,$1)))),$(call ~il-merge-strings,$(wordlist 2,99999999,$1),$2$(call ^n,2,$(call ^u,$(word 1,$1)))),$(call ~append,$(if $2,$(call ^d,!:IL0 $(call ^d,$2))),$(word 1,$1),$(if $(word 2,$1),$(call ~il-merge-strings,$(wordlist 2,99999999,$1),))))
~il-flatten = $(filter %,$(foreach node,$1,$(if $(filter !:IL6,$(firstword $(call ^u,$(node)))),$(call ~il-flatten,$(wordlist 2,99999999,$(call ^u,$(node)))),$(node))))
~il-concat = $(call ^Y,$(call ~il-merge-strings,$(call ~il-flatten,$1),),,,,,,,,,$`(if $`(word 2,$`1),!:IL6 $`1,$`(or $`(call ^u,$`(word 1,$`1)),!:IL0 !.)))
~il-demote = $(or $(if $(filter !:IL0,$(firstword $1)),!:IL0 $(call ^d,$(word 2,$1)),$(if $(filter !:IL3,$(firstword $1)),$(if $(call ~eq?,$(call ^n,2,$1),^u),$(call ^u,$(word 1,$(wordlist 3,99999999,$1)))))),!:IL3 ^d $(call ^d,$1))
~il-promote = !:IL3 ^u $(call ^d,$1)
~gen-global-name = $(if $(filter %&global,$2),$1,$(SCAM_NS)$1)
~filtersub = $(patsubst $1,$2,$(filter $1,$3))
~gensym-name = $(if $(filter $1&$3!=%,$2),$(call ~gensym-name,$1,$2 .,$(words $2)),$1&$3)
~gensym = !:P2 0 $(call ^d,$(call ~gensym-name,$(call ~symbol-name,$1),$2,))
~after = $(filter %,$(subst !S, ,$(wordlist 2,99999999,$(subst !S$1!S,!S$1!S ,!S$(subst $  ,!S,$2)!S))))
~env-rewind-M = $(call ~append,$(call ~hash-find,:,$1),$(call ~after,$(call ~hash-find,$2,$1),$1))
~gen-error = !:P7 $(call ~form-index,$1) $(call ^d,$(call ~vsprintf,$2,$(foreach N,3,$(^v))))
~compile-warn = $(info $(call ~describe-error,$(call ~gen-error,$1,$2,$3,$4,$5),$(call ~pdec,$(~*compile-subject*)),$(~*compile-file*)))
~form-description = $(if $(call ~eq?,$1,%),form,$(if $(call ~eq?,$1,L),list,$(if $(call ~eq?,$1,S),symbol,$(if $(call ~eq?,$1,Q),literal string,$(call ~form-typename,$1)))))
~err-expected = $(call ~gen-error,$(or $2,$3),$(if $2,invalid,missing) $4 in $5$(if $1,; expected a $(subst |1,|,$(subst |0, ,$(subst $  , or ,$(foreach ty,$1,$(subst $  ,|0,$(subst |,|1,$(call ~form-description,$(call ^u,$(ty)))))))))),$6,$7)
~check-argc = $(if $(if $(or $(filter $1,$(words $2)),$(and $(filter more,$1),$(or $(call ~eq?,0,$(word 1,$1)),$(word $(word 1,$1),$2)))),,1),$(call ~gen-error,$3,$(subst %S,$(if $(call ~eq?,$1,1),,s),$(if ,,%q accepts %s argument%S, not %s)),$(call ~symbol-name,$3),$1,$(words $2)))
~import-binding = $(if $(if $(filter b p i%,$(word 3,$2)),,1),$(call ~hash-bind,$1,$(call ~append,$(wordlist 1,2,$2),i$(if $(or $(subst !.,,$(word 4,$2)),$(if $(filter !:EDefn3,$(firstword $2)),1)),$3),$(wordlist 4,99999999,$2))))
~env-import = $(if $2,$1,$(filter %,$(foreach b,$1,$(call ~import-binding,$(call ~promote,$(subst !8,%,$(word 1,$(subst !=, ,$b)))),$(call ~nth,2,$(subst !=, ,$b)),$3))))
define ~env-export
# Exports: $(subst 
,!n,$(subst $(if ,,,i ),! ,$(subst $(if ,,!=V,),!V,$(subst $(if ,,!=F,),|,$(subst !30,@,$(subst !20,:,$(subst !10,;,$(subst !0,$(if ,,,),$(subst @,!e,$(subst |,!d,$(subst :,!c,$(subst ;,!b,$(subst $(if ,,,),!a,$(subst !41,!5,$(subst !31,!4,$(subst !21,!3,$(subst !11,!2,$1)))))))))))))))))

endef
~*dummy-env* := $(call ~hash-bind,,!:EDefn6 $(call ^d,!:IL0 !.) p)
define ~env-from-file
$(if $1,$(or $(call ~env-import,$(subst !2,!11,$(subst !3,!21,$(subst !4,!31,$(subst !5,!41,$(subst !a,$(if ,,,),$(subst !b,;,$(subst !c,:,$(subst !d,|,$(subst !e,@,$(subst $(if ,,,),!0,$(subst ;,!10,$(subst :,!20,$(subst @,!30,$(subst |,$(if ,,!=F,),$(subst !V,$(if ,,!=V,),$(subst ! ,$(if ,,,i ),$(subst !n,
,$(call ^u,$(word 1,$(call ~filtersub,#!0Exports:!0%,%,$(if $(filter ///%,$1),$(call ~split,
,$(value $1)),$(call ~read-lines,$1,1,4)))))))))))))))))))))),$2,$(call ^d,$(notdir $(basename $1)))),$(~*dummy-env*)))
endef
$(if $(call ~memoize,~env-from-file),)
~mod-find = $(or $(firstword $(filter %$(notdir $1).min,$(~*compile-mods*))),$(if $(and $(if $(filter %/runtime.min,$(~*compile-mods*)),,1),$(if $(filter-out u%,$(flavor ///$(notdir $1).min)),1)),///$(notdir $1).min,$(info warning: cannot find module $1)))
~require-module = $(call ~env-from-file,$(call ~mod-find,$1),$2)
~use-module = $(call ^Y,$(call ~require-module,$1,),,,,,,,,,$`(if $`1,$`(call ^set,SCAM_MODS,$`(call ^set,SCAM_MODS,$`(~*compile-mods*),$`(SCAM_MODS)),$`(and $`(call ^require,$(call ^E,$1))1,$`(or $`(filter %,$`(foreach e,$`1,$`(if $`(filter !:EDefn4,$`(firstword $`(call ~nth,2,$`(subst !=, ,$`e)))),$`e))),$`(~*dummy-env*))))))
~env-rewind-x = $(call ^Y,$(call ~hash-find,$2,$1),$1,$2,,,,,,,$`(if $`(call ~filtersub,i%,%,$`(filter b p i%,$`(word 3,$`(call ~nth,2,$`(subst !=, ,$`1))))),$`(call ~env-rewind-x,$`(call ~require-module,$`(call ~promote,$`(call ~filtersub,i%,%,$`(filter b p i%,$`(word 3,$`(call ~nth,2,$`(subst !=, ,$`1)))))),1),$`3),$`(call ~after,$`1,$`2)))
~env-rewind = $(call ~append,$(call ~hash-find,:,$1),$(call ~env-rewind-x,$1,$2))
~builtin-names := $(patsubst .%,%,abspath basename dir error eval firstword flavor info lastword notdir origin realpath shell sort strip suffix value warning wildcard words addprefix addsuffix filter filter-out findstring join word .foreach patsubst .subst wordlist)
~base-env := $(call ~append,$(foreach b,abspath basename dir error eval firstword flavor info lastword notdir origin realpath shell sort strip suffix value warning wildcard words,$(call ~hash-bind,$b,!:EDefn0 $(call ^d,$b) b 1)),$(foreach b,addprefix addsuffix filter filter-out findstring join word,$(call ~hash-bind,$b,!:EDefn0 $(call ^d,$b) b 2)),$(foreach b,.foreach patsubst .subst wordlist,$(call ~hash-bind,$b,!:EDefn0 $(call ^d,$(patsubst .%,%,$b)) b 3)),$(foreach b,and or call,$(call ~hash-bind,$b,!:EDefn0 $(call ^d,$b) b %)),$(call ~hash-bind,if,!:EDefn0 if b 2!0or!03),$(foreach v,MAKEFILE_LIST .DEFAULT_GOAL,$(call ~hash-bind,$v,!:EDefn2 $(call ^d,$v) b)))
~resolve = $(if $(filter !:P2,$(firstword $1)),$(call ~nth,2,$(subst !=, ,$(or $(filter $(subst !,!1,$(call ^n,3,$1))!=%,$2),$(filter $(subst !,!1,$(call ^n,3,$1))!=%,$(~base-env))))),-)
~begin-block = $(if $(and $1,$(if $(word 2,$1),,1)),$(call ^u,$(word 1,$1)),!:P0 0 $(call ~cons,!:P2 0 begin,$1))

endef
 
define ///gen0.min
# compiled from gen0.scm
# Requires: core parse escape gen runtime
# Requires: scam-ct
# Exports: c0!=!1!cEDefn1,~c0,.,form:env:?inblock c0-error!=!1!cEDefn1,~c0-error,.,form c0-qq!=!1!cEDefn1,~c0-qq,.,env:form:?nest c0-qq-form!=!1!cEDefn1,~c0-qq-form,.,template:sub QQS!=!1!cEDefn3,!2!cP1;4912;*!3*,p c0-qq!=!1!cEDefn1,~c0-qq,.,!2. ml.special-begin!=!1!cEDefn1,~ml.special-begin,.,env:sym:args:inblock c0-block!=!1!cEDefn1,~c0-block,.,forms:env c0-block-cc!=!1!cEDefn1,~c0-block-cc,.,env:forms:k:?results:?o ml.special-require!=!1!cEDefn1,~ml.special-require,.,env:sym:args:inblock ml.special-declare!=!1!cEDefn1,~ml.special-declare,.,env:sym:args:inblock ml.special-define!=!1!cEDefn1,~ml.special-define,.,env:sym:args:inblock c0-def!=!1!cEDefn1,!c,.,env:sym:args:inblock:is-define;!3!cP0:4235:!4!cP2@4236@env-strip:!4!cP2@4238@inblock:!4!cP0@4240@!5!cP2!404241!40c0-def2@!5!cP2!404243!40env@!5!cP0!404245!40!51!cP2!504246!50form-index!40!51!cP2!504248!50sym@!5!cP0!404251!40!51!cP2!504252!50first!40!51!cP2!504254!50args@!5!cP0!404257!40!51!cP2!504258!50get-flags!40!51!cP2!504260!50args!40!51!cP1!504262!501@!5!cP0!404265!40!51!cP2!504266!50skip-flags!40!51!cP2!504268!50args!40!51!cP1!504270!501@!5!cP2!404273!40is-define@!5!cP2!404275!40nil c0-def2!=!1!cEDefn1,~c0-def2,.,env:pos:what:flags:body:is-define:is-macro c0-def-compound!=!1!cEDefn1,~c0-def-compound,.,env:n:name:args:flags:body:is-define:is-macro check-optional-args!=!1!cEDefn1,~check-optional-args,.,args:?seen-optional c0-def-symbol!=!1!cEDefn1,~c0-def-symbol,.,env:n:name:flags:body:is-define:is-macro c0-check-body!=!1!cEDefn1,~c0-check-body,.,where:first-form:is-define ml.special-lambda!=!1!cEDefn1,~ml.special-lambda,p,env:sym:args:inblock lambda-error!=!1!cEDefn1,~lambda-error,p,type:form:parent:desc c0-lambda!=!1!cEDefn1,~c0-lambda,.,env:args:body lambda-env!=!1!cEDefn1,!c,.,args:env;!3!cP0:2743:!4!cP2@2744@append:!4!cP0@2746@!5!cP2!402747!40lambda-env-args@!5!cP2!402749!40args@!5!cP0!402751!40!51!cP2!502752!50concat!40!51!cP1!502754!50.!40!51!cP0!502758!50!511!cP2!5102759!510emarker-level!50!511!cP0!5102761!510!5111!cP2!51102762!5110hash-get!510!5111!cP2!51102764!5110LambdaMarkerKey!510!5111!cP2!51102766!5110env:!4!cP2@2772@env emarker-level!=!1!cEDefn1,~emarker-level,.,marker lambda-env-args!=!1!cEDefn1,~lambda-env-args,p,args:level lambda-env-arg9!=!1!cEDefn1,~lambda-env-arg9,p,xargs:level lambda-arg!=!1!cEDefn1,!c,.,sym:single-value:rest-value;!3!cP0:2221:!4!cP2@2222@foreach:!4!cP2@2224@name:!4!cP0@2226@!5!cP2!402227!40symbol-name@!5!cP2!402229!40sym:!4!cP0@2232@!5!cP2!402233!40if@!5!cP0!402235!40!51!cP2!502236!50filter!40!51!cP1!502238!50...%!40!51!cP2!502243!50name@!5!cP0!402271!40!51!cP2!502272!50hash-bind!40!51!cP0!502274!50!511!cP2!5102275!510or!50!511!cP0!5102277!510!5111!cP2!51102278!5110patsubst!510!5111!cP1!51102280!5110...%!510!5111!cP1!51102285!5110%!510!5111!cP2!51102289!5110name!50!511!cP2!5102292!510name!40!51!cP2!502295!50rest-value@!5!cP0!402298!40!51!cP2!502299!50hash-bind!40!51!cP0!502301!50!511!cP2!5102302!510patsubst!50!511!cP1!5102304!510?%!50!511!cP1!5102309!510%!50!511!cP2!5102313!510name!40!51!cP2!502316!50single-value c0-L!=!1!cEDefn1,~c0-L,p,env:pos:sym:args:defn:inblock c0-record!=!1!cEDefn1,~c0-record,.,env:sym:args:encodings:tag special-form-func!=!1!cEDefn1,!c,.,name;!3!cP0:1658:!4!cP2@1659@declare:!4!cP0@1661@!5!cP2!401662!40ml.special-;!3!cP0:1666:!4!cP2@1667@concat:!4!cP0@1669@!5!cP2!401670!40global-name@!5!cP2!401672!40ml.special-:!4!cP2@1675@name c0-call!=!1!cEDefn1,~c0-call,.,env:sym:args:realname:formal-args:body get-argc!=!1!cEDefn1,~get-argc,.,args c0-vec!=!1!cEDefn1,~c0-vec,.,forms:env c0-S!=!1!cEDefn1,~c0-S,p,env:sym:name:defn c0-S-error!=!1!cEDefn1,~c0-S-error,.,sym:defn c0-builtin!=!1!cEDefn1,~c0-builtin,.,env:name:argc c0-macro!=!1!cEDefn1,~c0-macro,.,env:sym:inln c0-ctor!=!1!cEDefn1,~c0-ctor,p,env:sym:encs c0-local!=!1!cEDefn1,~c0-local,.,arg:marker:sym c0-lambda!=!1!cEDefn1,~c0-lambda,.,env:args:body c0-block!=!1!cEDefn1,~c0-block,.,forms:env c0!=!1!cEDefn1,~c0,.,form:env:?inblock skip-flags!=!1!cEDefn1,~skip-flags,.,args:skip get-flags!=!1!cEDefn1,~get-flags,.,args:skip scan-flags-x!=!1!cEDefn1,~scan-flags-x,.,args:n:prev-n scan-flags!=!1!cEDefn1,!c,.,args:skip;!3!cP0:168:!4!cP2@169@scan-flags-x:!4!cP2@171@args:!4!cP0@173@!5!cP2!40174!401+@!5!cP2!40176!40skip:!4!cP2@179@skip scan-flags-x!=!1!cEDefn1,~scan-flags-x,.,args:n:prev-n env-strip!=!1!cEDefn1,~env-strip,.,inblock:node block-result!=!1!cEDefn1,~block-result,.,inblock:env:node begin-block!=!1!cEDefn1,~begin-block,igen,forms resolve!=!1!cEDefn1,~resolve,igen,form:env base-env!=!1!cEDefn2,~base-env! builtin-names!=!1!cEDefn2,~builtin-names! builtins-3!=!1!cEDefn3,!2!cP1;3843;.foreach:patsubst:.subst:wordlist,igen builtins-2!=!1!cEDefn3,!2!cP1;3819;addprefix:addsuffix:filter:filter-out:findstring:join:word,igen builtins-1!=!1!cEDefn3,!2!cP0;3759;!3!cP2:3760:concat;!3!cP1:3762:abspath@basename@dir@error@eval@firstword@flavor;!3!cP1:3778:@info@lastword@notdir@origin@realpath@shell@sort;!3!cP1:3795:@strip@suffix@value@warning@wildcard@words,igen env-rewind!=!1!cEDefn1,~env-rewind,igen,env:name env-rewind-x!=!1!cEDefn1,~env-rewind-x,igen,env:name use-module!=!1!cEDefn1,~use-module,igen,mod require-module!=!1!cEDefn1,~require-module,igen,mod:read-priv env-export!=!1!cEDefn1,~env-export,igen,env import-binding!=!1!cEDefn1,~import-binding,igen,key:defn:d-name is-private?!=!1!cEDefn1,!c,igen,defn;!3!cP0:2714:!4!cP2@2715@filter:!4!cP1@2717@b!40p!40i%:!4!cP0@2726@!5!cP2!402727!40EDefn.priv@!5!cP2!402729!40defn check-argc!=!1!cEDefn1,~check-argc,igen,expected:args:sym err-expected!=!1!cEDefn1,~err-expected,igen,types:form:parent:what:where:?arg1:?arg2 form-description!=!1!cEDefn1,~form-description,igen,code compile-warn!=!1!cEDefn1,~compile-warn,igen,form:fmt:?a:?b:?c gen-error!=!1!cEDefn1,~gen-error,igen,form:fmt:...values env-rewind-M!=!1!cEDefn1,~env-rewind-M,igen,env:name after!=!1!cEDefn1,~after,igen,item:vec gensym!=!1!cEDefn1,~gensym,igen,base:env gensym-name!=!1!cEDefn1,~gensym-name,igen,base:env:suff gen-global-name!=!1!cEDefn1,~gen-global-name,igen,local:flags il-promote!=!1!cEDefn1,~il-promote,igen,node il-demote!=!1!cEDefn1,~il-demote,igen,node il-concat!=!1!cEDefn1,~il-concat,igen,nodes il-flatten!=!1!cEDefn1,~il-flatten,igen,nodes il-merge-strings!=!1!cEDefn1,~il-merge-strings,igen,nodes:accum NoOp!=!1!cEDefn3,!2!cP0;978;!3!cP2:979:IString;!3!cP1:981:!3.,igen *compile-mods*!=!1!cEDefn2,~*compile-mods*! *compile-outfile*!=!1!cEDefn2,~*compile-outfile*! *compile-file*!=!1!cEDefn2,~*compile-file*! *compile-subject*!=!1!cEDefn2,~*compile-subject*! MacroMarkerKey!=!1!cEDefn3,!2!cP1;658;!cm,igen LambdaMarkerKey!=!1!cEDefn3,!2!cP1;644;!c,igen NoGlobalName!=!1!cEDefn3,!2!cP1;473;!c,igen EDefn.priv!=!1!cEDefn1,!c,igen,defn;!3!cP0:457:!4!cP2@458@word:!4!cP1@460@3:!4!cP2@462@defn EBuiltin!=!1!cEDefn5,S;W;S,igen,!2!cEDefn0 EFunc!=!1!cEDefn5,S;W;S,igen,!2!cEDefn1 EVar!=!1!cEDefn5,S;W,igen,!2!cEDefn2 ESMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn3 EXMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn4 ERecord!=!1!cEDefn5,S;W;S,igen,!2!cEDefn5 EIL!=!1!cEDefn5,S;W,igen,!2!cEDefn6 EArg!=!1!cEDefn5,W,igen,!2!cEDefn7 EMarker!=!1!cEDefn5,W,igen,!2!cEDefn8 IString!=!1!cEDefn5,S,igen,!2!cIL0 IVar!=!1!cEDefn5,S,igen,!2!cIL1 IBuiltin!=!1!cEDefn5,W;L,igen,!2!cIL2 ICall!=!1!cEDefn5,S;L,igen,!2!cIL3 ILocal!=!1!cEDefn5,W;W,igen,!2!cIL4 IFuncall!=!1!cEDefn5,L,igen,!2!cIL5 IConcat!=!1!cEDefn5,L,igen,!2!cIL6 IBlock!=!1!cEDefn5,L,igen,!2!cIL7 ILambda!=!1!cEDefn5,S,igen,!2!cIL8 IEnv!=!1!cEDefn5,S;L,igen,!2!cIL9 protect-define!=!1!cEDefn1,~protect-define,iescape,str protect-rhs!=!1!cEDefn1,~protect-rhs,iescape,str protect-lhs!=!1!cEDefn1,~protect-lhs,iescape,str protect-expr!=!1!cEDefn1,~protect-expr,iescape,str protect-arg!=!1!cEDefn1,~protect-arg,iescape,str protect-trim!=!1!cEDefn1,~protect-trim,iescape,s protect-ltrim!=!1!cEDefn1,~protect-ltrim,iescape,str escape!=!1!cEDefn1,~escape,iescape,str;!3!cP0:241:!4!cP2@242@subst:!4!cP1@244@$:!4!cP1@248@$`:!4!cP2@253@str parse-text!=!1!cEDefn1,~parse-text,iparse,text parse-subject!=!1!cEDefn1,~parse-subject,iparse,subj describe-error!=!1!cEDefn1,~describe-error,iparse,form:text:filename describe-lnum!=!1!cEDefn1,~describe-lnum,iparse,pos:subj parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos parse-list!=!1!cEDefn1,!c,iparse,subj:pos;!3!cP0:2512:!4!cP2@2513@parse-seq:!4!cP2@2515@subj:!4!cP1@2517@):!4!cP2@2521@pos:!4!cP0@2523@!5!cP2!402524!40parse-exp@!5!cP2!402526!40subj@!5!cP0!402528!40!51!cP2!502529!501+!40!51!cP2!502531!50pos:!4!cP2@2535@nil parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos POut-format!=!1!cEDefn1,~POut-format,iparse,value POut-form!=!1!cEDefn1,!c,iparse,st;!3!cP0:1942:!4!cP2@1943@rest:!4!cP2@1945@st POut-pos!=!1!cEDefn1,!c,iparse,st;!3!cP0:1922:!4!cP2@1923@word:!4!cP1@1925@1:!4!cP2@1927@st POut!=!1!cEDefn1,!c,iparse,pos:form;!3!cP0:1898:!4!cP2@1899@concat:!4!cP2@1901@pos:!4!cP1@1903@!40:!4!cP2@1907@form find-word!=!1!cEDefn1,~find-word,iparse,str:pos:pat pdec!=!1!cEDefn1,~pdec,iparse,text penc!=!1!cEDefn1,~penc,iparse,text format-form!=!1!cEDefn1,~format-form,iparse,form form-set-indices!=!1!cEDefn1,~form-set-indices,iparse,pos:form form-typename!=!1!cEDefn1,~form-typename,iparse,form form-index!=!1!cEDefn1,~form-index,iparse,form PList-is-empty?!=!1!cEDefn1,~PList-is-empty?,iparse,form string-value!=!1!cEDefn1,~string-value,iparse,form;!3!cP0:318:!4!cP2@319@case:!4!cP2@321@form:!4!cP0@323@!5!cP0!40324!40!51!cP2!50325!50PString!40!51!cP2!50327!50n!40!51!cP2!50329!50value@!5!cP2!40332!40value:!4!cP0@335@!5!cP2!40336!40else@!5!cP0!40338!40!51!cP2!50339!50concat!40!51!cP1!50341!50ERROR!cstring-value(!40!51!cP2!50348!50form!40!51!cP1!50350!50) symbol-to-string!=!1!cEDefn1,~symbol-to-string,iparse,form symbol-name!=!1!cEDefn1,~symbol-name,iparse,form PList!=!1!cEDefn5,W;L,iparse,!2!cP0 PString!=!1!cEDefn5,W;S,iparse,!2!cP1 PSymbol!=!1!cEDefn5,W;S,iparse,!2!cP2 PQuote!=!1!cEDefn5,W;L,iparse,!2!cP3 PQQuote!=!1!cEDefn5,W;L,iparse,!2!cP4 PUnquote!=!1!cEDefn5,W;L,iparse,!2!cP5 PSplice!=!1!cEDefn5,W;L,iparse,!2!cP6 PError!=!1!cEDefn5,W;S,iparse,!2!cP7 intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
$(call ^require,parse)
$(call ^require,escape)
$(call ^require,gen)
~block-result = $(if $1,!:IL9 $(call ^d,$2) $3,$(or $3,!:IL0 !.))
~env-strip = $(if $1,$2,$(if $(filter !:IL9,$(firstword $2)),$(wordlist 3,99999999,$2),$2))
~scan-flags-x = $(or $(if $(filter !:P2,$(firstword $(call ~nth,$2,$1))),$(if $(filter &private &public &inline &global,$(call ^n,3,$(call ~nth,$2,$1))),$(call ~scan-flags-x,$1,$(call ~1+,$2),$2))),$3)
~get-flags = $(filter %,$(foreach form,$(wordlist $(call ~1+,$2),$(call ~scan-flags-x,$1,$(call ~1+,$2),$2),$1),$(if $(filter !:P2,$(firstword $(call ^u,$(form)))),$(call ^n,3,$(call ^u,$(form))))))
~skip-flags = $(wordlist $(call ~1+,$(call ~scan-flags-x,$1,$(call ~1+,$2),$2)),99999999,$1)
~c0-local = $(and $(if $(and $(findstring U,$(SCAM_DEBUG)),$(if $(findstring $(if $(filter !:EDefn8,$(firstword $2)),$(word 2,$2)),$1),,1)),$(call ~compile-warn,$3,reference to upvalue %q,$(call ~symbol-name,$3)))1,!:IL4 $(subst .,,$1) $(words $(subst .,. ,$(subst $1,,$(if $(filter !:EDefn8,$(firstword $2)),$(word 2,$2))$(subst .,,$1)))))
~c0-ctor = $(call ~c0-lambda,$1,$(foreach i,$(call ~indicesX,$3,1),$(call ^d,!:P2 0 $(call ^d,a$(call ^u,$i)))),$(call ^d,!:P0 0 $(call ~cons,$2,$(foreach i,$(call ~indicesX,$3,1),$(call ^d,!:P2 0 $(call ^d,a$(call ^u,$i)))))))
~c0-macro = $(call ~c0-lambda,$1,$(foreach a,$(call ^u,$(word 1,$3)),$(call ^d,!:P2 0 $a)),$(call ^d,!:P0 0 $(call ~cons,$2,$(foreach a,$(call ^u,$(word 1,$3)),$(call ^d,!:P2 0 $a)))))
~c0-builtin = !:IL8 $(call ^d,$(if $(firstword $(filter 3 2 1,$3)),!:IL2 $2 $(foreach n,$(wordlist 1,$(firstword $(filter 3 2 1,$3)),1 2 3),$(call ^d,!:IL4 $(call ^u,$n) 0)),!:IL3 ^apply $(call ^d,!:IL0 $(call ^d,$2)) $(call ^d,!:IL1 ^av)))
~c0-S-error = $(if $2,$(call ~gen-error,$1,internal: %q binds to %q,$1,$2),$(call ~gen-error,$1,undefined variable %q,$(call ~symbol-name,$1)))
~c0-S = $(if $(filter !:EDefn7,$(firstword $4)),$(call ~c0-local,$(word 2,$4),$(call ~hash-get,:,$1),$2),$(if $(filter !:EDefn2,$(firstword $4)),!:IL1 $(call ^d,$(call ^n,2,$4)),$(if $(filter !:EDefn1,$(firstword $4)),$(if $(filter :,$(call ^n,2,$4)),$(call ~c0-macro,$1,$2,$(call ^n,4,$4)),!:IL2 value $(call ^d,!:IL0 $(call ^d,$(call ^n,2,$4)))),$(if $(filter !:EDefn3,$(firstword $4)),$(call ~c0,$(call ^n,2,$4),$(call ~env-rewind,$1,$3)),$(if $(filter !:EDefn6,$(firstword $4)),$(call ^n,2,$4),$(if $(filter !:EDefn5,$(firstword $4)),$(call ~c0-ctor,$1,$2,$(call ^n,2,$4)),$(if $(filter !:EDefn0,$(firstword $4)),$(call ~c0-builtin,$1,$(call ^n,2,$4),$(call ^n,4,$4)),$(call ~c0-S-error,$2,$4))))))))
~c0-vec = $(foreach f,$1,$(call ^d,$(call ~c0,$(call ^u,$f),$2)))
~get-argc = $(if $(filter ...% ?%,$(lastword $1)),$(if $(filter ...%,$(lastword $1)),$(words $(filter-out ...% ?%,$1)) or more,$(call ~get-argc,$(call ~butlast,$1)) or $(words $1)),$(words $1))
~c0-call = $(or $(call ~check-argc,$(call ~get-argc,$5),$3,$2),$(if $6,$(call ~c0-block,$6,$(call ~append,$(join $(addsuffix !=,$5),$(foreach a,$3,$(call ^d,!:EDefn6 $(call ^d,$(call ~c0,$(call ^u,$a),$1,)) p))),$(call ~hash-bind,:m,!:EDefn8 $(call ~form-index,$2)),$(if $(if $(filter :,$4),,1),$(call ~hash-bind,$(call ~symbol-name,$2),!:EDefn1 $(call ^d,$4) . $(call ^d,$(call ^d,$5)))),$(call ~env-rewind,$1,$(call ~symbol-name,$2)))),!:IL3 $(call ^d,$4) $(call ~c0-vec,$3,$1)))
~c0-record = $(or $(call ~check-argc,$(words $4),$3,$2),!:IL6 $(call ~cons,!:IL0 $(call ^d,$5),$(foreach n,$(call ~indicesX,$4,1),$(call ~append,$(call ^d,!:IL0 !0),$(call ^d,$(if $(filter S,$(word $n,$4)),$(call ~il-demote,$(call ~c0,$(call ~nth,$n,$3),$1)),$(call ~c0,$(call ~nth,$n,$3),$1)))))))
~c0-L = $(if $(filter !:EDefn1,$(firstword $5)),$(call ~c0-call,$1,$3,$4,$(call ^n,2,$5),$(call ^u,$(word 1,$(call ^n,4,$5))),$(wordlist 2,99999999,$(call ^n,4,$5))),$(if $(filter !:EDefn0,$(firstword $5)),$(or $(call ~check-argc,$(call ^n,4,$5),$4,$3),!:IL2 $(call ^n,2,$5) $(call ~c0-vec,$4,$1)),$(if $(filter !:EDefn4,$(firstword $5)),$(if $(word 3,$5),$(call ~c0,$(call $(call ^n,2,$5),$4),$1,$6),$(call ~gen-error,$3,cannot use xmacro in its own file)),$(if $(filter !:EDefn5,$(firstword $5)),$(call ~c0-record,$1,$3,$4,$(call ^n,2,$5),$(call ^n,4,$5)),$(if $(if $3,,1),$(call ~gen-error,$2,missing function/macro name),$(if $5,!:IL5 $(call ~c0-vec,$(call ~cons,$3,$4),$1),$(if $(if $(filter-out u%,$(flavor ~ml.special-$(call ~symbol-name,$3))),1),$(call ~ml.special-$(call ~symbol-name,$3),$1,$3,$4,$6),$(call ~gen-error,$3,undefined symbol: %q,$(call ~symbol-name,$3)))))))))
~lambda-env-arg9 = $(foreach n,$(call ~indicesX,$1,1),$(foreach name,$(call ~symbol-name,$(call ~nth,$n,$1)),$(if $(filter ...%,$(name)),$(call ~hash-bind,$(or $(patsubst ...%,%,$(name)),$(name)),$(if $(call ~eq?,$n,1),!:EDefn6 $(call ^d,!:IL1 9) .,!:EDefn6 $(call ^d,!:IL2 wordlist $(call ^d,!:IL0 $(call ^d,$n)) $(call ^d,!:IL0 999999) $(call ^d,!:IL1 9)) .)),$(call ~hash-bind,$(patsubst ?%,%,$(name)),!:EDefn6 $(call ^d,!:IL2 call $(call ^d,!:IL0 ^n) $(call ^d,!:IL0 $(call ^d,$n)) $(call ^d,!:IL1 9)) .))))
~lambda-env-args = $(call ~append,$(call ~hash-bind,:,!:EDefn8 $2),$(foreach n,$(call ~indicesX,$(wordlist 1,8,$1),1),$(foreach name,$(call ~symbol-name,$(call ~nth,$n,$1)),$(if $(filter ...%,$(name)),$(call ~hash-bind,$(or $(patsubst ...%,%,$(name)),$(name)),!:EDefn6 $(call ^d,!:IL2 foreach $(call ^d,!:IL0 N) $(call ^d,!:IL0 $(call ^d,$n)) $(call ^d,!:IL1 ^v)) .),$(call ~hash-bind,$(patsubst ?%,%,$(name)),!:EDefn7 $2$n)))),$(if $(word 9,$1),$(call ~lambda-env-arg9,$(wordlist 9,99999999,$1),$2)))
~emarker-level = $(if $(filter !:EDefn8,$(firstword $1)),$(word 2,$1))
~c0-lambda = !:IL8 $(call ^d,$(call ~c0-block,$3,$(call ~append,$(call ~lambda-env-args,$2,.$(call ~emarker-level,$(call ~hash-get,:,$1))),$1)))
~lambda-error = $(call ~err-expected,$1,$2,$3,$4,(lambda (ARGNAME...) BODY))
~ml.special-lambda = $(if $(filter !:P0,$(firstword $(call ^u,$(word 1,$3)))),$(or $(call ^u,$(word 1,$(filter-out !.,$(foreach a,$(wordlist 3,99999999,$(call ^u,$(word 1,$3))),$(call ^d,$(if $(filter !:P2,$(firstword $(call ^u,$a))),,$(call ~lambda-error,S,$(call ^u,$a),$2,ARGNAME))))))),$(call ~c0-lambda,$1,$(wordlist 3,99999999,$(call ^u,$(word 1,$3))),$(wordlist 2,99999999,$3))),$(call ~lambda-error,L,$(call ^u,$(word 1,$3)),$2,(ARGNAME...)))
~c0-check-body = $(if $3,$(if $(if $2,,1),$(call ~gen-error,$1,no BODY supplied to (define FORM BODY))),$(if $2,$(call ~gen-error,$2,too many arguments to (declare ...))))
~c0-def-symbol = $(or $(if $(filter &inline,$4),$(call ~gen-error,$2,'&inline' does not apply to symbol definitions)),$(call ~c0-check-body,$2,$(call ^u,$(word 1,$5)),$6),!:IL9 $(call ^d,$(call ~hash-bind,$3,$(if $7,!:EDefn3 $(call ^d,$(call ~begin-block,$5)) $(if $(filter &private,$4),p,.),!:EDefn2 $(call ^d,$(call ~gen-global-name,$3,$4)) $(if $(filter &private,$4),p,.)),$1)) $(if $(and $6,$(if $7,,1)),!:IL3 ^set $(call ^d,!:IL0 $(call ^d,$(call ~gen-global-name,$3,$4))) $(call ^d,$(call ~c0-block,$5,$1))))
~check-optional-args = $(if $1,$(if $(filter ...% ?%,$(call ~symbol-name,$(call ^u,$(word 1,$1)))),$(call ~check-optional-args,$(wordlist 2,99999999,$1),1),$(if $2,$(call ~gen-error,$(call ^u,$(word 1,$1)),non-optional parameter after optional one),$(call ~check-optional-args,$(wordlist 2,99999999,$1),))))
~c0-def-compound = $(or $(call ~c0-check-body,$2,$(call ^u,$(word 1,$6)),$7),$(if $(or $8,$(and $(if $8,,1),$(filter &inline,$5))),$(call ^u,$(word 1,$(filter-out !.,$(foreach a,$4,$(call ^d,$(if $(filter ...% ?%,$(call ~symbol-name,$(call ^u,$a))),$(call ~gen-error,$(call ^u,$a),%s cannot have optional parameters,$(if $8,macros,inline functions)))))))),$(call ~check-optional-args,$4)),$(if $(and $(if $8,,1),$(filter $3,$(~builtin-names))),$(call ~gen-error,$2,cannot redefine built-in function %q,$3)),!:IL9 $(call ^d,$(call ~hash-bind,$3,!:EDefn1 $(call ^d,$(if $8,:,$(call ~gen-global-name,$3,$5))) $(if $(filter &private,$5),p,.) $(call ^d,$(call ~cons,$(foreach a,$4,$(call ^d,$(call ~symbol-name,$(call ^u,$a)))),$(if $(or $(and $(if $8,,1),$(filter &inline,$5)),$8),$6))),$1)) $(if $(and $7,$(if $8,,1)),!:IL3 ^fset $(call ^d,!:IL0 $(call ^d,$(call ~gen-global-name,$3,$5))) $(call ^d,$(call ~c0-lambda,$(if $8,$1,$(call ~hash-bind,$3,!:EDefn1 $(call ^d,$(call ~gen-global-name,$3,$5)) $(if $(filter &private,$5),p,.) $(call ^d,$(call ^d,$(foreach a,$4,$(call ^d,$(call ~symbol-name,$(call ^u,$a)))))),$1)),$4,$6))))
~c0-def2 = $(or $(if $(if $7,,1),$(if $(filter !:P4,$(firstword $3)),$(call ~c0-def2,$1,$(word 2,$3),$(wordlist 3,99999999,$3),$4,$5,$6,1))),$(if $(filter !:P2,$(firstword $3)),$(call ~c0-def-symbol,$1,$(word 2,$3),$(call ^n,3,$3),$4,$5,$6,$7),$(if $(filter !:P0,$(firstword $3)),$(if $(filter !:P2,$(firstword $(call ^u,$(word 1,$(wordlist 3,99999999,$3))))),$(call ~c0-def-compound,$1,$(word 2,$3),$(call ^n,3,$(call ^u,$(word 1,$(wordlist 3,99999999,$3)))),$(wordlist 2,99999999,$(wordlist 3,99999999,$3)),$4,$5,$6,$7),$(call ~err-expected,S,$(call ^u,$(word 1,$(wordlist 3,99999999,$3))),$3,NAME,(%s %s(NAME...)),$(if $6,define,declare),$(if $7,`))),$(call ~err-expected,L S,$3,$2,FORM,(%s %sFORM ...),$(if $6,define,declare),$(if $7,`)))))
~ml.special-define = $(call ~env-strip,$4,$(call ~c0-def2,$1,$(call ~form-index,$2),$(call ^u,$(word 1,$3)),$(call ~get-flags,$3,1),$(call ~skip-flags,$3,1),1,))
~ml.special-declare = $(call ~env-strip,$4,$(call ~c0-def2,$1,$(call ~form-index,$2),$(call ^u,$(word 1,$3)),$(call ~get-flags,$3,1),$(call ~skip-flags,$3,1),,))
~ml.special-require = $(or $(if $(call ~skip-flags,$3,1),$(call ~gen-error,$(call ~skip-flags,$3,1),too many arguments to require)),$(if $(filter !:P1,$(firstword $(call ^u,$(word 1,$3)))),$(call ^Y,$(call ~require-module,$(call ^n,3,$(call ^u,$(word 1,$3))),$(filter &private,$(call ~get-flags,$3,1))),$1,$(call ^n,3,$(call ^u,$(word 1,$3))),$4,,,,,,$`(if $`1,$`(call ~block-result,$`4,$`(call ~append,$`1,$`2),!:IL3 ^require $`(call ^d,!:IL0 $`(call ^d,$`(notdir $`3)))),$`(call ~gen-error,$`(call ^u,$`(word 1,$(call ^E,$3))),require: Cannot find module %q,$`3))),$(call ~err-expected,S,$(call ^u,$(word 1,$3)),$2,STRING,(require STRING))))
~c0-block-cc = $(if $(filter !:IL9,$(firstword $5)),$(call ~c0-block-cc,$(call ^n,2,$5),$2,$3,$4,$(wordlist 3,99999999,$5)),$(if $(if $2,,1),$(call ^Y,$1,$(filter-out !:IL0 !.,$(call ~append,$4,$(if $5,$(call ^d,$5)))),,,,,,,,$3),$(call ~c0-block-cc,$1,$(wordlist 2,99999999,$2),$3,$(call ~append,$4,$(if $5,$(call ^d,$5))),$(call ~c0,$(call ^u,$(word 1,$2)),$1,1))))
~c0-block = $(call ~c0-block-cc,$2,$1,$`(if $`(word 2,$`2),!:IL7 $`2,$`(or $`(call ^u,$`(word 1,$`2)),!:IL0 !.)))
~ml.special-begin = $(call ~c0-block,$3,$1)
~c0-qq-form = $(if $(findstring *!*,$1),$(call ~il-concat,$(call ~intersperse,$2,$(foreach a,$(call ~split,*!*,$1),$(call ^d,!:IL0 $a)))),$(if $(findstring *!1*,$1),$(call ~il-concat,$(call ~intersperse,$(call ~il-demote,$2),$(foreach a,$(call ~split,*!1*,$1),$(call ^d,!:IL0 $a)))),!:P7 0 $(call ^d,c0-qq-form: template='$1')))
~c0-qq = $(if $(filter !:P5,$(firstword $2)),$(if $3,$(call ~c0-qq-form,!:P5 $(word 2,$2) *!*,$(call ~c0-qq,$1,$(wordlist 3,99999999,$2),$(wordlist 2,99999999,$3))),$(call ~c0,$(wordlist 3,99999999,$2),$1)),$(if $(filter !:P4,$(firstword $2)),$(call ~c0-qq-form,!:P4 $(word 2,$2) *!*,$(call ~c0-qq,$1,$(wordlist 3,99999999,$2),$(call ~cons,1,$3))),$(if $(filter !:P0,$(firstword $2)),$(call ~c0-qq-form,!:P0 $(word 2,$2) *!*,$(call ~il-concat,$(call ~intersperse,!:IL0 !0,$(foreach c,$(wordlist 3,99999999,$2),$(call ^d,$(if $(filter !:P6,$(firstword $(call ^u,$c))),$(call ~c0,$(wordlist 3,99999999,$(call ^u,$c)),$1),$(call ~il-demote,$(call ~c0-qq,$1,$(call ^u,$c),$3)))))))),$(if $(filter !:P7,$(firstword $2)),$2,!:IL0 $(call ^d,$2)))))
~c0-error = $(call ~gen-error,$1,$(if $(filter !:P5,$(firstword $1)),unquote (,) outside of a quasiquoted (`) form,$(if $(filter !:P6,$(firstword $1)),splice (,@) outside of a quasiquoted (`) form,bad AST node: %q)),$1)
~c0 = $(if $(filter !:P2,$(firstword $1)),$(call ~c0-S,$2,$1,$(call ^n,3,$1),$(call ~resolve,$1,$2)),$(if $(filter !:P1,$(firstword $1)),!:IL0 $(call ^d,$(call ^n,3,$1)),$(if $(filter !:P0,$(firstword $1)),$(call ~c0-L,$2,$(word 2,$1),$(call ^u,$(word 1,$(wordlist 3,99999999,$1))),$(wordlist 2,99999999,$(wordlist 3,99999999,$1)),$(call ~resolve,$(call ^u,$(word 1,$(wordlist 3,99999999,$1))),$2),$3),$(if $(filter !:P3,$(firstword $1)),!:IL0 $(call ^d,$(wordlist 3,99999999,$1)),$(if $(filter !:P4,$(firstword $1)),$(call ~c0-qq,$2,$(wordlist 3,99999999,$1)),$(if $(filter !:P7,$(firstword $1)),$1,$(call ~c0-error,$1)))))))

endef
 
define ///gen1.min
# compiled from gen1.scm
# Requires: core escape parse gen runtime
# Requires: scam-ct
# Exports: gen1!=!1!cEDefn1,~gen1,.,node-vec:is-file c1-file!=!1!cEDefn1,~c1-file,.,node c1-file*!=!1!cEDefn1,~c1-file*,.,nodes c1-file-fset!=!1!cEDefn1,~c1-file-fset,.,lhs:rhs c1-file-set!=!1!cEDefn1,~c1-file-set,.,lhs:rhs c1-file!=!1!cEDefn1,~c1-file,.,node c1!=!1!cEDefn1,~c1,.,node c1-Var!=!1!cEDefn1,~c1-Var,.,name c1-Block!=!1!cEDefn1,~c1-Block,.,nodes c1-Funcall!=!1!cEDefn1,~c1-Funcall,.,nodes c1-Local!=!1!cEDefn1,~c1-Local,.,ndx:level make-list!=!1!cEDefn1,~make-list,.,a:b:words c1-Call!=!1!cEDefn1,~c1-Call,.,name:args c1-args9!=!1!cEDefn1,~c1-args9,.,nodes c1-Builtin!=!1!cEDefn1,~c1-Builtin,.,name:args il-vector!=!1!cEDefn1,~il-vector,.,nodes c1-Error!=!1!cEDefn1,~c1-Error,.,node c1-vec!=!1!cEDefn1,~c1-vec,.,args:delim:quotefn c1-arg-trim!=!1!cEDefn1,~c1-arg-trim,.,node c1-arg!=!1!cEDefn1,~c1-arg,.,node is-balanced?!=!1!cEDefn1,!c,.,node;!3!cP0:1505:!4!cP2@1506@case:!4!cP2@1508@node:!4!cP0@1510@!5!cP0!401511!40!51!cP2!501512!50ICall!40!51!cP2!501514!50_!40!51!cP2!501516!50_@!5!cP1!401519!401:!4!cP0@1522@!5!cP0!401523!40!51!cP2!501524!50IVar!40!51!cP2!501526!50_@!5!cP1!401529!401:!4!cP0@1532@!5!cP0!401533!40!51!cP2!501534!50IBuiltin!40!51!cP2!501536!50_!40!51!cP2!501538!50_@!5!cP1!401541!401:!4!cP0@1544@!5!cP0!401545!40!51!cP2!501546!50IFuncall!40!51!cP2!501548!50_@!5!cP1!401551!401 c1!=!1!cEDefn1,~c1,.,node one-char-names!=!1!cEDefn3,!2!cP0;1359;!3!cP2:1360:concat;!3!cP1:1362:a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@;!3!cP1:1417:A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@_,. voidify!=!1!cEDefn1,!c,.,node;!3!cP0:1275:!4!cP2@1276@if:!4!cP0@1278@!5!cP2!401279!40case@!5!cP2!401281!40node@!5!cP0!401283!40!51!cP0!501284!50!511!cP2!5101285!510IBuiltin!50!511!cP2!5101287!510name!50!511!cP2!5101289!510args!40!51!cP0!501292!50!511!cP2!5101293!510filter!50!511!cP1!5101295!510error!5110eval!5110info!50!511!cP2!5101303!510name@!5!cP0!401307!40!51!cP0!501308!50!511!cP2!5101309!510ICall!50!511!cP2!5101311!510name!50!511!cP2!5101313!510args!40!51!cP0!501316!50!511!cP2!5101317!510filter!50!511!cP1!5101319!510^require!50!511!cP2!5101323!510name:!4!cP2@1328@node:!4!cP0@1330@!5!cP2!401331!40IBuiltin@!5!cP1!401333!40if@!5!cP0!401337!40!51!cP2!500!50vector!40!51!cP2!501338!50node!40!51!cP0!501340!50!511!cP2!5101341!510IString!50!511!cP1!5101343!510!511. gen-extract!=!1!cEDefn1,~gen-extract,.,code gen-embed!=!1!cEDefn1,~gen-embed,.,str gen-decode!=!1!cEDefn1,!c,.,str;!3!cP0:1093:!4!cP2@1094@subst:!4!cP1@1096@~N:!4!cP1@1100@!n:!4!cP1@1104@~S:!4!cP1@1108@$:!4!cP1@1112@~R:!4!cP1@1116@):!4!cP1@1120@~C:!4!cP1@1124@!a:!4!cP1@1128@~L:!4!cP1@1132@(:!4!cP1@1136@~1:!4!cP1@1140@~:!4!cP2@1144@str gen-encode!=!1!cEDefn1,!c,.,str;!3!cP0:1026:!4!cP2@1027@subst:!4!cP1@1029@~:!4!cP1@1033@~1:!4!cP1@1037@(:!4!cP1@1041@~L:!4!cP1@1045@!a:!4!cP1@1049@~C:!4!cP1@1053@):!4!cP1@1057@~R:!4!cP1@1061@$:!4!cP1@1065@~S:!4!cP1@1069@!n:!4!cP1@1073@~N:!4!cP2@1077@str c1-Lambda!=!1!cEDefn1,~c1-Lambda,.,code begin-block!=!1!cEDefn1,~begin-block,igen,forms resolve!=!1!cEDefn1,~resolve,igen,form:env base-env!=!1!cEDefn2,~base-env! builtin-names!=!1!cEDefn2,~builtin-names! builtins-3!=!1!cEDefn3,!2!cP1;3843;.foreach:patsubst:.subst:wordlist,igen builtins-2!=!1!cEDefn3,!2!cP1;3819;addprefix:addsuffix:filter:filter-out:findstring:join:word,igen builtins-1!=!1!cEDefn3,!2!cP0;3759;!3!cP2:3760:concat;!3!cP1:3762:abspath@basename@dir@error@eval@firstword@flavor;!3!cP1:3778:@info@lastword@notdir@origin@realpath@shell@sort;!3!cP1:3795:@strip@suffix@value@warning@wildcard@words,igen env-rewind!=!1!cEDefn1,~env-rewind,igen,env:name env-rewind-x!=!1!cEDefn1,~env-rewind-x,igen,env:name use-module!=!1!cEDefn1,~use-module,igen,mod require-module!=!1!cEDefn1,~require-module,igen,mod:read-priv env-export!=!1!cEDefn1,~env-export,igen,env import-binding!=!1!cEDefn1,~import-binding,igen,key:defn:d-name is-private?!=!1!cEDefn1,!c,igen,defn;!3!cP0:2714:!4!cP2@2715@filter:!4!cP1@2717@b!40p!40i%:!4!cP0@2726@!5!cP2!402727!40EDefn.priv@!5!cP2!402729!40defn check-argc!=!1!cEDefn1,~check-argc,igen,expected:args:sym err-expected!=!1!cEDefn1,~err-expected,igen,types:form:parent:what:where:?arg1:?arg2 form-description!=!1!cEDefn1,~form-description,igen,code compile-warn!=!1!cEDefn1,~compile-warn,igen,form:fmt:?a:?b:?c gen-error!=!1!cEDefn1,~gen-error,igen,form:fmt:...values env-rewind-M!=!1!cEDefn1,~env-rewind-M,igen,env:name after!=!1!cEDefn1,~after,igen,item:vec gensym!=!1!cEDefn1,~gensym,igen,base:env gensym-name!=!1!cEDefn1,~gensym-name,igen,base:env:suff gen-global-name!=!1!cEDefn1,~gen-global-name,igen,local:flags il-promote!=!1!cEDefn1,~il-promote,igen,node il-demote!=!1!cEDefn1,~il-demote,igen,node il-concat!=!1!cEDefn1,~il-concat,igen,nodes il-flatten!=!1!cEDefn1,~il-flatten,igen,nodes il-merge-strings!=!1!cEDefn1,~il-merge-strings,igen,nodes:accum NoOp!=!1!cEDefn3,!2!cP0;978;!3!cP2:979:IString;!3!cP1:981:!3.,igen *compile-mods*!=!1!cEDefn2,~*compile-mods*! *compile-outfile*!=!1!cEDefn2,~*compile-outfile*! *compile-file*!=!1!cEDefn2,~*compile-file*! *compile-subject*!=!1!cEDefn2,~*compile-subject*! MacroMarkerKey!=!1!cEDefn3,!2!cP1;658;!cm,igen LambdaMarkerKey!=!1!cEDefn3,!2!cP1;644;!c,igen NoGlobalName!=!1!cEDefn3,!2!cP1;473;!c,igen EDefn.priv!=!1!cEDefn1,!c,igen,defn;!3!cP0:457:!4!cP2@458@word:!4!cP1@460@3:!4!cP2@462@defn EBuiltin!=!1!cEDefn5,S;W;S,igen,!2!cEDefn0 EFunc!=!1!cEDefn5,S;W;S,igen,!2!cEDefn1 EVar!=!1!cEDefn5,S;W,igen,!2!cEDefn2 ESMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn3 EXMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn4 ERecord!=!1!cEDefn5,S;W;S,igen,!2!cEDefn5 EIL!=!1!cEDefn5,S;W,igen,!2!cEDefn6 EArg!=!1!cEDefn5,W,igen,!2!cEDefn7 EMarker!=!1!cEDefn5,W,igen,!2!cEDefn8 IString!=!1!cEDefn5,S,igen,!2!cIL0 IVar!=!1!cEDefn5,S,igen,!2!cIL1 IBuiltin!=!1!cEDefn5,W;L,igen,!2!cIL2 ICall!=!1!cEDefn5,S;L,igen,!2!cIL3 ILocal!=!1!cEDefn5,W;W,igen,!2!cIL4 IFuncall!=!1!cEDefn5,L,igen,!2!cIL5 IConcat!=!1!cEDefn5,L,igen,!2!cIL6 IBlock!=!1!cEDefn5,L,igen,!2!cIL7 ILambda!=!1!cEDefn5,S,igen,!2!cIL8 IEnv!=!1!cEDefn5,S;L,igen,!2!cIL9 parse-text!=!1!cEDefn1,~parse-text,iparse,text parse-subject!=!1!cEDefn1,~parse-subject,iparse,subj describe-error!=!1!cEDefn1,~describe-error,iparse,form:text:filename describe-lnum!=!1!cEDefn1,~describe-lnum,iparse,pos:subj parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos parse-list!=!1!cEDefn1,!c,iparse,subj:pos;!3!cP0:2512:!4!cP2@2513@parse-seq:!4!cP2@2515@subj:!4!cP1@2517@):!4!cP2@2521@pos:!4!cP0@2523@!5!cP2!402524!40parse-exp@!5!cP2!402526!40subj@!5!cP0!402528!40!51!cP2!502529!501+!40!51!cP2!502531!50pos:!4!cP2@2535@nil parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos POut-format!=!1!cEDefn1,~POut-format,iparse,value POut-form!=!1!cEDefn1,!c,iparse,st;!3!cP0:1942:!4!cP2@1943@rest:!4!cP2@1945@st POut-pos!=!1!cEDefn1,!c,iparse,st;!3!cP0:1922:!4!cP2@1923@word:!4!cP1@1925@1:!4!cP2@1927@st POut!=!1!cEDefn1,!c,iparse,pos:form;!3!cP0:1898:!4!cP2@1899@concat:!4!cP2@1901@pos:!4!cP1@1903@!40:!4!cP2@1907@form find-word!=!1!cEDefn1,~find-word,iparse,str:pos:pat pdec!=!1!cEDefn1,~pdec,iparse,text penc!=!1!cEDefn1,~penc,iparse,text format-form!=!1!cEDefn1,~format-form,iparse,form form-set-indices!=!1!cEDefn1,~form-set-indices,iparse,pos:form form-typename!=!1!cEDefn1,~form-typename,iparse,form form-index!=!1!cEDefn1,~form-index,iparse,form PList-is-empty?!=!1!cEDefn1,~PList-is-empty?,iparse,form string-value!=!1!cEDefn1,~string-value,iparse,form;!3!cP0:318:!4!cP2@319@case:!4!cP2@321@form:!4!cP0@323@!5!cP0!40324!40!51!cP2!50325!50PString!40!51!cP2!50327!50n!40!51!cP2!50329!50value@!5!cP2!40332!40value:!4!cP0@335@!5!cP2!40336!40else@!5!cP0!40338!40!51!cP2!50339!50concat!40!51!cP1!50341!50ERROR!cstring-value(!40!51!cP2!50348!50form!40!51!cP1!50350!50) symbol-to-string!=!1!cEDefn1,~symbol-to-string,iparse,form symbol-name!=!1!cEDefn1,~symbol-name,iparse,form PList!=!1!cEDefn5,W;L,iparse,!2!cP0 PString!=!1!cEDefn5,W;S,iparse,!2!cP1 PSymbol!=!1!cEDefn5,W;S,iparse,!2!cP2 PQuote!=!1!cEDefn5,W;L,iparse,!2!cP3 PQQuote!=!1!cEDefn5,W;L,iparse,!2!cP4 PUnquote!=!1!cEDefn5,W;L,iparse,!2!cP5 PSplice!=!1!cEDefn5,W;L,iparse,!2!cP6 PError!=!1!cEDefn5,W;S,iparse,!2!cP7 protect-define!=!1!cEDefn1,~protect-define,iescape,str protect-rhs!=!1!cEDefn1,~protect-rhs,iescape,str protect-lhs!=!1!cEDefn1,~protect-lhs,iescape,str protect-expr!=!1!cEDefn1,~protect-expr,iescape,str protect-arg!=!1!cEDefn1,~protect-arg,iescape,str protect-trim!=!1!cEDefn1,~protect-trim,iescape,s protect-ltrim!=!1!cEDefn1,~protect-ltrim,iescape,str escape!=!1!cEDefn1,~escape,iescape,str;!3!cP0:241:!4!cP2@242@subst:!4!cP1@244@$:!4!cP1@248@$`:!4!cP2@253@str intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
$(call ^require,escape)
$(call ^require,parse)
$(call ^require,gen)
~c1-Lambda = $(subst $``.,$`.,$(subst $``-,$`,$(subst $`,$``,$1)))
define ~gen-embed
$`.{$(subst 
,~N,$(subst $`,~S,$(subst $],~R,$(subst $(if ,,,),~C,$(subst $[,~L,$(subst ~,~1,$1))))))$`.}
endef
define ~gen-extract
$(if $(findstring $`.{,$1),$(foreach e,$(wordlist 2,99999999,$(call ~split,$`.{,$1)),$(call ^d,$(subst ~1,~,$(subst ~L,$[,$(subst ~C,$(if ,,,),$(subst ~R,$],$(subst ~S,$`,$(subst ~N,
,$(call ^u,$(word 1,$(call ~split,$`.},$(call ^u,$e)))))))))))))
endef
~c1-arg = $(if $(if $(filter !:IL3,$(firstword $1)),1,$(if $(filter !:IL1,$(firstword $1)),1,$(if $(filter !:IL2,$(firstword $1)),1,$(if $(filter !:IL5,$(firstword $1)),1)))),$(call ~c1,$1),$(call ~protect-arg,$(call ~c1,$1)))
~c1-arg-trim = $(if $(if $(filter !:IL3,$(firstword $1)),1,$(if $(filter !:IL1,$(firstword $1)),1,$(if $(filter !:IL2,$(firstword $1)),1,$(if $(filter !:IL5,$(firstword $1)),1)))),$(call ~c1,$1),$(call ~protect-trim,$(call ~protect-arg,$(call ~c1,$1))))
~c1-vec = $(subst |1,|,$(subst |0, ,$(subst $  ,$(subst |,|1,$2),$(foreach a,$1,$(subst $  ,|0,$(subst |,|1,$(call $3,$(call ^u,$a))))))))
~c1-Error = $(call ~gen-embed,$(if $(filter !:P7,$(firstword $1)),$1,!:P7 0 $(call ^d,internal:bad IL: $1)))
~il-vector = $(call ~il-concat,$(subst $  , $(call ^d,!:IL0 !0) ,$(foreach n,$1,$(call ^d,$(call ~il-demote,$(call ^u,$n))))))
~c1-Builtin = $`($1 $(call ~protect-ltrim,$(call ~c1-vec,$2,$(if ,,,),$(if $(filter and or,$1),~c1-arg-trim,~c1-arg))))
~c1-args9 = $(if $(word 9,$1),$(if ,,$(call ~c1-vec,$(wordlist 1,8,$1),$(if ,,,),~c1-arg),$(call ~protect-arg,$(call ~c1,$(call ~il-vector,$(wordlist 9,99999999,$1))))),$(call ~c1-vec,$1,$(if ,,,),~c1-arg))
~c1-Call = $`(call $(call ~protect-ltrim,$(subst $`,$``,$1))$(if $2,$(if ,,,))$(call ~c1-args9,$2))
~make-list = $(if $(word $2,$3),$(subst $  ,,$(wordlist $1,$2,$3)),$(call ~make-list,$1,$2,$3 $3 $3))
~c1-Local = $(if $(filter-out 0,$2),$(subst $(if ,,,$]),$],$(subst -,$(call ~make-list,1,$2,-),$`-(call ^E,$`-$1,$(call ~make-list,2,$2,`)))),$`$1)
~c1-Funcall = $`(call ^Y,$(call ~c1-args9,$(wordlist 2,99999999,$1))$(subst $  ,,$(or $(wordlist $(words x$(wordlist 2,99999999,$1)),9,$(if ,,, , , , , , , , ,)),$(if ,,,)))$(call ~protect-arg,$(call ~c1,$(call ^u,$(word 1,$1)))))
~c1-Block = $(if $(word 2,$1),$`(and $(call ~c1-vec,$1,$(if ,,1,),~c1-arg)),$(if $1,$(call ~c1,$(call ^u,$(word 1,$1)))))
~c1-Var = $`$(or $(filter a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z _,$1),($(subst $`,$``,$1)))
~c1 = $(if $(filter !:IL0,$(firstword $1)),$(subst $`,$``,$(call ^n,2,$1)),$(if $(filter !:IL4,$(firstword $1)),$(call ~c1-Local,$(word 2,$1),$(word 3,$1)),$(if $(filter !:IL3,$(firstword $1)),$(call ~c1-Call,$(call ^n,2,$1),$(wordlist 3,99999999,$1)),$(if $(filter !:IL1,$(firstword $1)),$(call ~c1-Var,$(call ^n,2,$1)),$(if $(filter !:IL6,$(firstword $1)),$(call ~c1-vec,$(wordlist 2,99999999,$1),,~c1),$(if $(filter !:IL8,$(firstword $1)),$(call ~c1-Lambda,$(call ~c1,$(call ^n,2,$1))),$(if $(filter !:IL7,$(firstword $1)),$(call ~c1-Block,$(wordlist 2,99999999,$1)),$(if $(filter !:IL5,$(firstword $1)),$(call ~c1-Funcall,$(wordlist 2,99999999,$1)),$(if $(filter !:IL2,$(firstword $1)),$(call ~c1-Builtin,$(word 2,$1),$(wordlist 3,99999999,$1)),$(call ~c1-Error,$1))))))))))
define ~c1-file-set
$(call ~protect-lhs,$1) := $(call ~protect-rhs,$2)

endef
define ~c1-file-fset
$(if $(or $(findstring $`,$(subst $``,,$2)),$(findstring $``.,$2)),$`(call ^fset,$(call ~protect-arg,$1),$(call ~protect-arg,$2))
,$(if $(or $(findstring #,$2),$(findstring 
,$2),$(filter ~%,$(subst $  ,~,$(subst $ 	,~,$2)))),define $(call ~protect-lhs,$1)
$(call ~protect-define,$(subst $``,$`,$2))
$ endef
,$(call ~protect-lhs,$1) = $(subst $``,$`,$(call ~protect-rhs,$2))
))
endef
~c1-file* = $(subst |1,|,$(subst |0, ,$(subst $  ,,$(foreach node,$1,$(subst $  ,|0,$(subst |,|1,$(call ~c1-file,$(call ^u,$(node)))))))))
define ~c1-file
$(or $(if $(filter !:IL2,$(firstword $1)),$(if $(filter !:IL0,$(firstword $(call ^u,$(word 1,$(wordlist 3,99999999,$1))))),$(if $(filter eval,$(word 2,$1)),$(call ^n,2,$(call ^u,$(word 1,$(wordlist 3,99999999,$1))))
,$(if $(filter call,$(word 2,$1)),$(call ~c1-file,!:IL3 $(call ^d,$(call ^n,2,$(call ^u,$(word 1,$(wordlist 3,99999999,$1))))) $(wordlist 2,99999999,$(wordlist 3,99999999,$1)))))),$(if $(filter !:IL3,$(firstword $1)),$(if $(if $(filter-out $(call ^d,!:IL0 !.),$(word 3,$(wordlist 3,99999999,$1))),,1),$(if $(filter ^set,$(call ^n,2,$1)),$(call ~c1-file-set,$(call ~c1,$(call ~nth,1,$(wordlist 3,99999999,$1))),$(call ~c1,$(call ~nth,2,$(wordlist 3,99999999,$1)))),$(if $(filter ^fset,$(call ^n,2,$1)),$(call ~c1-file-fset,$(call ~c1,$(call ~nth,1,$(wordlist 3,99999999,$1))),$(call ~c1,$(call ~nth,2,$(wordlist 3,99999999,$1))))))),$(if $(filter !:IL7,$(firstword $1)),$(call ~c1-file*,$(wordlist 2,99999999,$1))))),$(if ,,$(call ~protect-expr,$(call ~c1,$(if $(if $(filter !:IL2,$(firstword $1)),$(filter error eval info,$(word 2,$1)),$(if $(filter !:IL3,$(firstword $1)),$(filter ^require,$(call ^n,2,$1)))),$1,!:IL2 if $(call ^d,$1) $(call ^d,!:IL0 !.))))
))
endef
~gen1 = $(call ^Y,$(if $2,$(call ~c1-file*,$1),$(call ~c1,!:IL7 $1)),,,,,,,,,$`(call ^d,$`(call ~gen-extract,$`1)) $`(call ^d,$`1))

endef
 
define ///getopts.min
# compiled from getopts.scm
# Requires: core runtime
# Requires: scam-ct
# Exports: getopts!=!1!cEDefn1,~getopts,.,args:opts:err getopts-loop!=!1!cEDefn1,~getopts-loop,.,opts0:opts1:optsN:err:args:files:ovalues intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
~getopts-loop = $(and $(call ^set,~opt,$(word 1,$5))1,$(call ^set,~file,$(call ~nth,1,$5))1,$(if $(if $5,,1),$(call ^d,$6) $(call ^d,$7),$(if $(if $(filter -%,$(~opt)),,1),$(call ~getopts-loop,$1,$2,$3,$4,$(wordlist 2,99999999,$5),$(call ~conj,$6,$(~file)),$7),$(if $(filter $1,$(~opt)),$(call ~getopts-loop,$1,$2,$3,$4,$(wordlist 2,99999999,$5),$6,$(call ~hash-bind,$(patsubst -%,%,$(patsubst -%,%,$(~opt))),1,$7)),$(if $(filter $2,$(~opt)),$(call ~getopts-loop,$1,$2,$3,$4,$(wordlist 3,99999999,$5),$6,$(call ~hash-bind,$(patsubst -%,%,$(patsubst -%,%,$(~opt))),$(call ~nth,2,$5),$7)),$(if $(filter $3,$(~opt)),$(call ~getopts-loop,$1,$2,$3,$4,,$6,$(call ~hash-bind,$(patsubst -%,%,$(patsubst -%,%,$(~opt))),$(wordlist 2,99999999,$5),$7)),$(call ^Y,$(~opt),$(wordlist 2,99999999,$5),,,,,,,,$4)))))))
~getopts = $(call ~getopts-loop,$(filter-out %= %=...,$2),$(patsubst %=,%,$(filter %=,$2)),$(patsubst %=...,%,$(filter %=...,$2)),$3,$1,,)

endef
 
define ///io.min
# compiled from io.scm
# Requires: core runtime
# Requires: scam-ct
# Exports: file-exists?!=!1!cEDefn1,~file-exists?,.,fname read-lines!=!1!cEDefn1,~read-lines,.,fname:?start:?end read-file!=!1!cEDefn1,~read-file,.,fname write-file!=!1!cEDefn1,~write-file,.,filename:data getline!=!1!cEDefn1,~getline,.,prompt shell!1!=!1!cEDefn1,~shell!2,.,cmd printn!=!1!cEDefn1,~printn,.,...strings echo-command!=!1!cEDefn1,~echo-command,.,str quote-sh-arg!=!1!cEDefn1,~quote-sh-arg,.,arg shellc!=!1!cEDefn1,~shellc,.,...all logshell!=!1!cEDefn1,!c,.,cmd;!3!cP0:36:!4!cP2@37@if:!4!cP0@39@!5!cP2!4040!40filter@!5!cP1!4042!40S@!5!cP2!4046!40SCAM_DEBUG:!4!cP0@49@!5!cP2!4050!40print@!5!cP1!4052!40shell!c!50@!5!cP2!4058!40cmd;!3!cP0:62:!4!cP2@63@shell:!4!cP2@65@cmd SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG,. intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
~shellc = $(and $(if $(filter S,$(SCAM_DEBUG)),$(info shell: $(call ~concat-vec,$(foreach N,1,$(^v)))))1,$(shell $(call ~concat-vec,$(foreach N,1,$(^v)))))
~quote-sh-arg = '$(subst ','\'',$1)'
define ~echo-command
printf '%b' $(call ~quote-sh-arg,$(subst 
,\n,$(subst \,\\,$1)))
endef
~printn = $(call ~shellc,$(call ~echo-command,$(call ~concat-vec,$(foreach N,1,$(^v)))), >&2)
define ~shell!
$(subst !1,!,$(subst !0, ,$(subst !n,
,$(subst $  ,,$(and $(if $(filter S,$(SCAM_DEBUG)),$(info shell: $1 | sed -e 's/!/!1/g;s/ /!0/g;s/$`/!n/g'))1,$(shell $1 | sed -e 's/!/!1/g;s/ /!0/g;s/$`/!n/g'))))))
endef
~getline = $(and $(if $1,$(call ~printn,$1))1,$(call ~shell!,head -1))
define ~write-file
$(if $1,$(if $(if $(call ~shellc,$(call ~echo-command,), > ,$1.pre, || echo ERROR),,1),$(and $(foreach line,$(subst $  ,
 ,$(call ~split,
,$2)),$(call ^d,$(if $(call ^u,$(line)),$(call ~shellc,$(call ~echo-command,$(call ^u,$(line))), >> ,$1.pre))))1,$(call ~shellc,mv ,$1.pre, ,$1))),$(info error: write-file: nil filename))
endef
~read-file = $(if $1,$(call ~shell!,cat < $(call ~quote-sh-arg,$1)),$(info error: read-file: nil filename))
~read-lines = $(if $1,$(subst !n,,$(subst $  !n, !.,$(and $(if $(filter S,$(SCAM_DEBUG)),$(info shell: sed -E '$(if $2,$(if ,,$2,$3!d;))s/!/!1/g;s/	/!+/g;s/ /!0/g;s/$`/!n/g' $1))1,$(shell sed -E '$(if $2,$(if ,,$2,$3!d;))s/!/!1/g;s/	/!+/g;s/ /!0/g;s/$`/!n/g' $1)))),$(info error: read-lines: nil filename))
~file-exists? = $(if $(call ~shellc,ls ,$(call ~quote-sh-arg,$1), 2> /dev/null),1)

endef
 
define ///macros.min
# compiled from macros.scm
# Requires: core parse gen gen0 runtime
# Requires: scam-ct
# Exports: ml.special-case!=!1!cEDefn1,~ml.special-case,.,env:sym:args case-fold!=!1!cEDefn1,~case-fold,.,args case-append-arg!=!1!cEDefn1,~case-append-arg,.,node:value c0-matches!=!1!cEDefn1,~c0-matches,.,cases:value-node:env arg-bindings!=!1!cEDefn1,~arg-bindings,.,args:encs:value-node case-where!=!1!cEDefn2,~case-where,. ml.special-data!=!1!cEDefn1,~ml.special-data,.,env:sym:args:inblock read-types!=!1!cEDefn1,~read-types,p,parent:tag-base:ctor-forms:?counter:?prev-ctor:?others read-type!=!1!cEDefn1,~read-type,.,form:tag:parent read-type-r!=!1!cEDefn1,~read-type-r,p,args:form:tag:pattern:names:flag data-where!=!1!cEDefn2,~data-where,. DataType!=!1!cEDefn5,W;W;S;L,.,!2!cData0 ml.special-use!=!1!cEDefn1,~ml.special-use,.,env:sym:args:inblock ml.special-defmacro!=!1!cEDefn1,~ml.special-defmacro,.,env:sym:args:inblock defmacro-where!=!1!cEDefn2,~defmacro-where,. ml.special-global-name!=!1!cEDefn1,~ml.special-global-name,.,env:sym:args defn-global-name!=!1!cEDefn1,~defn-global-name,.,defn ml.special-cond!=!1!cEDefn1,~ml.special-cond,.,env:sym:args cond-wrap!=!1!cEDefn1,~cond-wrap,.,clause:else-form cond-where!=!1!cEDefn2,~cond-where,. ml.special-concat-for!=!1!cEDefn1,~ml.special-concat-for,.,env:sym:args il-spc-decode!=!1!cEDefn1,~il-spc-decode,.,node il-spc-encode!=!1!cEDefn1,~il-spc-encode,.,node il-subst!=!1!cEDefn1,~il-subst,.,a:b:node concat-for-where!=!1!cEDefn2,~concat-for-where,. ml.special-append-for!=!1!cEDefn1,~ml.special-append-for,.,env:sym:args ml.special-for!=!1!cEDefn1,~ml.special-for,.,env:sym:args ml.special-foreach!=!1!cEDefn1,~ml.special-foreach,.,env:sym:args c0-for!=!1!cEDefn1,~c0-for,.,env:sym:args:where:var-xform:body-xform ml.special-let&!=!1!cEDefn1,~ml.special-let&,.,env:sym:args let&-env!=!1!cEDefn1,~let&-env,.,pairs let&-where!=!1!cEDefn2,~let&-where,. ml.special-let-global!=!1!cEDefn1,~ml.special-let-global,.,env:sym:args letg-expand!=!1!cEDefn1,~letg-expand,.,env:sym:body:pairs letg-where!=!1!cEDefn2,~letg-where,. ml.special-let!=!1!cEDefn1,~ml.special-let,.,env:sym:args let-where!=!1!cEDefn2,~let-where,. read-pairs!=!1!cEDefn1,~read-pairs,.,list:sym:where read-pairs-r!=!1!cEDefn1,~read-pairs-r,.,forms:where:out ml.special-?!=!1!cEDefn1,~ml.special-?,.,env:sym:args ml.special-set!=!1!cEDefn1,~ml.special-set,.,env:sym:args c0-set!=!1!cEDefn1,~c0-set,.,env:sym:value-node:retval-node:what:where ml.special-subst!=!1!cEDefn1,~ml.special-subst,.,env:sym:args subst-x!=!1!cEDefn1,~subst-x,.,strs:value ml.special-vector!=!1!cEDefn1,~ml.special-vector,.,env:sym:args ml.special-concat!=!1!cEDefn1,~ml.special-concat,.,env:sym:args ml.special-current-file-line!=!1!cEDefn1,~ml.special-current-file-line,.,env:sym:args ml.special-current-env!=!1!cEDefn1,~ml.special-current-env,.,env:sym:args ml.special-print!=!1!cEDefn1,~ml.special-print,.,env:sym:args c0!=!1!cEDefn1,~c0,igen0,form:env:?inblock c0-error!=!1!cEDefn1,~c0-error,igen0,form c0-qq!=!1!cEDefn1,~c0-qq,igen0,env:form:?nest c0-qq-form!=!1!cEDefn1,~c0-qq-form,igen0,template:sub c0-qq!=!1!cEDefn1,~c0-qq,igen0,!2. ml.special-begin!=!1!cEDefn1,~ml.special-begin,igen0,env:sym:args:inblock c0-block!=!1!cEDefn1,~c0-block,igen0,forms:env c0-block-cc!=!1!cEDefn1,~c0-block-cc,igen0,env:forms:k:?results:?o ml.special-require!=!1!cEDefn1,~ml.special-require,igen0,env:sym:args:inblock ml.special-declare!=!1!cEDefn1,~ml.special-declare,igen0,env:sym:args:inblock ml.special-define!=!1!cEDefn1,~ml.special-define,igen0,env:sym:args:inblock c0-def!=!1!cEDefn1,!c,igen0,env:sym:args:inblock:is-define;!3!cP0:4235:!4!cP2@4236@env-strip:!4!cP2@4238@inblock:!4!cP0@4240@!5!cP2!404241!40c0-def2@!5!cP2!404243!40env@!5!cP0!404245!40!51!cP2!504246!50form-index!40!51!cP2!504248!50sym@!5!cP0!404251!40!51!cP2!504252!50first!40!51!cP2!504254!50args@!5!cP0!404257!40!51!cP2!504258!50get-flags!40!51!cP2!504260!50args!40!51!cP1!504262!501@!5!cP0!404265!40!51!cP2!504266!50skip-flags!40!51!cP2!504268!50args!40!51!cP1!504270!501@!5!cP2!404273!40is-define@!5!cP2!404275!40nil c0-def2!=!1!cEDefn1,~c0-def2,igen0,env:pos:what:flags:body:is-define:is-macro c0-def-compound!=!1!cEDefn1,~c0-def-compound,igen0,env:n:name:args:flags:body:is-define:is-macro check-optional-args!=!1!cEDefn1,~check-optional-args,igen0,args:?seen-optional c0-def-symbol!=!1!cEDefn1,~c0-def-symbol,igen0,env:n:name:flags:body:is-define:is-macro c0-check-body!=!1!cEDefn1,~c0-check-body,igen0,where:first-form:is-define c0-lambda!=!1!cEDefn1,~c0-lambda,igen0,env:args:body lambda-env!=!1!cEDefn1,!c,igen0,args:env;!3!cP0:2743:!4!cP2@2744@append:!4!cP0@2746@!5!cP2!402747!40lambda-env-args@!5!cP2!402749!40args@!5!cP0!402751!40!51!cP2!502752!50concat!40!51!cP1!502754!50.!40!51!cP0!502758!50!511!cP2!5102759!510emarker-level!50!511!cP0!5102761!510!5111!cP2!51102762!5110hash-get!510!5111!cP2!51102764!5110LambdaMarkerKey!510!5111!cP2!51102766!5110env:!4!cP2@2772@env emarker-level!=!1!cEDefn1,~emarker-level,igen0,marker lambda-arg!=!1!cEDefn1,!c,igen0,sym:single-value:rest-value;!3!cP0:2221:!4!cP2@2222@foreach:!4!cP2@2224@name:!4!cP0@2226@!5!cP2!402227!40symbol-name@!5!cP2!402229!40sym:!4!cP0@2232@!5!cP2!402233!40if@!5!cP0!402235!40!51!cP2!502236!50filter!40!51!cP1!502238!50...%!40!51!cP2!502243!50name@!5!cP0!402271!40!51!cP2!502272!50hash-bind!40!51!cP0!502274!50!511!cP2!5102275!510or!50!511!cP0!5102277!510!5111!cP2!51102278!5110patsubst!510!5111!cP1!51102280!5110...%!510!5111!cP1!51102285!5110%!510!5111!cP2!51102289!5110name!50!511!cP2!5102292!510name!40!51!cP2!502295!50rest-value@!5!cP0!402298!40!51!cP2!502299!50hash-bind!40!51!cP0!502301!50!511!cP2!5102302!510patsubst!50!511!cP1!5102304!510?%!50!511!cP1!5102309!510%!50!511!cP2!5102313!510name!40!51!cP2!502316!50single-value c0-record!=!1!cEDefn1,~c0-record,igen0,env:sym:args:encodings:tag special-form-func!=!1!cEDefn1,!c,igen0,name;!3!cP0:1658:!4!cP2@1659@declare:!4!cP0@1661@!5!cP2!401662!40ml.special-;!3!cP0:1666:!4!cP2@1667@concat:!4!cP0@1669@!5!cP2!401670!40global-name@!5!cP2!401672!40ml.special-:!4!cP2@1675@name c0-call!=!1!cEDefn1,~c0-call,igen0,env:sym:args:realname:formal-args:body get-argc!=!1!cEDefn1,~get-argc,igen0,args c0-vec!=!1!cEDefn1,~c0-vec,igen0,forms:env c0-S-error!=!1!cEDefn1,~c0-S-error,igen0,sym:defn c0-builtin!=!1!cEDefn1,~c0-builtin,igen0,env:name:argc c0-macro!=!1!cEDefn1,~c0-macro,igen0,env:sym:inln c0-local!=!1!cEDefn1,~c0-local,igen0,arg:marker:sym c0-lambda!=!1!cEDefn1,~c0-lambda,igen0,env:args:body c0-block!=!1!cEDefn1,~c0-block,igen0,forms:env c0!=!1!cEDefn1,~c0,igen0,form:env:?inblock skip-flags!=!1!cEDefn1,~skip-flags,igen0,args:skip get-flags!=!1!cEDefn1,~get-flags,igen0,args:skip scan-flags-x!=!1!cEDefn1,~scan-flags-x,igen0,args:n:prev-n scan-flags!=!1!cEDefn1,!c,igen0,args:skip;!3!cP0:168:!4!cP2@169@scan-flags-x:!4!cP2@171@args:!4!cP0@173@!5!cP2!40174!401+@!5!cP2!40176!40skip:!4!cP2@179@skip scan-flags-x!=!1!cEDefn1,~scan-flags-x,igen0,args:n:prev-n env-strip!=!1!cEDefn1,~env-strip,igen0,inblock:node block-result!=!1!cEDefn1,~block-result,igen0,inblock:env:node begin-block!=!1!cEDefn1,~begin-block,igen,forms resolve!=!1!cEDefn1,~resolve,igen,form:env base-env!=!1!cEDefn2,~base-env! builtin-names!=!1!cEDefn2,~builtin-names! builtins-3!=!1!cEDefn3,!2!cP1;3843;.foreach:patsubst:.subst:wordlist,igen builtins-2!=!1!cEDefn3,!2!cP1;3819;addprefix:addsuffix:filter:filter-out:findstring:join:word,igen builtins-1!=!1!cEDefn3,!2!cP0;3759;!3!cP2:3760:concat;!3!cP1:3762:abspath@basename@dir@error@eval@firstword@flavor;!3!cP1:3778:@info@lastword@notdir@origin@realpath@shell@sort;!3!cP1:3795:@strip@suffix@value@warning@wildcard@words,igen env-rewind!=!1!cEDefn1,~env-rewind,igen,env:name env-rewind-x!=!1!cEDefn1,~env-rewind-x,igen,env:name use-module!=!1!cEDefn1,~use-module,igen,mod require-module!=!1!cEDefn1,~require-module,igen,mod:read-priv env-export!=!1!cEDefn1,~env-export,igen,env import-binding!=!1!cEDefn1,~import-binding,igen,key:defn:d-name is-private?!=!1!cEDefn1,!c,igen,defn;!3!cP0:2714:!4!cP2@2715@filter:!4!cP1@2717@b!40p!40i%:!4!cP0@2726@!5!cP2!402727!40EDefn.priv@!5!cP2!402729!40defn check-argc!=!1!cEDefn1,~check-argc,igen,expected:args:sym err-expected!=!1!cEDefn1,~err-expected,igen,types:form:parent:what:where:?arg1:?arg2 form-description!=!1!cEDefn1,~form-description,igen,code compile-warn!=!1!cEDefn1,~compile-warn,igen,form:fmt:?a:?b:?c gen-error!=!1!cEDefn1,~gen-error,igen,form:fmt:...values env-rewind-M!=!1!cEDefn1,~env-rewind-M,igen,env:name after!=!1!cEDefn1,~after,igen,item:vec gensym!=!1!cEDefn1,~gensym,igen,base:env gensym-name!=!1!cEDefn1,~gensym-name,igen,base:env:suff gen-global-name!=!1!cEDefn1,~gen-global-name,igen,local:flags il-promote!=!1!cEDefn1,~il-promote,igen,node il-demote!=!1!cEDefn1,~il-demote,igen,node il-concat!=!1!cEDefn1,~il-concat,igen,nodes il-flatten!=!1!cEDefn1,~il-flatten,igen,nodes il-merge-strings!=!1!cEDefn1,~il-merge-strings,igen,nodes:accum NoOp!=!1!cEDefn3,!2!cP0;978;!3!cP2:979:IString;!3!cP1:981:!3.,igen *compile-mods*!=!1!cEDefn2,~*compile-mods*! *compile-outfile*!=!1!cEDefn2,~*compile-outfile*! *compile-file*!=!1!cEDefn2,~*compile-file*! *compile-subject*!=!1!cEDefn2,~*compile-subject*! MacroMarkerKey!=!1!cEDefn3,!2!cP1;658;!cm,igen LambdaMarkerKey!=!1!cEDefn3,!2!cP1;644;!c,igen NoGlobalName!=!1!cEDefn3,!2!cP1;473;!c,igen EDefn.priv!=!1!cEDefn1,!c,igen,defn;!3!cP0:457:!4!cP2@458@word:!4!cP1@460@3:!4!cP2@462@defn EBuiltin!=!1!cEDefn5,S;W;S,igen,!2!cEDefn0 EFunc!=!1!cEDefn5,S;W;S,igen,!2!cEDefn1 EVar!=!1!cEDefn5,S;W,igen,!2!cEDefn2 ESMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn3 EXMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn4 ERecord!=!1!cEDefn5,S;W;S,igen,!2!cEDefn5 EIL!=!1!cEDefn5,S;W,igen,!2!cEDefn6 EArg!=!1!cEDefn5,W,igen,!2!cEDefn7 EMarker!=!1!cEDefn5,W,igen,!2!cEDefn8 IString!=!1!cEDefn5,S,igen,!2!cIL0 IVar!=!1!cEDefn5,S,igen,!2!cIL1 IBuiltin!=!1!cEDefn5,W;L,igen,!2!cIL2 ICall!=!1!cEDefn5,S;L,igen,!2!cIL3 ILocal!=!1!cEDefn5,W;W,igen,!2!cIL4 IFuncall!=!1!cEDefn5,L,igen,!2!cIL5 IConcat!=!1!cEDefn5,L,igen,!2!cIL6 IBlock!=!1!cEDefn5,L,igen,!2!cIL7 ILambda!=!1!cEDefn5,S,igen,!2!cIL8 IEnv!=!1!cEDefn5,S;L,igen,!2!cIL9 parse-text!=!1!cEDefn1,~parse-text,iparse,text parse-subject!=!1!cEDefn1,~parse-subject,iparse,subj describe-error!=!1!cEDefn1,~describe-error,iparse,form:text:filename describe-lnum!=!1!cEDefn1,~describe-lnum,iparse,pos:subj parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos parse-list!=!1!cEDefn1,!c,iparse,subj:pos;!3!cP0:2512:!4!cP2@2513@parse-seq:!4!cP2@2515@subj:!4!cP1@2517@):!4!cP2@2521@pos:!4!cP0@2523@!5!cP2!402524!40parse-exp@!5!cP2!402526!40subj@!5!cP0!402528!40!51!cP2!502529!501+!40!51!cP2!502531!50pos:!4!cP2@2535@nil parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos POut-format!=!1!cEDefn1,~POut-format,iparse,value POut-form!=!1!cEDefn1,!c,iparse,st;!3!cP0:1942:!4!cP2@1943@rest:!4!cP2@1945@st POut-pos!=!1!cEDefn1,!c,iparse,st;!3!cP0:1922:!4!cP2@1923@word:!4!cP1@1925@1:!4!cP2@1927@st POut!=!1!cEDefn1,!c,iparse,pos:form;!3!cP0:1898:!4!cP2@1899@concat:!4!cP2@1901@pos:!4!cP1@1903@!40:!4!cP2@1907@form find-word!=!1!cEDefn1,~find-word,iparse,str:pos:pat pdec!=!1!cEDefn1,~pdec,iparse,text penc!=!1!cEDefn1,~penc,iparse,text format-form!=!1!cEDefn1,~format-form,iparse,form form-set-indices!=!1!cEDefn1,~form-set-indices,iparse,pos:form form-typename!=!1!cEDefn1,~form-typename,iparse,form form-index!=!1!cEDefn1,~form-index,iparse,form PList-is-empty?!=!1!cEDefn1,~PList-is-empty?,iparse,form string-value!=!1!cEDefn1,~string-value,iparse,form;!3!cP0:318:!4!cP2@319@case:!4!cP2@321@form:!4!cP0@323@!5!cP0!40324!40!51!cP2!50325!50PString!40!51!cP2!50327!50n!40!51!cP2!50329!50value@!5!cP2!40332!40value:!4!cP0@335@!5!cP2!40336!40else@!5!cP0!40338!40!51!cP2!50339!50concat!40!51!cP1!50341!50ERROR!cstring-value(!40!51!cP2!50348!50form!40!51!cP1!50350!50) symbol-to-string!=!1!cEDefn1,~symbol-to-string,iparse,form symbol-name!=!1!cEDefn1,~symbol-name,iparse,form PList!=!1!cEDefn5,W;L,iparse,!2!cP0 PString!=!1!cEDefn5,W;S,iparse,!2!cP1 PSymbol!=!1!cEDefn5,W;S,iparse,!2!cP2 PQuote!=!1!cEDefn5,W;L,iparse,!2!cP3 PQQuote!=!1!cEDefn5,W;L,iparse,!2!cP4 PUnquote!=!1!cEDefn5,W;L,iparse,!2!cP5 PSplice!=!1!cEDefn5,W;L,iparse,!2!cP6 PError!=!1!cEDefn5,W;S,iparse,!2!cP7 intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
$(call ^require,parse)
$(call ^require,gen)
$(call ^require,gen0)
~ml.special-print = !:IL2 info $(call ^d,!:IL6 $(call ~c0-vec,$3,$1))
~ml.special-current-env = !:IL0 $(call ^d,$1)
~ml.special-current-file-line = !:IL0 $(call ^d,$(~*compile-file*):$(call ~describe-lnum,$(call ^Y,$(call ~hash-get,:m,$1),,,,,,,,,$`(if $`(filter !:EDefn8,$`(firstword $`1)),$`(word 2,$`1),$`(call ~form-index,$(call ^E,$2)))),$(~*compile-subject*)))
~ml.special-concat = $(call ~il-concat,$(call ~c0-vec,$3,$1))
~ml.special-vector = $(call ~il-concat,$(call ~intersperse,!:IL0 !0,$(foreach f,$3,$(call ^d,$(call ~il-demote,$(call ~c0,$(call ^u,$f),$1))))))
~subst-x = $(if $1,$(call ~subst-x,$(wordlist 3,99999999,$1),!:IL2 subst $(call ~conj,$(wordlist 1,2,$1),$2)),$2)
~ml.special-subst = $(if $(filter %2 %4 %6 %8 %0 1,$(words $3)),$(call ~gen-error,$2,$(if ,,(subst {FROM TO}+ STR) accepts 2n+1 arguments, not %s),$(words $3)),$(call ~subst-x,$(call ~c0-vec,$(call ~butlast,$3),$1),$(call ~c0,$(call ~promote,$(lastword $3)),$1)))
~c0-set = $(call ^Y,$(call ~resolve,$2,$1),$2,$3,$4,$1,,,,,$`(if $`(filter !:P2,$`(firstword $`2)),$`(if $`(filter !:EDefn2,$`(firstword $`1)),!:IL3 ^set $`(call ~append,$`(call ^d,!:IL0 $`(call ^d,$`(call ^n,2,$`1))) $`(call ^d,$`3),$`(if $`4,$`(call ^d,$`4))),$`(if $`(filter !:EDefn1,$`(firstword $`1)),!:IL3 ^fset $`(call ~append,$`(call ^d,!:IL0 $`(call ^d,$`(call ^n,2,$`1))) $`(call ^d,$`3),$`(if $`4,$`(call ^d,$`4))),$`(call ~gen-error,$`2,%q is not a global variable,$`(call ~symbol-name,$`2)))),$`(call ~err-expected,S,$`2,,$(call ^E,$5),$(call ^E,$6))))
~ml.special-set = $(or $(call ~check-argc,2 or 3,$3,$2),$(call ~c0-set,$1,$(call ^u,$(word 1,$3)),$(call ~c0,$(call ~nth,2,$3),$1),$(if $(call ~nth,3,$3),$(call ~c0,$(call ~nth,3,$3),$1)),NAME,(set NAME VALUE [RETVAL])))
~ml.special-? = $(call ^Y,$(call ~resolve,$(call ^u,$(word 1,$3)),$1),$1,$2,$3,,,,,,$`(or $`(if $`(call ~eq?,-,$`1),$`(call ~err-expected,S,$`(call ^u,$`(word 1,$(call ^E,$3))),$`3,FUNC,(? FUNC ARGS...)),$`(if $`(filter !:EDefn1,$`(firstword $`1)),$`(if $`(if $`(call ~eq?,$`(call ^n,2,$`1),:),,1),$`(call ^Y,^t,$`(call ~cons,!:IL0 $`(call ^d,$`(call ^n,2,$`1)),$`(call ~c0-vec,$`(wordlist 2,99999999,$(call ^E,$3)),$`2)),,,,,,,,!:IL3 $``(call ^d,$``1) $``2)),$`(if $`(filter !:EDefn0,$`(firstword $`1)),$`(call ^Y,^t,$`(call ~cons,!:IL0 $`(call ^d,$`(call ^n,2,$`1)),$`(call ~c0-vec,$`(wordlist 2,99999999,$(call ^E,$3)),$`2)),,,,,,,,!:IL2 $``1 $``2)))),$`(if $`1,$`(call ~gen-error,$`(call ^u,$`(word 1,$(call ^E,$3))),FUNC in (? FUNC ...) is not traceable),$`(call ~gen-error,$`(call ^u,$`(word 1,$(call ^E,$3))),undefined variable: %q,$`(call ~symbol-name,$`3)))))
~read-pairs-r = $(if $(if $1,,1),$3,$(if $(filter !:P0,$(firstword $(call ^u,$(word 1,$1)))),$(if $(filter !:P2,$(firstword $(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$(word 1,$1))))))),$(if $(call ~nth,2,$(wordlist 3,99999999,$(call ^u,$(word 1,$1)))),$(if $(if $(call ~nth,3,$(wordlist 3,99999999,$(call ^u,$(word 1,$1)))),,1),$(call ~read-pairs-r,$(wordlist 2,99999999,$1),$2,$(call ~conj,$3,$(wordlist 3,99999999,$(call ^u,$(word 1,$1))))),$(call ~gen-error,$(call ~nth,3,$(wordlist 3,99999999,$(call ^u,$(word 1,$1)))),extra form after value in %q,$2)),$(call ~err-expected,,$(call ~nth,2,$(wordlist 3,99999999,$(call ^u,$(word 1,$1)))),$(call ^u,$(word 1,$1)),VALUE,$2)),$(call ~err-expected,S,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$(word 1,$1))))),$(call ^u,$(word 1,$1)),VAR,$2)),$(call ~err-expected,L,$(call ^u,$(word 1,$1)),,(VAR VALUE),$2)))
~read-pairs = $(if $(filter !:P0,$(firstword $1)),$(call ~read-pairs-r,$(wordlist 3,99999999,$1),$3,),$(call ~err-expected,L,$1,$2,((VAR VALUE)...),$3))
~let-where := (let ((VAR VALUE)...) BODY)
~ml.special-let = $(call ~c0,$(call ^Y,$(wordlist 2,99999999,$3),$(call ~read-pairs,$(call ^u,$(word 1,$3)),$2,$(~let-where)),,,,,,,,$`(or $`(if $`(filter !:P7,$`(firstword $`2)),$`2),!:P0 0 $`(call ~cons,!:P0 0 $`(call ~append,$`(call ^d,!:P2 0 lambda),$`(call ^d,!:P0 0 $`(foreach p,$`2,$`(call ^d,$`(call ~nth,1,$`(call ^u,$`p))))),$`1),$`(foreach p,$`2,$`(call ^d,$`(call ~nth,2,$`(call ^u,$`p))))))),$1)
~letg-where := (let-global ((VAR VALUE)...) BODY)
~letg-expand = $(or $(if $(filter !:P7,$(firstword $4)),$4),$(if $(if $4,,1),$(call ~c0-block,$3,$1)),$(call ~c0-set,$1,$(call ^u,$(word 1,$(call ^u,$(word 1,$4)))),$(call ~c0-set,$1,$(call ^u,$(word 1,$(call ^u,$(word 1,$4)))),$(call ~c0,$(call ~nth,2,$(call ^u,$(word 1,$4))),$1),$(call ~c0,$(call ^u,$(word 1,$(call ^u,$(word 1,$4)))),$1),,),$(call ~letg-expand,$1,$(call ^u,$(word 1,$(call ^u,$(word 1,$4)))),$3,$(wordlist 2,99999999,$4)),,))
~ml.special-let-global = $(call ~letg-expand,$1,$2,$(wordlist 2,99999999,$3),$(call ~read-pairs,$(call ^u,$(word 1,$3)),$2,$(~letg-where)))
~let&-where := (let& ((VAR VALUE)...) BODY)
~let&-env = $(call ~reverse,$(filter %,$(foreach p,$1,$(if $(filter !:P2,$(firstword $(call ^u,$(word 1,$(call ^u,$p))))),$(call ~hash-bind,$(call ^n,3,$(call ^u,$(word 1,$(call ^u,$p)))),!:EDefn3 $(call ^d,$(call ~nth,2,$(call ^u,$p))) )))))
~ml.special-let& = $(call ^Y,$(wordlist 2,99999999,$3),$(call ~read-pairs,$(call ^u,$(word 1,$3)),$2,$(~let&-where)),$1,,,,,,,$`(if $`(filter !:P7,$`(firstword $`2)),$`2,$`(call ~c0-block,$`1,$`(call ~append,$`(call ~let&-env,$`2),$`3))))
~c0-for = $(if $(filter !:P2,$(firstword $(call ^u,$(word 1,$3)))),$(if $(wordlist $(words $(wordlist 2,99999999,$4)),99999999,$3),!:IL2 foreach $(call ^d,!:IL0 $(call ^d,$(call ^n,3,$(call ^u,$(word 1,$3))))) $(call ^d,$(call ~c0,$(call ~nth,2,$3),$1)) $(call ^d,$(call ^Y,$(call ~c0-block,$(wordlist $(words $(wordlist 2,99999999,$4)),99999999,$3),$(call ~hash-bind,$(call ^n,3,$(call ^u,$(word 1,$3))),!:EDefn6 $(call ^d,$(call ^Y,!:IL1 $(call ^d,$(call ^n,3,$(call ^u,$(word 1,$3)))),,,,,,,,,$5)) ,$1)),,,,,,,,,$6)),$(call ~err-expected,,,$2,$(word $(words . . $3),$(subst $],,$4)),$4)),$(call ~err-expected,S,$(call ^u,$(word 1,$3)),$2,VAR,$4))
~ml.special-foreach = $(call ~c0-for,$1,$2,$3,(foreach VAR LIST BODY),$(value ~identity),$(value ~identity))
~ml.special-for = $(call ~c0-for,$1,$2,$3,(for VAR VEC BODY),$(value ~il-promote),$(value ~il-demote))
~ml.special-append-for = !:IL2 filter $(call ^d,!:IL0 %) $(call ^d,$(call ~c0-for,$1,$2,$3,(append-for VAR VEC BODY),$(value ~il-promote),$(value ~identity)))
~concat-for-where := (concat-for VAR VEC DELIM BODY)
~il-subst = $(if $(filter !:IL0,$(firstword $3)),!:IL0 $(call ^d,$(subst $1,$2,$(call ^n,2,$3))),!:IL2 subst $(call ^d,!:IL0 $(call ^d,$1)) $(call ^d,!:IL0 $(call ^d,$2)) $(call ^d,$3))
~il-spc-encode = $(call ~il-subst, ,|0,$(call ~il-subst,|,|1,$1))
~il-spc-decode = $(call ~il-subst,|1,|,$(call ~il-subst,|0, ,$1))
~ml.special-concat-for = $(or $(if $(filter !:P1,$(firstword $(call ~nth,3,$3))),$(if $(call ~eq?,$(call ^n,3,$(call ~nth,3,$3)), ),$(call ~c0-for,$1,$2,$3,$(~concat-for-where),$(value ~il-promote),$(value ~identity)))),$(call ~il-spc-decode,!:IL2 subst $(call ^d,!:IL0 !0) $(call ^d,$(call ~il-subst,|,|1,$(call ~c0,$(call ~nth,3,$3),$1))) $(call ^d,$(call ~c0-for,$1,$2,$3,$(~concat-for-where),$(value ~il-promote),$(value ~il-spc-encode)))))
~cond-where := (cond (TEST BODY)...)
~cond-wrap = $(if $(filter !:P0,$(firstword $1)),$(if $(wordlist 2,99999999,$(wordlist 3,99999999,$1)),$(if $(if $(filter !:P2,$(firstword $(call ^u,$(word 1,$(wordlist 3,99999999,$1))))),$(call ~eq?,$(call ^n,3,$(call ^u,$(word 1,$(wordlist 3,99999999,$1)))),else)),$(if $(if $2,,1),$(call ~begin-block,$(wordlist 2,99999999,$(wordlist 3,99999999,$1))),$(call ~gen-error,$(call ^u,$(word 1,$(wordlist 3,99999999,$1))),(else ...) is followed by additional clauses)),!:P0 0 $(call ~append,$(call ^d,!:P2 0 if) $(word 1,$(wordlist 3,99999999,$1)) $(call ^d,$(call ~begin-block,$(wordlist 2,99999999,$(wordlist 3,99999999,$1)))),$(if $2,$(call ^d,$2)))),$(if $(call ^u,$(word 1,$(wordlist 3,99999999,$1))),$(call ~err-expected,,$(wordlist 2,99999999,$(wordlist 3,99999999,$1)),$(wordlist 3,99999999,$1),BODY,$(~cond-where)),$(call ~err-expected,,$(wordlist 2,99999999,$(wordlist 3,99999999,$1)),$(wordlist 3,99999999,$1),TEST,$(~cond-where)))),$(call ~err-expected,L,$1,,(TEST BODY),$(~cond-where)))
~ml.special-cond = $(call ~c0,$(call ~foldr,$(value ~cond-wrap),,$3),$1)
~defn-global-name = $(if $(filter !:EDefn1,$(firstword $1)),$(call ^n,2,$1),$(if $(filter !:EDefn2,$(firstword $1)),$(call ^n,2,$1)))
~ml.special-global-name = $(or $(call ~check-argc,1,$3,$2),$(if $(filter !:P2,$(firstword $(call ^u,$(word 1,$3)))),$(call ^Y,$(call ~defn-global-name,$(call ~resolve,$(call ^u,$(word 1,$3)),$1)),$(call ^n,3,$(call ^u,$(word 1,$3))),,,,,,,,$`(if $`1,!:IL0 $`(call ^d,$`1),$`(call ~gen-error,$`(call ^u,$`(word 1,$(call ^E,$3))),%q is not a global variable,$`2))),$(call ~err-expected,S,$(call ^u,$(word 1,$3)),$2,NAME,(global-name NAME))))
~defmacro-where := (defmacro (NAME ARG...) BODY)
~ml.special-defmacro = $(if $(filter !:P0,$(firstword $(call ^u,$(word 1,$3)))),$(if $(filter !:P2,$(firstword $(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$(word 1,$3))))))),$(call ^Y,$(call ~c0,!:P0 0 $(call ~cons,!:P2 0 define,$3),$1),$(call ~hash-bind,$(call ^n,3,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$(word 1,$3)))))),!:EDefn4 $(call ^d,$(call ~gen-global-name,$(call ^n,3,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$(word 1,$3)))))),$1)) ,$1),,,,,,,,!:IL9 $`(call ^d,$`2) $`1),$(call ~err-expected,S,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$(word 1,$3))))),$2,NAME,$(~defmacro-where))),$(call ~err-expected,L,$(call ^u,$(word 1,$3)),$2,(NAME ARG...),$(~defmacro-where)))
~ml.special-use = $(or $(call ~check-argc,1,$3,$2),$(if $(filter !:P1,$(firstword $(call ^u,$(word 1,$3)))),$(call ^Y,$(call ~use-module,$(call ^n,3,$(call ^u,$(word 1,$3)))),$(call ^n,3,$(call ^u,$(word 1,$3))),$1,,,,,,,$`(if $`1,$`(call ~block-result,$(call ^E,$4),$`(call ~append,$`1,$`3),!:IL0 !.),$`(call ~gen-error,use: Cannot find module %q,$`2))),$(call ~err-expected,Q,$(call ^u,$(word 1,$3)),$2,MODULE,(use MODULE))))
$(if $(call ^add-tags,!1:Data0!=DataType!0W!0W!0S!0L),)
~data-where := (data NAME (CTOR ARG...)...)
~read-type-r = $(or $(if $(if $1,,1),$(if $6,$(call ~gen-error,$2,no argument following last flag: %s,$6),!:Data0 $3 $(call ^u,$(word 1,$4)) $(call ^d,$(wordlist 2,99999999,$4)) $5)),$(if $(filter !:P2,$(firstword $(call ^u,$(word 1,$1)))),$(or $(if $(if $(filter &%,$(call ^n,3,$(call ^u,$(word 1,$1)))),,1),$(call ~read-type-r,$(wordlist 2,99999999,$1),$2,$3,$4 $(if $(call ~eq?,&word,$6),W,$(if $(and $(call ~eq?,&list,$6),$(if $(word 2,$1),,1)),L,S)),$(call ~conj,$5,$(call ^n,3,$(call ^u,$(word 1,$1)))),)),$(if $6,$(call ~gen-error,$(call ^u,$(word 1,$1)),two type flags supplied for one argument)),$(if $(filter &list &word,$(call ^n,3,$(call ^u,$(word 1,$1)))),$(call ~read-type-r,$(wordlist 2,99999999,$1),$2,$3,$4,$5,$(call ^n,3,$(call ^u,$(word 1,$1))))),$(call ~gen-error,$(call ^u,$(word 1,$1)),$(if ,,unknown flag [supported: &list, &word]))),$(call ~err-expected,S,$(call ^u,$(word 1,$1)),$2,ARG,$(~data-where))))
~read-type = $(if $(filter !:P0,$(firstword $1)),$(if $(filter !:P2,$(firstword $(call ^u,$(word 1,$(wordlist 3,99999999,$1))))),$(if $(filter !:P1,$(firstword $(call ~nth,2,$(wordlist 3,99999999,$1)))),$(call ~read-type-r,$(wordlist 3,99999999,$(wordlist 3,99999999,$1)),$1,$(call ^n,3,$(call ~nth,2,$(wordlist 3,99999999,$1))),$(call ^n,3,$(call ^u,$(word 1,$(wordlist 3,99999999,$1)))),,),$(call ~read-type-r,$(wordlist 2,99999999,$(wordlist 3,99999999,$1)),$1,$2,$(call ^n,3,$(call ^u,$(word 1,$(wordlist 3,99999999,$1)))),,)),$(call ~err-expected,S,$(call ^u,$(word 1,$(wordlist 3,99999999,$1))),$3,CTOR,$(~data-where))),$(call ~err-expected,L,$1,$3,(CTOR ...),$(~data-where)))
~read-types = $(if $(filter !:P7,$(firstword $5)),$5,$(if $(if $3,,1),$(call ~append,$6,$(if $5,$(call ^d,$5))),$(call ~read-types,$1,$2,$(wordlist 2,99999999,$3),$(call ~append,$4,1),$(call ~read-type,$(call ^u,$(word 1,$3)),$2$(words $4),$1),$(call ~append,$6,$(if $5,$(call ^d,$5))))))
~ml.special-data = $(call ~env-strip,$4,$(call ^Y,$(if $(filter !:P2,$(firstword $(call ^u,$(word 1,$3)))),$(call ~read-types,$2,!:$(call ^n,3,$(call ^u,$(word 1,$3))),$(wordlist 2,99999999,$3)),$(call ~err-expected,S,$(call ^u,$(word 1,$3)),$2,NAME,$(~data-where))),$1,,,,,,,,$`(or $`(if $`(filter !:P7,$`(firstword $`1)),$`1),!:IL9 $`(call ^d,$`(call ~append,$`(filter %,$`(foreach ty,$`1,$`(if $`(filter !:Data0,$`(firstword $`(call ^u,$`(ty)))),$`(call ~hash-bind,$`(word 3,$`(call ^u,$`(ty))),!:EDefn5 $`(call ^d,$`(call ^n,4,$`(call ^u,$`(ty)))) . $`(call ^d,$`(word 2,$`(call ^u,$`(ty)))))))),$`2)) !:IL3 ^add-tags $`(call ^d,!:IL0 $`(call ^d,$`(filter %,$`(foreach ty,$`1,$`(if $`(filter !:Data0,$`(firstword $`(call ^u,$`(ty)))),$`(call ~hash-bind,$`(word 2,$`(call ^u,$`(ty))),$`(call ~append,$`(word 3,$`(call ^u,$`(ty))),$`(call ^n,4,$`(call ^u,$`(ty)))))))))))))
~case-where := (case VALUE (PATTERN BODY)...)
~arg-bindings = $(foreach n,$(call ~indicesX,$2,1),$(call ~hash-bind,$(call ~symbol-name,$(call ~nth,$n,$1)),!:EDefn6 $(call ^d,$(if $(call ~eq?,S,$(word $n,$2)),!:IL3 ^n $(call ^d,!:IL0 $(call ^d,$(call ~1+,$n))) $(call ^d,$3),$(if $(call ~eq?,W,$(word $n,$2)),!:IL2 word $(call ^d,!:IL0 $(call ^d,$(call ~1+,$n))) $(call ^d,$3),!:IL2 wordlist $(call ^d,!:IL0 $(call ^d,$(call ~1+,$n))) $(call ^d,!:IL0 99999999) $(call ^d,$3)))) .))
~c0-matches = $(foreach c,$1,$(call ^d,$(if $(filter !:P0,$(firstword $(call ^u,$c))),$(if $(filter !:P2,$(firstword $(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$c)))))),$(call ~c0-block,$(wordlist 2,99999999,$(wordlist 3,99999999,$(call ^u,$c))),$(call ~hash-bind,$(call ^n,3,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$c))))),!:EDefn6 $(call ^d,$2) ,$3)),$(if $(filter !:P0,$(firstword $(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$c)))))),$(or $(call ^Y,$(call ~resolve,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$c))))))),$3),$2,$(wordlist 2,99999999,$(wordlist 3,99999999,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$c)))))),$(wordlist 2,99999999,$(wordlist 3,99999999,$(call ^u,$c))),,,,,,$`(if $`(filter !:EDefn5,$`(firstword $`1)),!:IL2 if $`(call ^d,!:IL2 filter $`(call ^d,!:IL0 $`(call ^d,$`(call ^n,4,$`1))) $`(call ^d,!:IL2 firstword $`(call ^d,$`2))) $`(call ^d,$`(call ~c0-block,$`4,$`(call ~append,$`(call ~arg-bindings,$`3,$`(call ^n,2,$`1),$`2),$(call ^E,$3)))))),$(if $(filter !:P2,$(firstword $(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$c))))))))),$(call ~gen-error,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$c))))))),symbol %q does not identify a record type,$(call ^n,3,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$c))))))))),$(call ~err-expected,S,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$c))))))),$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$c)))),CTOR,$(~case-where)))),$(call ~err-expected,L S,$(call ^u,$(word 1,$(wordlist 3,99999999,$(call ^u,$c)))),$(call ^u,$c),PATTERN,$(~case-where)))),$(call ~err-expected,L,$(call ^u,$c),,(PATTERN BODY),$(~case-where)))))
~case-append-arg = $(if $(filter !:IL2,$(firstword $1)),!:IL2 $(word 2,$1) $(call ~conj,$(wordlist 3,99999999,$1),$2),$1)
~case-fold = $(if $(word 2,$1),$(call ~foldr,$(value ~case-append-arg),$(call ~promote,$(lastword $1)),$(call ~butlast,$1)),$(call ^u,$(word 1,$1)))
~ml.special-case = $(call ^Y,$(call ~c0,$(call ^u,$(word 1,$3)),$1),$1,$3,$2,,,,,,$`(if $`(filter !:P7,$`(firstword $`1)),$`1,$`(if $`(call ^u,$`(word 1,$(call ^E,$3))),$`(call ~case-fold,$`(call ~c0-matches,$`(wordlist 2,99999999,$`3),$`1,$`2)),$`(call ~err-expected,,$`(call ^u,$`(word 1,$(call ^E,$3))),$`4,VALUE,$`(~case-where)))))

endef
 
define ///num.min
# compiled from num.scm
# Requires: core runtime
# Requires: scam-ct
# Exports: sum!=!1!cEDefn1,~sum,.,list sum-small!=!1!cEDefn1,~sum-small,.,list range!=!1!cEDefn1,~range,.,min:max 0-!=!1!cEDefn1,~0-,.,n u-range!=!1!cEDefn1,~u-range,.,min:max mod!=!1!cEDefn1,~mod,.,a:b mod-9!=!1!cEDefn1,~mod-9,.,n mod-8!=!1!cEDefn1,~mod-8,.,n mod-5!=!1!cEDefn1,~mod-5,.,n mod-3!=!1!cEDefn1,~mod-3,.,n mod-2!=!1!cEDefn1,~mod-2,.,n mod-1!=!1!cEDefn1,~mod-1,.,n div-10!=!1!cEDefn1,~div-10,.,n mod-10!=!1!cEDefn1,~mod-10,.,n mod-10!=!1!cEDefn1,~mod-10,.,n umod!=!1!cEDefn1,~umod,.,a:b /!=!1!cEDefn1,~/,.,a:b u/!=!1!cEDefn1,~u/,.,a:b:?more-a longdiv!=!1!cEDefn1,~longdiv,.,a:more-a:b longdiv-next!=!1!cEDefn1,~longdiv-next,.,digit:remainder:more-a:b longdiv!=!1!cEDefn1,~longdiv,.,a:more-a:b digit-range!=!1!cEDefn1,~digit-range,.,a:b:more-a?:more-b?:at strdiv!=!1!cEDefn1,~strdiv,.,a:b topdigits!=!1!cEDefn1,~topdigits,.,num:at ==!=!1!cEDefn1,~==,.,a:b <=!=!1!cEDefn1,~<=,.,a:b >=!=!1!cEDefn1,~>=,.,a:b <!=!1!cEDefn1,~<,.,a:b >!=!1!cEDefn1,~>,.,a:b ^!=!1!cEDefn1,~^,.,a:b *!=!1!cEDefn1,~*,.,a:b -!=!1!cEDefn1,~-,.,a:b +!=!1!cEDefn1,~+,.,a:b u^!=!1!cEDefn1,~u^,.,a:b u^2!=!1!cEDefn1,~u^2,.,n u/2!=!1!cEDefn1,~u/2,.,n nodd!=!1!cEDefn1,~nodd,.,n cmp!=!1!cEDefn1,~cmp,.,a:b ucmp!=!1!cEDefn1,~ucmp,.,a:b u-!=!1!cEDefn1,~u-,.,a:b ndecode!=!1!cEDefn1,~ndecode,.,n u*!=!1!cEDefn1,~u*,.,a:b u+1!=!1!cEDefn1,~u+1,.,a u+!=!1!cEDefn1,~u+,.,a:b ucarry!=!1!cEDefn1,~ucarry,.,n udecode!=!1!cEDefn1,~udecode,.,n:sign uencode!=!1!cEDefn1,~uencode,.,s nnorm!=!1!cEDefn1,~nnorm,.,n sign!=!1!cEDefn1,~sign,.,n intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
~sign = $(findstring -,$1)
~nnorm = $(strip $(subst ., .,$(call ~butlast,$(subst -.,- .,$(subst i.,i .,$(subst $  ,,$1.))))))
~uencode = $(call ~reverse,$(subst 0, .,$(subst -,,$(subst 1,0i,$(subst 2,1i,$(subst 3,2i,$(subst 4,3i,$(subst 5,4i,$(subst 6,5i,$(subst 7,6i,$(subst 8,7i,$(subst 9,8i,$1))))))))))))
~udecode = $(and $(findstring i,$1),$2)$(or $(subst 8i,9,$(subst 7i,8,$(subst 6i,7,$(subst 5i,6,$(subst 4i,5,$(subst 3i,4,$(subst 2i,3,$(subst 1i,2,$(subst 0i,1,$(subst .,0,$(subst $  ,,$(wordlist 2,99999999,$(subst .i, .i,.$(subst $  ,,$(call ~reverse,$1))))))))))))))),0)
~ucarry = $(call ~while,$`(findstring iiiiiiiiii .,$`1),$`(subst iiiiiiiiii ., .i,$`1),$1 .)
~u+ = $(call ~ucarry,$(subst ..,.,$(subst i.,i,$(join $1,$2))))
~u+1 = $(call ~ucarry,$(join $(or $1,.),i))
~u* = $(call ~u+,$(subst i,$(subst .,,$(firstword $1)),$2),$(if $(word 2,$1),$(call ~u*,$(wordlist 2,99999999,$1),. $2)))
~ndecode = $(call ~udecode,$(if $(findstring -,$1),$(wordlist 2,$(words $1),. $(call ~u+1,$(foreach d,$1,$(subst $d,.,.iiiiiiiii)))),$1),$(findstring -,$1))
~u- = $(call ~nnorm,$(subst .i-,.,$(call ~u+,$1,$(join $(foreach d,$(subst ..,.,$(join $(subst i,,$1),$2)),$(subst $d,.,.iiiiiiiii)),i) .-)))
~ucmp = $(if $(or $1,$2),$(or $(call ~ucmp,$(wordlist 2,99999999,$1),$(wordlist 2,99999999,$2)),$(if $(findstring $(word 1,$2)i,$(word 1,$1)),a),$(if $(findstring $(word 1,$1)i,$(word 1,$2)),b)))
~cmp = $(call ^Y,$(call ~sign,$1),$(call ~sign,$2),$(call ~uencode,$1),$(call ~uencode,$2),,,,,,$`(if $`(call ~xor,$`1,$`2),$`(and $`(or $`(findstring i,$`3),$`(findstring i,$`4)),$`(if $`2,a,b)),$`(filter a b,$`(subst -a,b,$`(subst -b,a,$`1$`(call ~ucmp,$`3,$`4))))))
~nodd = $(findstring i,$(subst ii,,$(word 1,$1)))
~u/2 = $(call ~nnorm,$(wordlist 2,99999999,$(call ~ucarry,$(subst i,iiiii,$1))))
~u^2 = $(call ~u*,$1,$1)
~u^ = $(if $(call ~nodd,$2),$(call ~nnorm,$(call ~u*,$1,$(call ~u^2,$(call ~u^,$1,$(call ~u/2,$2))))),$(if $(findstring i,$2),$(call ~nnorm,$(call ~u^2,$(call ~u^,$1,$(call ~u/2,$2)))),.i))
~+ = $(call ^Y,$(call ~sign,$1),$(call ~sign,$2),$(call ~uencode,$1),$(call ~uencode,$2),,,,,,$`(if $`(call ~xor,$`1,$`2),$`(call ~ndecode,$`(if $`2,$`(call ~u-,$`3,$`4),$`(call ~u-,$`4,$`3))),$`(call ~udecode,$`(call ~u+,$`3,$`4),$`1)))
~- = $(call ~+,$1,$(subst --,,-$2))
~* = $(call ~udecode,$(call ~u*,$(call ~uencode,$1),$(call ~uencode,$2)),$(call ~xor,$(call ~sign,$1),$(call ~sign,$2)))
~^ = $(call ^Y,$(call ~sign,$1),$(call ~sign,$2),$(call ~uencode,$1),$(call ~uencode,$2),,,,,,$`(if $`2,nan,$`(call ~udecode,$`(call ~u^,$`3,$`4),$`(and $`1,$`(call ~nodd,$`4),-))))
~> = $(if $(filter a,$(call ~cmp,$1,$2)),1)
~< = $(if $(filter b,$(call ~cmp,$1,$2)),1)
$(if ,,~>=) = $(if $(filter b,$(call ~cmp,$1,$2)),,1)
$(if ,,~<=) = $(if $(filter a,$(call ~cmp,$1,$2)),,1)
$(if ,,~==) = $(if $(call ~cmp,$1,$2),,1)
~topdigits = $(call ^Y,$(wordlist $2,99999999,$1),,,,,,,,,$`(subst .,,$`(word 1,$`1)$`(subst i,iiiiiiiiii,$`(word 2,$`1)$`(subst i,iiiiiiiiii,$`(word 3,$`1)))))
~strdiv = $(subst I,i,$(subst i,,$(subst $2,I,$1)))
~digit-range = $(call ^Y,$(call ~topdigits,$1,$5),$(call ~topdigits,$2,$5),$3,$4,,,,,,.$`(call ~strdiv,$`1,$`2$`(if $`4,i)) .$`(patsubst iiiiiiiii%,iiiiiiiii,$`(call ~strdiv,$`1$`(if $`3,i),$`2)))
~longdiv-next = $(call ~append,$(if $3,$(call ~longdiv,$(call ~append,$(lastword $3),$2),$(call ~butlast,$3),$4)),$1)
~longdiv = $(call ^Y,$(call ~digit-range,$1,$3,$2,$(word 3,$3),$(patsubst 0,1,$(words $(wordlist 2,99999999,$3)))),$1,$3,$2,,,,,,$`(call ^Y,$`(call ~u-,$`2,$`(call ~ucarry,$`(subst i,$`(subst .,,$`(word 1,$`1)),$`3))),$`2,$`3,$`4,$`(word 1,$`1),$`(word 2,$`1),,,,$``(if $``(or $``(call ~eq?,$``5,$``6),$``(filter b,$``(call ~ucmp,$``1,$``3))),$``(call ~longdiv-next,$``5,$``1,$``4,$``3),$``(call ~longdiv-next,$``6,$``(call ~u-,$``1,$``3),$``4,$``3))))
~u/ = $(if $(word $(words . $2),$1),$(call ~u/,$(wordlist 2,99999999,$1),$2,$(call ~append,$3,$(call ^u,$(word 1,$1)))),$(call ~longdiv,$1,$3,$2))
~/ = $(call ^Y,$(call ~sign,$1),$(call ~sign,$2),$(call ~nnorm,$(call ~uencode,$1)),$(call ~nnorm,$(call ~uencode,$2)),,,,,,$`(if $`(if $`4,,1),nan,$`(call ~udecode,$`(call ~u/,$`3,$`4),$`(call ~xor,$`1,$`2))))
~umod = $(call ^Y,$1,$2,$(subst .,,$2),$(subst $(subst .,,$2),,iiiiiiiiii),,,,,,$`(if $`(call ~eq?,$`4,),$`(subst $`3,,$`(word 1,$`1)),$`(if $`(call ~eq?,$`4,i),.$`(subst $`3,,$`(subst $`  ,,$`(subst .,,$`1))),$`(call ~u-,$`1,$`(call ~u*,$`(call ~u/,$`1,$`2),$`2)))))
~mod-10 = $(if $(filter %1 %2 %3 %4,$1),$(if $(filter %1 %2,$1),$(if $(filter %1,$1),1,2),$(if $(filter %3,$1),3,4)),$(if $(filter %5 %6 %7 %8,$1),$(if $(filter %5 %6,$1),$(if $(filter %5,$1),5,6),$(if $(filter %7,$1),7,8)),$(if $(filter %9,$1),9,0)))
~mod-10 = $(if $(filter %8 %9,$1),$(if $(filter %8,$1),8,9),$(words $(filter %1 %3 %5 %7 %9,$1)$(if $(filter %2 %3 %6 %7,$1), 1 1)$(if $(filter %4 %5 %6 %7,$1), 1 1 1 1)))
~div-10 = $(patsubst %$(call ~mod-10,$1),%,$1)
~mod-1 = 0
~mod-2 = $(if $(filter %1 %3 %5 %7 %9,$1),1,0)
~mod-3 = $(or $(subst 11,2,$(subst 111,,$(subst 2,11,$(subst 5,11,$(subst 8,11,$(subst 4,1,$(subst 7,1,$(subst 3,,$(subst 6,,$(subst 9,,$(subst 0,,$1))))))))))),0)
~mod-5 = $(word $(subst 0,10,$(call ~mod-10,$1)),1 2 3 4 0 1 2 3 4 0)
~mod-8 = $(subst 8,0,$(subst 9,1,$(call ~mod-10,$1)))
~mod-9 = $(words $(subst 1,1 ,$(subst 111111111,,$(subst 2,11,$(subst 3,21,$(subst 4,31,$(subst 5,41,$(subst 6,51,$(subst 7,61,$(subst 8,71,$(subst 9,,$(subst 0,,$1))))))))))))
~mod = $(if $(filter 1 2 3 5 9 10,$2),$(call ~mod-$2,$1),$(call ^Y,$(call ~sign,$1),$(call ~nnorm,$(call ~uencode,$1)),$(call ~nnorm,$(call ~uencode,$2)),,,,,,,$`(if $`(if $`3,,1),nan,$`(call ~udecode,$`(call ~umod,$`2,$`3),$`1))))
~u-range = $(if $(call ~>=,$1,$2),$(if $(call ~==,$1,$2),$1),$(if $(filter %0,$1),$(if $(filter %9,$2),$(if $(filter 0,$1),0 1 2 3 4 5 6 7 8 9 )$(foreach n,$(call ~u-range,$(or $(patsubst %0,%,$1),1),$(or $(patsubst %9,%,$2),0)),$n0 $n1 $n2 $n3 $n4 $n5 $n6 $n7 $n8 $n9 ),$(call ~u-range,$1,$(call ~-,$2,1)) $2),$1 $(call ~u-range,$(call ~1+,$1),$2)))
~0- = $(subst --,,-$(or $1,0))
~range = $(strip $(if $(call ~>=,$1,0),$(call ~u-range,$1,$2),$(addprefix -,$(call ~reverse,$(call ~u-range,$(if $(call ~<,$2,0),$(call ~0-,$2),1),$(call ~0-,$1)))) $(if $(call ~>=,$2,0),$(call ~u-range,0,$2))))
~sum-small = $(if $1,$(call ~+,$(word 1,$1),$(call ~sum-small,$(wordlist 2,99999999,$1))),0)
~sum = $(if $(word 50,$1),$(call ~+,$(call ~sum,$(wordlist 1,$(call ~/,$(words $1),2),$1)),$(call ~sum,$(wordlist $(call ~1+,$(call ~/,$(words $1),2)),99999999,$1))),$(call ~sum-small,$1))

endef
 
define ///parse.min
# compiled from parse.scm
# Requires: core runtime
# Requires: scam-ct
# Exports: parse-text!=!1!cEDefn1,~parse-text,.,text parse-subject!=!1!cEDefn1,~parse-subject,.,subj parse-forms!=!1!cEDefn1,!c,p,subj:pos:k;!3!cP0:3974:!4!cP2@3975@parse-forms-r:!4!cP2@3977@subj:!4!cP2@3979@k:!4!cP0@3981@!5!cP2!403982!40parse-exp@!5!cP2!403984!40subj@!5!cP2!403986!40pos:!4!cP2@3989@nil parse-forms-r!=!1!cEDefn1,~parse-forms-r,p,subj:k:o:form-list describe-error!=!1!cEDefn1,~describe-error,.,form:text:filename natural?!=!1!cEDefn1,~natural?,p,n get-error-msg!=!1!cEDefn1,~get-error-msg,p,desc describe-line!=!1!cEDefn1,~describe-line,p,pos:subj describe-lnum!=!1!cEDefn1,~describe-lnum,.,pos:subj parse-exp!=!1!cEDefn1,~parse-exp,.,subj:pos parse-x!=!1!cEDefn1,~parse-x,p,w:subj:pos parse-x2!=!1!cEDefn1,~parse-x2,p,w:pos:out parse-array!=!1!cEDefn1,~parse-array,p,subj:pos parse-list!=!1!cEDefn1,!c,.,subj:pos;!3!cP0:2512:!4!cP2@2513@parse-seq:!4!cP2@2515@subj:!4!cP1@2517@):!4!cP2@2521@pos:!4!cP0@2523@!5!cP2!402524!40parse-exp@!5!cP2!402526!40subj@!5!cP0!402528!40!51!cP2!502529!501+!40!51!cP2!502531!50pos:!4!cP2@2535@nil parse-seq!=!1!cEDefn1,~parse-seq,p,subj:term:start-pos:out:lst parse-seq-err!=!1!cEDefn1,~parse-seq-err,p,term:start-pos:err-n:err-desc new-Q!=!1!cEDefn1,~new-Q,p,str:start:end parse-exp!=!1!cEDefn1,~parse-exp,.,subj:pos POut-format!=!1!cEDefn1,~POut-format,.,value POut-form!=!1!cEDefn1,!c,.,st;!3!cP0:1942:!4!cP2@1943@rest:!4!cP2@1945@st POut-pos!=!1!cEDefn1,!c,.,st;!3!cP0:1922:!4!cP2@1923@word:!4!cP1@1925@1:!4!cP2@1927@st POut!=!1!cEDefn1,!c,.,pos:form;!3!cP0:1898:!4!cP2@1899@concat:!4!cP2@1901@pos:!4!cP1@1903@!40:!4!cP2@1907@form find-word!=!1!cEDefn1,~find-word,.,str:pos:pat pdec-str!=!1!cEDefn1,~pdec-str,p,text pdec!=!1!cEDefn1,~pdec,.,text penc!=!1!cEDefn1,~penc,.,text expand-spaces!=!1!cEDefn1,~expand-spaces,p,str compress-spaces!=!1!cEDefn1,~compress-spaces,p,str compact-comments!=!1!cEDefn1,~compact-comments,p,str format-form!=!1!cEDefn1,~format-form,.,form form-set-indices!=!1!cEDefn1,~form-set-indices,.,pos:form form-typename!=!1!cEDefn1,~form-typename,.,form form-index!=!1!cEDefn1,~form-index,.,form PList-is-empty?!=!1!cEDefn1,~PList-is-empty?,.,form string-value!=!1!cEDefn1,~string-value,.,form;!3!cP0:318:!4!cP2@319@case:!4!cP2@321@form:!4!cP0@323@!5!cP0!40324!40!51!cP2!50325!50PString!40!51!cP2!50327!50n!40!51!cP2!50329!50value@!5!cP2!40332!40value:!4!cP0@335@!5!cP2!40336!40else@!5!cP0!40338!40!51!cP2!50339!50concat!40!51!cP1!50341!50ERROR!cstring-value(!40!51!cP2!50348!50form!40!51!cP1!50350!50) symbol-to-string!=!1!cEDefn1,~symbol-to-string,.,form symbol-name!=!1!cEDefn1,~symbol-name,.,form PList!=!1!cEDefn5,W;L,.,!2!cP0 PString!=!1!cEDefn5,W;S,.,!2!cP1 PSymbol!=!1!cEDefn5,W;S,.,!2!cP2 PQuote!=!1!cEDefn5,W;L,.,!2!cP3 PQQuote!=!1!cEDefn5,W;L,.,!2!cP4 PUnquote!=!1!cEDefn5,W;L,.,!2!cP5 PSplice!=!1!cEDefn5,W;L,.,!2!cP6 PError!=!1!cEDefn5,W;S,.,!2!cP7 intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
$(if $(call ^add-tags,!1:P0!=PList!0W!0L !1:P1!=PString!0W!0S !1:P2!=PSymbol!0W!0S !1:P3!=PQuote!0W!0L !1:P4!=PQQuote!0W!0L !1:P5!=PUnquote!0W!0L !1:P6!=PSplice!0W!0L !1:P7!=PError!0W!0S),)
~symbol-name = $(if $(filter !:P2,$(firstword $1)),$(call ^n,3,$1),ERROR:symbol-name($1))
~symbol-to-string = $(if $(filter !:P2,$(firstword $1)),!:P1 $(word 2,$1) $(call ^d,$(call ^n,3,$1)),ERROR:symbol-to-string($1))
~string-value = $(if $(filter !:P1,$(firstword $1)),$(call ^n,3,$1),ERROR:string-value($1))
~PList-is-empty? = $(if $(filter !:P0,$(firstword $1)),$(if $(wordlist 3,99999999,$1),,1),ERROR:PList.is-empty?($1))
~form-index = $(if $(filter !:%,$(word 1,$1)),$(word 2,$1),$(if $(call ~numeric?,$1),$1,0))
~form-typename = $(if $(filter !:P0,$(firstword $1)),list,$(if $(filter !:P2,$(firstword $1)),symbol,$(if $(filter !:P1,$(firstword $1)),literal string,invalid form)))
~form-set-indices = $(if $2,$(if $(filter !:P1,$(firstword $2)),!:P1 $1 $(call ^d,$(call ^n,3,$2)),$(if $(filter !:P2,$(firstword $2)),!:P2 $1 $(call ^d,$(call ^n,3,$2)),$(if $(filter !:P7,$(firstword $2)),!:P7 $1 $(call ^d,$(call ^n,3,$2)),$(if $(filter !:P0,$(firstword $2)),!:P0 $1 $(foreach f,$(wordlist 3,99999999,$2),$(call ^d,$(call ~form-set-indices,$1,$(call ^u,$f)))),$(if $(filter !:P3,$(firstword $2)),!:P3 $1 $(call ~form-set-indices,$1,$(wordlist 3,99999999,$2)),$(if $(filter !:P4,$(firstword $2)),!:P4 $1 $(call ~form-set-indices,$1,$(wordlist 3,99999999,$2)),$(if $(filter !:P5,$(firstword $2)),!:P5 $1 $(call ~form-set-indices,$1,$(wordlist 3,99999999,$2)),$(if $(filter !:P6,$(firstword $2)),!:P6 $1 $(call ~form-set-indices,$1,$(wordlist 3,99999999,$2)),ERROR:form-set-indices($2))))))))))
~format-form = $(if $(filter !:P0,$(firstword $1)),($(foreach f,$(wordlist 3,99999999,$1),$(call ~format-form,$(call ^u,$f)))),$(if $(filter !:P1,$(firstword $1)),$(call ~format,$(call ^n,3,$1)),$(if $(filter !:P2,$(firstword $1)),$(call ^n,3,$1),$(if $(filter !:P3,$(firstword $1)),'$(call ~format-form,$(wordlist 3,99999999,$1)),$(if $(filter !:P4,$(firstword $1)),`$(call ~format-form,$(wordlist 3,99999999,$1)),$(if ,,,$(call ~format,$1)))))))
define ~compact-comments
$(subst ; ;,;;,$(subst !s, ,$(subst $  ,,$(foreach c,$(subst ;, ;,$(subst 
, 
,$(subst ", ",$(subst $  ,!s,$1)))),$(if $(filter ;%,$c),$(subst !s,,$c)!s,$c)))))
endef
define ~compress-spaces
$(subst !6!6,!c,$(subst !2!0!2!0,!6,$(subst !0!0!0,!0!2,$(subst 
!0!0,
!2,$(subst 
 !0,
!0,$1)))))
endef
~expand-spaces = $(subst !2,!0!0,$(subst !6,!2!2!2,$(subst !c,!6!6,$1)))
define ~penc
$(call ~compress-spaces,$(call ~compact-comments,$(subst !+, !0!+ ,$(subst $   , ,$(subst 0  !,0!,$(subst %, !p ,$(subst :, : ,$(subst $`, $` ,$(subst $[, $[ ,$(subst $], $] ,$(subst [, [ ,$(subst ], ] ,$(subst ", " ,$(subst 
, 
 ,$(subst !0, !0 ,$(subst ;, ; ,$(subst \",!Q,$(subst \\,!b,$(subst ', ' ,$(subst `, ` ,$(subst $(if ,,, @),$(if ,,,@ ),$(subst $(if ,,,),$(if ,, , ),$(if $1,$(call ~demote,$1))))))))))))))))))))))))
endef
~pdec = $(call ~promote,$(call ~expand-spaces,$(subst !p,%,$(subst !b,\\,$(subst !Q,\",$(subst $  ,,$(subst !0!+,!+,$1)))))))
define ~pdec-str
$(or $(call ~expand-spaces,$(subst !p,%,$(subst !b,\,$(subst !Q,",$(subst \n,
,$(subst \t,!+,$(subst $  ,,$(subst !0!+,!+,$1)))))))),!.)
endef
~find-word = $(foreach p,$(call ~1+,$(call ~1+,$2)),$(if $(filter $3,$(or $(wordlist $2,$p,$1),$3)),$(if $(filter $3,$(or $(word $2,$1),$3)),$2,$(foreach q,$(call ~1+,$2),$(if $(filter $3,$(or $(word $q,$1),$3)),$q,$p))),$(call ~find-word,$1,$(call ~1+,$p),$3)))
~POut-format = $(if $(and $(call ~numeric?,$(word 1,$1)),$(filter !:%,$(word 2,$1))),(POut $(word 1,$1) $(call ~format,$(wordlist 2,99999999,$1))))
~new-Q = $3 $(if $(word $3,$1),!:P1 $2 $(call ^d,$(call ~promote,$(call ~pdec-str,$(subst ",,$(wordlist $2,$3,$1))))),!:P7 $2 ")
~parse-seq-err = $(if $(filter .,$4),$2 !:P7 $2 $(call ^d,$(subst ],[,$(subst $],$[,$1))),$3 !:P7 $3 $(call ^d,$4 $1))
~parse-seq = $(if $(filter !:P7,$(firstword $(wordlist 2,99999999,$4))),$(if $(call ~eq?,$2,$(call ^n,3,$(wordlist 2,99999999,$4))),$(word 1,$4) !:P0 $3 $5,$(call ~parse-seq-err,$2,$3,$(word 2,$(wordlist 2,99999999,$4)),$(call ^n,3,$(wordlist 2,99999999,$4)))),$(call ~parse-seq,$1,$2,$3,$(call ~parse-exp,$1,$(call ~1+,$(word 1,$4))),$(call ~conj,$5,$(wordlist 2,99999999,$4))))
~parse-array = $(call ~parse-seq,$1,],$2,$(call ~parse-exp,$1,$(call ~1+,$2)),$(call ^d,!:P2 0 vector))
~parse-x2 = $(if $(filter !:P7,$(firstword $(wordlist 2,99999999,$3))),$3,$(word 1,$3) $(call ^Y,$2,$(wordlist 2,99999999,$3),,,,,,,,$(if $(filter ',$1),!:P3 $`1 $`2,$(if $(filter `,$1),!:P4 $`1 $`2,$(if $(filter $(if ,,,),$1),!:P5 $`1 $`2,$(if $(filter $(if ,,,@),$1),!:P6 $`1 $`2,!:P7 $(call ^E,$2) $`(call ^d,internal:parse-x2:$(call ^E,$1))))))))
define ~parse-x
$(if $(filter !0% 
% ;% (),$(or $(word $(call ~1+,$3),$2),())),$3 !:P7 $3 $(call ^d,$1),$(call ~parse-x2,$1,$3,$(call ~parse-exp,$2,$(call ~1+,$3))))
endef
define ~parse-exp
$(or $(foreach w,$(word $2,$1),$(if $(filter !0% 
%,$w),$(call ~parse-exp,$1,$(call ~1+,$2)),$(if $(filter $] ],$w),$2 !:P7 $2 $(call ^d,$w),$(if $(filter $[,$w),$(call ~parse-seq,$1,$],$2,$(call ~parse-exp,$1,$(call ~1+,$2)),),$(if $(filter ",$w),$(call ~new-Q,$1,$2,$(call ~find-word,$1,$(call ~1+,$2),")),$(if $(filter ;%,$w),$(call ~parse-exp,$1,$(call ~1+,$(call ~find-word,$1,$2,
%))),$(if $(filter [,$w),$(call ~parse-array,$1,$2),$(if $(filter $(if ,,' ` , ,@),$w),$(call ~parse-x,$w,$1,$2),$(if $(call ~numeric?,$w),$2 !:P1 $2 $(call ^d,$w),$(if $(filter $` : !p,$w),$2 !:P7 $2 $(call ^d,$(call ~pdec,$w)),$2 !:P2 $2 $(call ^d,$(call ~promote,$w)))))))))))),$2 !:P7 $2 .)
endef
define ~describe-lnum
$(words 1 $(filter 
,$(subst 
,
 ,$(wordlist 2,$(or $1,1),x$2))))
endef
define ~describe-line
$(call ^Y,$(call ~promote,$(lastword $(call ~split,
,$(wordlist 2,$(or $1,1),X $2)))),$(call ^u,$(word 1,$(call ~split,
,$(wordlist $(or $1,1),99999999,$2)))),,,,,,,,$`(call ^d,$`(call ~pdec,$`1)) $`(call ^d,$`(call ~pdec,$`(word 1,$`2))) $`(call ^d,$`(call ~pdec,$`(wordlist 2,99999999,$`2))))
endef
~get-error-msg = $(if $(filter ` ',$(word 1,$1)),prefix "$(word 1,$1)" must immediately precede expression,$(if $(filter ( ) [ ],$(word 1,$1)),unmatched "$(word 1,$1)",$(if $(filter ",$(word 1,$1)),unterminated string,$1)))
~natural? = $(call ~numeric?,$(subst 0,,$(subst .,~,$(subst -,~,$(subst e,~,$(subst E,~,$1))))))
define ~describe-error
$(if $(filter !:P7,$(firstword $1)),$(call ^Y,$(call ~penc,$2),$(if $3,$3:,line ),$(call ~get-error-msg,$(call ^n,3,$1)),$(word 2,$1),,,,,,$`(if $`(call ~natural?,$`4),$`(call ~sprintf,%s%s: %s
at: %s
,$`2,$`(call ~describe-lnum,$`4,$`1),$`3,$`(call ~concat-vec,$`(call ~describe-line,$`4,$`1),*)),$`(call ~sprintf,%s:?: %s
,$`2,$`3))))
endef
~parse-forms-r = $(if $(filter !:P7,$(firstword $(wordlist 2,99999999,$3))),$(call ^Y,$4,$(if $(call ~eq?,$(call ^n,3,$(wordlist 2,99999999,$3)),.),,$(wordlist 2,99999999,$3)),,,,,,,,$2),$(call ~parse-forms-r,$1,$2,$(call ~parse-exp,$1,$(call ~1+,$(word 1,$3))),$(call ~conj,$4,$(wordlist 2,99999999,$3))))
~parse-subject = $(call ~parse-forms-r,$1,$`(if $`2,$`(call ~conj,$`1,$`2),$`1),$(call ~parse-exp,$1,1),)
~parse-text = $(call ~parse-subject,$(call ~penc,$1))

endef
 
define ///repl.min
# compiled from repl.scm
# Requires: core io parse compile gen num runtime
# Requires: scam-ct
# Exports: repl-file!=!1!cEDefn1,~repl-file,.,file repl-rep!=!1!cEDefn1,~repl-rep,.,text:filename repl!=!1!cEDefn1,~repl,.,!2. initial-state!=!1!cEDefn3,!2!cP0;1200;!3!cP2:1201:eval-and-print;!3!cP0:1203:!4!cP2@1204@concat:!4!cP1@1206@(declare!40*1!40&global)!n:!4!cP1@1217@(declare!40*2!40&global)!n:!4!cP0@1228@!5!cP2!401229!40foreach@!5!cP2!401231!40lib@!5!cP2!401233!40LIBS@!5!cP0!401235!40!51!cP2!501236!50concat!40!51!cP1!501238!50(require!510"!40!51!cP2!501245!50lib!40!51!cP1!501247!50"):!4!cP1@1254@!n;!3!cP0:1259:!4!cP2@1260@compile-prelude:!4!cP2@1262@nil,. read-eval-print!=!1!cEDefn1,~read-eval-print,.,state eval-and-print!=!1!cEDefn1,~eval-and-print,.,text:env describe-env!=!1!cEDefn1,~describe-env,.,env:all describe-binding!=!1!cEDefn1,~describe-binding,.,bound-name:defn:all help!=!1!cEDefn1,~help,.,!2. *2!=!1!cEDefn2,*2,. *1!=!1!cEDefn2,*1,. LIBS!=!1!cEDefn2,~LIBS,. sum!=!1!cEDefn1,~sum,inum,list sum-small!=!1!cEDefn1,~sum-small,inum,list range!=!1!cEDefn1,~range,inum,min:max 0-!=!1!cEDefn1,~0-,inum,n u-range!=!1!cEDefn1,~u-range,inum,min:max mod!=!1!cEDefn1,~mod,inum,a:b mod-9!=!1!cEDefn1,~mod-9,inum,n mod-8!=!1!cEDefn1,~mod-8,inum,n mod-5!=!1!cEDefn1,~mod-5,inum,n mod-3!=!1!cEDefn1,~mod-3,inum,n mod-2!=!1!cEDefn1,~mod-2,inum,n mod-1!=!1!cEDefn1,~mod-1,inum,n div-10!=!1!cEDefn1,~div-10,inum,n mod-10!=!1!cEDefn1,~mod-10,inum,n mod-10!=!1!cEDefn1,~mod-10,inum,n umod!=!1!cEDefn1,~umod,inum,a:b /!=!1!cEDefn1,~/,inum,a:b u/!=!1!cEDefn1,~u/,inum,a:b:?more-a longdiv!=!1!cEDefn1,~longdiv,inum,a:more-a:b longdiv-next!=!1!cEDefn1,~longdiv-next,inum,digit:remainder:more-a:b longdiv!=!1!cEDefn1,~longdiv,inum,a:more-a:b digit-range!=!1!cEDefn1,~digit-range,inum,a:b:more-a?:more-b?:at strdiv!=!1!cEDefn1,~strdiv,inum,a:b topdigits!=!1!cEDefn1,~topdigits,inum,num:at ==!=!1!cEDefn1,~==,inum,a:b <=!=!1!cEDefn1,~<=,inum,a:b >=!=!1!cEDefn1,~>=,inum,a:b <!=!1!cEDefn1,~<,inum,a:b >!=!1!cEDefn1,~>,inum,a:b ^!=!1!cEDefn1,~^,inum,a:b *!=!1!cEDefn1,~*,inum,a:b -!=!1!cEDefn1,~-,inum,a:b +!=!1!cEDefn1,~+,inum,a:b u^!=!1!cEDefn1,~u^,inum,a:b u^2!=!1!cEDefn1,~u^2,inum,n u/2!=!1!cEDefn1,~u/2,inum,n nodd!=!1!cEDefn1,~nodd,inum,n cmp!=!1!cEDefn1,~cmp,inum,a:b ucmp!=!1!cEDefn1,~ucmp,inum,a:b u-!=!1!cEDefn1,~u-,inum,a:b ndecode!=!1!cEDefn1,~ndecode,inum,n u*!=!1!cEDefn1,~u*,inum,a:b u+1!=!1!cEDefn1,~u+1,inum,a u+!=!1!cEDefn1,~u+,inum,a:b ucarry!=!1!cEDefn1,~ucarry,inum,n udecode!=!1!cEDefn1,~udecode,inum,n:sign uencode!=!1!cEDefn1,~uencode,inum,s nnorm!=!1!cEDefn1,~nnorm,inum,n sign!=!1!cEDefn1,~sign,inum,n begin-block!=!1!cEDefn1,~begin-block,igen,forms resolve!=!1!cEDefn1,~resolve,igen,form:env base-env!=!1!cEDefn2,~base-env! builtin-names!=!1!cEDefn2,~builtin-names! builtins-3!=!1!cEDefn3,!2!cP1;3843;.foreach:patsubst:.subst:wordlist,igen builtins-2!=!1!cEDefn3,!2!cP1;3819;addprefix:addsuffix:filter:filter-out:findstring:join:word,igen builtins-1!=!1!cEDefn3,!2!cP0;3759;!3!cP2:3760:concat;!3!cP1:3762:abspath@basename@dir@error@eval@firstword@flavor;!3!cP1:3778:@info@lastword@notdir@origin@realpath@shell@sort;!3!cP1:3795:@strip@suffix@value@warning@wildcard@words,igen env-rewind!=!1!cEDefn1,~env-rewind,igen,env:name env-rewind-x!=!1!cEDefn1,~env-rewind-x,igen,env:name use-module!=!1!cEDefn1,~use-module,igen,mod require-module!=!1!cEDefn1,~require-module,igen,mod:read-priv env-export!=!1!cEDefn1,~env-export,igen,env import-binding!=!1!cEDefn1,~import-binding,igen,key:defn:d-name is-private?!=!1!cEDefn1,!c,igen,defn;!3!cP0:2714:!4!cP2@2715@filter:!4!cP1@2717@b!40p!40i%:!4!cP0@2726@!5!cP2!402727!40EDefn.priv@!5!cP2!402729!40defn check-argc!=!1!cEDefn1,~check-argc,igen,expected:args:sym err-expected!=!1!cEDefn1,~err-expected,igen,types:form:parent:what:where:?arg1:?arg2 form-description!=!1!cEDefn1,~form-description,igen,code compile-warn!=!1!cEDefn1,~compile-warn,igen,form:fmt:?a:?b:?c gen-error!=!1!cEDefn1,~gen-error,igen,form:fmt:...values env-rewind-M!=!1!cEDefn1,~env-rewind-M,igen,env:name after!=!1!cEDefn1,~after,igen,item:vec gensym!=!1!cEDefn1,~gensym,igen,base:env gensym-name!=!1!cEDefn1,~gensym-name,igen,base:env:suff gen-global-name!=!1!cEDefn1,~gen-global-name,igen,local:flags il-promote!=!1!cEDefn1,~il-promote,igen,node il-demote!=!1!cEDefn1,~il-demote,igen,node il-concat!=!1!cEDefn1,~il-concat,igen,nodes il-flatten!=!1!cEDefn1,~il-flatten,igen,nodes il-merge-strings!=!1!cEDefn1,~il-merge-strings,igen,nodes:accum NoOp!=!1!cEDefn3,!2!cP0;978;!3!cP2:979:IString;!3!cP1:981:!3.,igen *compile-mods*!=!1!cEDefn2,~*compile-mods*! *compile-outfile*!=!1!cEDefn2,~*compile-outfile*! *compile-file*!=!1!cEDefn2,~*compile-file*! *compile-subject*!=!1!cEDefn2,~*compile-subject*! MacroMarkerKey!=!1!cEDefn3,!2!cP1;658;!cm,igen LambdaMarkerKey!=!1!cEDefn3,!2!cP1;644;!c,igen NoGlobalName!=!1!cEDefn3,!2!cP1;473;!c,igen EDefn.priv!=!1!cEDefn1,!c,igen,defn;!3!cP0:457:!4!cP2@458@word:!4!cP1@460@3:!4!cP2@462@defn EBuiltin!=!1!cEDefn5,S;W;S,igen,!2!cEDefn0 EFunc!=!1!cEDefn5,S;W;S,igen,!2!cEDefn1 EVar!=!1!cEDefn5,S;W,igen,!2!cEDefn2 ESMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn3 EXMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn4 ERecord!=!1!cEDefn5,S;W;S,igen,!2!cEDefn5 EIL!=!1!cEDefn5,S;W,igen,!2!cEDefn6 EArg!=!1!cEDefn5,W,igen,!2!cEDefn7 EMarker!=!1!cEDefn5,W,igen,!2!cEDefn8 IString!=!1!cEDefn5,S,igen,!2!cIL0 IVar!=!1!cEDefn5,S,igen,!2!cIL1 IBuiltin!=!1!cEDefn5,W;L,igen,!2!cIL2 ICall!=!1!cEDefn5,S;L,igen,!2!cIL3 ILocal!=!1!cEDefn5,W;W,igen,!2!cIL4 IFuncall!=!1!cEDefn5,L,igen,!2!cIL5 IConcat!=!1!cEDefn5,L,igen,!2!cIL6 IBlock!=!1!cEDefn5,L,igen,!2!cIL7 ILambda!=!1!cEDefn5,S,igen,!2!cIL8 IEnv!=!1!cEDefn5,S;L,igen,!2!cIL9 compile-file!=!1!cEDefn1,~compile-file,icompile,infile:outfile:is-boot:mod-files:reqs:uses construct-file!=!1!cEDefn1,!c,icompile,infile:env:exe:reqs:uses;!3!cP0:398:!4!cP2@399@concat:!4!cP1@401@#!40compiled!40from!40:!4!cP2@410@infile:!4!cP1@412@!n:!4!cP0@416@!5!cP2!40417!40if@!5!cP2!40419!40reqs@!5!cP0!40421!40!51!cP2!50422!50concat!40!51!cP1!50424!50#!510Requires!c!510!40!51!cP2!50432!50reqs!40!51!cP1!50434!50!n:!4!cP0@440@!5!cP2!40441!40if@!5!cP2!40443!40uses@!5!cP0!40445!40!51!cP2!50446!50concat!40!51!cP1!50448!50#!510Requires!c!510!40!51!cP2!50456!50uses!40!51!cP1!50458!50!n:!4!cP0@464@!5!cP2!40465!40env-export@!5!cP2!40467!40env:!4!cP2@470@exe compile-prelude!=!1!cEDefn1,~compile-prelude,icompile,is-boot compile-text!=!1!cEDefn1,~compile-text,icompile,text:env:infile:outfile ct-mod!=!1!cEDefn3,!2!cP1;190;scam-ct,icompile rt-mod!=!1!cEDefn3,!2!cP1;173;runtime,icompile parse-text!=!1!cEDefn1,~parse-text,iparse,text parse-subject!=!1!cEDefn1,~parse-subject,iparse,subj describe-error!=!1!cEDefn1,~describe-error,iparse,form:text:filename describe-lnum!=!1!cEDefn1,~describe-lnum,iparse,pos:subj parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos parse-list!=!1!cEDefn1,!c,iparse,subj:pos;!3!cP0:2512:!4!cP2@2513@parse-seq:!4!cP2@2515@subj:!4!cP1@2517@):!4!cP2@2521@pos:!4!cP0@2523@!5!cP2!402524!40parse-exp@!5!cP2!402526!40subj@!5!cP0!402528!40!51!cP2!502529!501+!40!51!cP2!502531!50pos:!4!cP2@2535@nil parse-exp!=!1!cEDefn1,~parse-exp,iparse,subj:pos POut-format!=!1!cEDefn1,~POut-format,iparse,value POut-form!=!1!cEDefn1,!c,iparse,st;!3!cP0:1942:!4!cP2@1943@rest:!4!cP2@1945@st POut-pos!=!1!cEDefn1,!c,iparse,st;!3!cP0:1922:!4!cP2@1923@word:!4!cP1@1925@1:!4!cP2@1927@st POut!=!1!cEDefn1,!c,iparse,pos:form;!3!cP0:1898:!4!cP2@1899@concat:!4!cP2@1901@pos:!4!cP1@1903@!40:!4!cP2@1907@form find-word!=!1!cEDefn1,~find-word,iparse,str:pos:pat pdec!=!1!cEDefn1,~pdec,iparse,text penc!=!1!cEDefn1,~penc,iparse,text format-form!=!1!cEDefn1,~format-form,iparse,form form-set-indices!=!1!cEDefn1,~form-set-indices,iparse,pos:form form-typename!=!1!cEDefn1,~form-typename,iparse,form form-index!=!1!cEDefn1,~form-index,iparse,form PList-is-empty?!=!1!cEDefn1,~PList-is-empty?,iparse,form string-value!=!1!cEDefn1,~string-value,iparse,form;!3!cP0:318:!4!cP2@319@case:!4!cP2@321@form:!4!cP0@323@!5!cP0!40324!40!51!cP2!50325!50PString!40!51!cP2!50327!50n!40!51!cP2!50329!50value@!5!cP2!40332!40value:!4!cP0@335@!5!cP2!40336!40else@!5!cP0!40338!40!51!cP2!50339!50concat!40!51!cP1!50341!50ERROR!cstring-value(!40!51!cP2!50348!50form!40!51!cP1!50350!50) symbol-to-string!=!1!cEDefn1,~symbol-to-string,iparse,form symbol-name!=!1!cEDefn1,~symbol-name,iparse,form PList!=!1!cEDefn5,W;L,iparse,!2!cP0 PString!=!1!cEDefn5,W;S,iparse,!2!cP1 PSymbol!=!1!cEDefn5,W;S,iparse,!2!cP2 PQuote!=!1!cEDefn5,W;L,iparse,!2!cP3 PQQuote!=!1!cEDefn5,W;L,iparse,!2!cP4 PUnquote!=!1!cEDefn5,W;L,iparse,!2!cP5 PSplice!=!1!cEDefn5,W;L,iparse,!2!cP6 PError!=!1!cEDefn5,W;S,iparse,!2!cP7 file-exists?!=!1!cEDefn1,~file-exists?,iio,fname read-lines!=!1!cEDefn1,~read-lines,iio,fname:?start:?end read-file!=!1!cEDefn1,~read-file,iio,fname write-file!=!1!cEDefn1,~write-file,iio,filename:data getline!=!1!cEDefn1,~getline,iio,prompt shell!1!=!1!cEDefn1,~shell!2,iio,cmd printn!=!1!cEDefn1,~printn,iio,...strings echo-command!=!1!cEDefn1,~echo-command,iio,str quote-sh-arg!=!1!cEDefn1,~quote-sh-arg,iio,arg shellc!=!1!cEDefn1,~shellc,iio,...all logshell!=!1!cEDefn1,!c,iio,cmd;!3!cP0:36:!4!cP2@37@if:!4!cP0@39@!5!cP2!4040!40filter@!5!cP1!4042!40S@!5!cP2!4046!40SCAM_DEBUG:!4!cP0@49@!5!cP2!4050!40print@!5!cP1!4052!40shell!c!50@!5!cP2!4058!40cmd;!3!cP0:62:!4!cP2@63@shell:!4!cP2@65@cmd SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
$(call ^require,io)
$(call ^require,parse)
$(call ^require,compile)
$(call ^require,gen)
$(call ^require,num)
~LIBS := core io parse escape gen0 gen1 compile num
*1 := 
*2 := 
define ~help
$(and $(info Commands:
  :q or ^D : exit REPL loop
  :        : reset input state
  :e       : show environment
  :E       : show environment (including imported entries)
  ?        : this message

Global variables in REPL:
  *1 = most recent value printed
  *2 = second most recent value
)1,$(call ~printf,LIBS = %s
,$(~LIBS)))
endef
define ~describe-binding
$(if $(or $3,$(if $(filter b p i%,$(word 3,$2)),,1)),$(if $(filter !:EDefn0,$(firstword $2)),built-in function,$(if $(filter !:EDefn1,$(firstword $2)),$(if $(call ~eq?,$(call ^n,2,$2),:),compound macro,function)$(call ~sprintf,
    (%s %s),$1,$(call ^u,$(word 1,$(call ^n,4,$2))))$(if $(wordlist 2,99999999,$(call ^n,4,$2)),$(call ~sprintf, -> %s,$(foreach f,$(wordlist 2,99999999,$(call ^n,4,$2)),$(call ~format-form,$(call ^u,$f))))),$(if $(filter !:EDefn2,$(firstword $2)),variable,$(if $(filter !:EDefn3,$(firstword $2)),symbol macro: $(call ~format-form,$(call ^n,2,$2)),$(if $(filter !:EDefn4,$(firstword $2)),executable macro,$(if $(filter !:EDefn5,$(firstword $2)),constructor,)))))))
endef
~describe-env = $(foreach w,$(call ~reverse,$(call ~hash-compact,$1)),$(call ^Y,$(call ~promote,$(subst !8,%,$(word 1,$(subst !=, ,$w)))),$(call ~describe-binding,$(call ~promote,$(subst !8,%,$(word 1,$(subst !=, ,$w)))),$(call ~nth,2,$(subst !=, ,$w)),$2),,,,,,,,$`(if $`2,$`(call ~printf,  %s : %s,$`1,$`2))))
~eval-and-print = $(call ^Y,$(call ~compile-text,$1,$2,[console],),$2,$1,,,,,,,$`(if $`(filter $`[ [,$`(if $`(filter !:P7,$`(firstword $`(call ^u,$`(word 1,$`(call ~nth,1,$`1))))),$`(call ^n,3,$`(call ^u,$`(word 1,$`(call ~nth,1,$`1)))))),$`(call ^d,$`3) $`(call ^d,$`2),$`(if $`(filter .,$`(if $`(filter !:P7,$`(firstword $`(call ^u,$`(word 1,$`(call ~nth,1,$`1))))),$`(call ^n,3,$`(call ^u,$`(word 1,$`(call ~nth,1,$`1)))))),!. $`(call ^d,$`2),$`(if $`(call ~nth,1,$`1),$`(and $`(foreach err,$`(call ~nth,1,$`1),$`(call ^d,$`(info $`(call ~describe-error,$`(call ^u,$`(err)),$`3,))))1,!. $`(call ^d,$`2)),$`(and $`(call ^Y,$`(call ^Y,,,,,,,,,,$`(call ~nth,2,$`1)),,,,,,,,,$``(if $``1,$``(and $``(call ^set,*2,$``(*1))1,$``(call ^set,*1,$``1)1,$``(info $``(call ~format,$``1)))))1,!. $`(call ^d,$`(call ~nth,3,$`1)))))))
define ~read-eval-print
$(call ^Y,$(call ~getline,$(if $(call ^u,$(word 1,$1)),+ ,> )),$(call ~nth,1,$1),$(call ~nth,2,$1),$1,,,,,,$`(if $`(call ~eq?,$`1,?
),$`(and $`(call ~help)1,$`4),$`(if $`(call ~eq?,$`1,:
),!. $`(call ^d,$`3),$`(if $`(call ~eq?,$`1,:q
),,$`(if $`(call ~eq?,$`1,),,$`(if $`(call ~eq?,$`1,:e
),$`(and $`(call ~describe-env,$`3,)1,$`4),$`(if $`(call ~eq?,$`1,:E
),$`(and $`(call ~describe-env,$`3,1)1,$`4),$`(call ~eval-and-print,$`2$`1,$`3))))))))
endef
define ~repl
$(and $(info SCAM interactive mode. Type '?' for help.)1,$(call ~while,$(value ~identity),$(value ~read-eval-print),$(call ~eval-and-print,(declare *1 &global)
(declare *2 &global)
$(foreach lib,$(~LIBS),(require "$(lib)"))
,$(call ~compile-prelude,)))1,$(info ))
endef
define ~repl-rep
$(call ^Y,$(call ~compile-text,$1,$(call ~nth,2,$(call ~eval-and-print,(declare *1 &global)
(declare *2 &global)
$(foreach lib,$(~LIBS),(require "$(lib)"))
,$(call ~compile-prelude,))),$(or $2,[commandline]),),,,,,,,,,$`(if $`(call ~nth,1,$`1),$`(and $`(foreach err,$`(call ~nth,1,$`1),$`(call ^d,$`(info $`(call ~describe-error,$`(call ^u,$`(err)),$(call ^E,$1),))))1,1),$`(info $`(call ^Y,,,,,,,,,,$`(call ~nth,2,$`1)))))
endef
~repl-file = $(call ^Y,$(call ~read-file,$1),,,,,,,,,$`(if $`1,$`(call ^Y,$`(call ~compile-text,$`1,$`(call ~compile-prelude,),$(call ^E,$1),///~),,,,,,,,,$``(if $``(call ~nth,1,$``1),$``(and $``(foreach err,$``(call ~nth,1,$``1),$``(call ^d,$``(info $``(call ~describe-error,$``(call ^u,$``(err)),$`(call ^E,$`1),$(call ^E,$1,`)))))1,1),$``(eval $``(call ~nth,2,$``1)))),$`(and $`(call ~printf,error: empty/missing file %q,$(call ^E,$1))1,1)))

endef
 
define ///runtime.min
# compiled from runtime.scm
# Exports: SCAM_MAIN!=!1!cEDefn2,SCAM_MAIN,. ^start!=!1!cEDefn1,^start,.,main-mod:main-func:args start!=!1!cEDefn1,~start,.,main-mod:main-func:args *started*!=!1!cEDefn2,*started*,. ^require!=!1!cEDefn1,^require,.,name ^required-files!=!1!cEDefn2,~^required-files,. ^add-tags!=!1!cEDefn1,^add-tags,.,str ^tags!=!1!cEDefn2,^tags,. run-hooks!=!1!cEDefn1,~run-hooks,.,event add-hook!=!1!cEDefn1,~add-hook,.,event:funcname *hooks*!=!1!cEDefn2,~*hooks*,. bound?!=!1!cEDefn1,!c,.,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,.,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,.,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,.,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,.,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,.,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,. apply!=!1!cEDefn1,~apply,.,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,.,a:b:?c set-global!=!1!cEDefn1,~set-global,.,a:b:?c nth!=!1!cEDefn1,~nth,.,a:b demote!=!1!cEDefn1,~demote,.,a promote!=!1!cEDefn1,~promote,.,a ^E!=!1!cEDefn1,^E,.,str:?pre ^fset!=!1!cEDefn1,^fset,.,name:value:retval ^set!=!1!cEDefn1,^set,.,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,.,str esc-RHS!=!1!cEDefn1,!c,p,str;!3!cP0:1194:!4!cP2@1195@subst:!4!cP1@1197@$:!4!cP1@1201@$$:!4!cP1@1206@#:!4!cP1@1210@$":!4!cP1@1215@!n:!4!cP1@1219@$':!4!cP2@1224@str ^t!=!1!cEDefn1,^t,.,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,. TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,. ^ta!=!1!cEDefn1,^ta,.,...args ^tc!=!1!cEDefn1,~^tc,.,fn:...args ^tp!=!1!cEDefn1,^tp,.,name:value ^f!=!1!cEDefn1,~^f,.,a ^apply!=!1!cEDefn1,~^apply,.,fn:...args ^av!=!1!cEDefn1,^av,.,!2. ^v!=!1!cEDefn1,^v,.,!2. ^Y!=!1!cEDefn1,^Y,.,...args ^n!=!1!cEDefn1,^n,.,n:vec ^u!=!1!cEDefn1,^u,.,str ^d!=!1!cEDefn1,^d,.,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG,. SCAM_MODS!=!1!cEDefn2,SCAM_MODS,.
SCAM_DEBUG ?=
$(if $(if $(findstring R,$(SCAM_DEBUG)),$(info runtime: $(lastword $(MAKEFILE_LIST)))),)
define \n


endef
 [ := (
 ] := )
" := \#
' := $(\n)
` := $$
& := ,

^d = $(or $(subst $  ,!0,$(subst $ 	,!+,$(subst !,!1,$1))),!.)
^u = $(subst !1,!,$(subst !+,	,$(subst !0, ,$(subst !.,,$1))))
^n = $(call ^u,$(word $1,$2))
^Y = $(call if,,,$(10))
^v = $(subst !.,!. ,$(filter-out %!,$(subst !. ,!.,$(foreach n,$(wordlist $N,9,1 2 3 4 5 6 7 8),$(call ^d,$($n)))$(if $9, $9) !)))
^av = $(foreach N,1,$(^v))
~^apply = $(call ^Y,$(call ^n,1,$2),$(call ^n,2,$2),$(call ^n,3,$2),$(call ^n,4,$2),$(call ^n,5,$2),$(call ^n,6,$2),$(call ^n,7,$2),$(call ^n,8,$2),$(wordlist 9,9999,$2),$1)
~^f = "$(subst ",\",$(subst \,\\,$1))"
^tp = $(info $1 $(call ~^f,$2))$2
~^tc = $(call $1,$2,$3,$4,$5,$6,$7,$8,$(call ^n,1,$9),$(wordlist 2,9999,$9))
^ta = $(if $(or $1,$2,$3,$4,$5,$6,$7,$8,$9), $(~^f)$(call ~^tc,^ta,$2,$3,$4,$5,$6,$7,$8,$9))
^t = $(info --> ($1$(call ~^tc,^ta,$2,$3,$4,$5,$6,$7,$8,$9)))$(call ^tp,<-- $1:,$(call ~^tc,$1,$2,$3,$4,$5,$6,$7,$8,$9))
define ~esc-LHS
$`(if ,,$(subst $],$`],$(subst $[,$`[,$(subst 
,$`',$(subst #,$`",$(subst $`,$`$`,$1))))))
endef
define ^set
$(eval $(call ~esc-LHS,$1) :=$` $(subst 
,$`',$(subst #,$`",$(subst $`,$`$`,$2))))$3
endef
define ^fset
$(and $(eval define $(call ~esc-LHS,$1)
$(subst \$ 
,\$` 
,$(subst define,$` define,$(subst endef,$` endef,$2
)))endef
)1,$3)
endef
$(if ,, ) := 
define ^E
$(subst $`,$`$2,$`(if ,,$(subst 
,$`',$(subst $[,$`[,$(subst $],$`],$(subst $`,$``,$1))))))
endef
~promote = $(call ^u,$1)
~demote = $(call ^d,$1)
~nth = $(call ^n,$1,$2)
~set-global = $(call ^set,$1,$2,$3)
~set-rglobal = $(call ^fset,$1,$2,$3)
~apply = $(call ~^apply,$1,$2)
~add-hook = $(call ^set,~*hooks*,$(~*hooks*) $1=$2)
~run-hooks = $(foreach funcname,$(patsubst $1=%,%,$(filter $1=%,$(~*hooks*))),$(call $(funcname)))
^tags := 
^add-tags = $(call ^set,^tags,$(^tags) $(filter-out $(^tags),$1))
~^required-files := ///runtime.min
^require = $(foreach ^file,$(filter-out $(~^required-files),$(or $(word 1,$(foreach f,$(SCAM_MODS),$(if $(filter $(notdir $1),$(notdir $(basename $f))),$f))),$(if $(if $(filter-out u%,$(flavor ///$(notdir $1).min)),1),///$(notdir $1).min,$1.min))),$(and $(call ^set,~^required-files,$(~^required-files) $(^file))1,$(if $(findstring R,$(SCAM_DEBUG)),$(info require: $(^file)))1,$(if $(filter ///%,$(^file)),$(eval $(value $(^file))),$(eval include $(^file)))1,$(call ~run-hooks,load)1,$(if $(findstring Rx,$(SCAM_DEBUG)),$(info exited: $(^file)))))
define ~start
$(if $(if $(*started*),,1),$(and $(call ^set,*started*,1)1,$(if $(if $(filter-out u%,$(flavor ///trace.min)),1),$(call ^require,trace))1,$(call ^require,$(notdir $1))1,$(call ^Y,$(call $2,$3),,,,,,,,,$`(eval .DEFAULT_GOAL :=
.PHONY: .scam/-exit
.scam/-exit: $`(.DEFAULT_GOAL); @exit '$`(or $`(subst ',,$`(strip $`1)),0)'$``(call ~run-hooks,exit)))))
endef
$(if $(if $(if $(if $(filter-out u%,$(flavor ^start)),1),,1),$(call ^fset,^start,$(value ~start))),)
$(if $(if $(SCAM_MAIN),$(call ~start,$(SCAM_MAIN),,)),)

endef
 
define ///scam-ct.min
# compiled from scam-ct.scm
# Requires: runtime
# Exports: unless!=!1!cEDefn4,~unless, when!=!1!cEDefn4,~when, SCAM_MAIN!=!1!cEDefn2,SCAM_MAIN! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS,i
$(call ^require,runtime)
~when = !:P0 78 !1:P2!079!0if $(word 1,$1) $(call ^d,!:P0 88 !1:P2!089!0begin $(wordlist 2,99999999,$1))
~unless = !:P0 140 !1:P2!0141!0if $(word 1,$1) !1:P2!0146!0nil $(call ^d,!:P0 148 !1:P2!0149!0begin $(wordlist 2,99999999,$1))

endef
 
define ///scam.min
# compiled from scam.scm
# Requires: core repl build getopts gen runtime
# Requires: scam-ct
# Exports: main!=!1!cEDefn1,~main,.,argv opt-err!=!1!cEDefn1,~opt-err,.,opt usage!=!1!cEDefn1,~usage,.,?fmt:...values begin-block!=!1!cEDefn1,~begin-block,igen,forms resolve!=!1!cEDefn1,~resolve,igen,form:env base-env!=!1!cEDefn2,~base-env! builtin-names!=!1!cEDefn2,~builtin-names! builtins-3!=!1!cEDefn3,!2!cP1;3843;.foreach:patsubst:.subst:wordlist,igen builtins-2!=!1!cEDefn3,!2!cP1;3819;addprefix:addsuffix:filter:filter-out:findstring:join:word,igen builtins-1!=!1!cEDefn3,!2!cP0;3759;!3!cP2:3760:concat;!3!cP1:3762:abspath@basename@dir@error@eval@firstword@flavor;!3!cP1:3778:@info@lastword@notdir@origin@realpath@shell@sort;!3!cP1:3795:@strip@suffix@value@warning@wildcard@words,igen env-rewind!=!1!cEDefn1,~env-rewind,igen,env:name env-rewind-x!=!1!cEDefn1,~env-rewind-x,igen,env:name use-module!=!1!cEDefn1,~use-module,igen,mod require-module!=!1!cEDefn1,~require-module,igen,mod:read-priv env-export!=!1!cEDefn1,~env-export,igen,env import-binding!=!1!cEDefn1,~import-binding,igen,key:defn:d-name is-private?!=!1!cEDefn1,!c,igen,defn;!3!cP0:2714:!4!cP2@2715@filter:!4!cP1@2717@b!40p!40i%:!4!cP0@2726@!5!cP2!402727!40EDefn.priv@!5!cP2!402729!40defn check-argc!=!1!cEDefn1,~check-argc,igen,expected:args:sym err-expected!=!1!cEDefn1,~err-expected,igen,types:form:parent:what:where:?arg1:?arg2 form-description!=!1!cEDefn1,~form-description,igen,code compile-warn!=!1!cEDefn1,~compile-warn,igen,form:fmt:?a:?b:?c gen-error!=!1!cEDefn1,~gen-error,igen,form:fmt:...values env-rewind-M!=!1!cEDefn1,~env-rewind-M,igen,env:name after!=!1!cEDefn1,~after,igen,item:vec gensym!=!1!cEDefn1,~gensym,igen,base:env gensym-name!=!1!cEDefn1,~gensym-name,igen,base:env:suff gen-global-name!=!1!cEDefn1,~gen-global-name,igen,local:flags il-promote!=!1!cEDefn1,~il-promote,igen,node il-demote!=!1!cEDefn1,~il-demote,igen,node il-concat!=!1!cEDefn1,~il-concat,igen,nodes il-flatten!=!1!cEDefn1,~il-flatten,igen,nodes il-merge-strings!=!1!cEDefn1,~il-merge-strings,igen,nodes:accum NoOp!=!1!cEDefn3,!2!cP0;978;!3!cP2:979:IString;!3!cP1:981:!3.,igen *compile-mods*!=!1!cEDefn2,~*compile-mods*! *compile-outfile*!=!1!cEDefn2,~*compile-outfile*! *compile-file*!=!1!cEDefn2,~*compile-file*! *compile-subject*!=!1!cEDefn2,~*compile-subject*! MacroMarkerKey!=!1!cEDefn3,!2!cP1;658;!cm,igen LambdaMarkerKey!=!1!cEDefn3,!2!cP1;644;!c,igen NoGlobalName!=!1!cEDefn3,!2!cP1;473;!c,igen EDefn.priv!=!1!cEDefn1,!c,igen,defn;!3!cP0:457:!4!cP2@458@word:!4!cP1@460@3:!4!cP2@462@defn EBuiltin!=!1!cEDefn5,S;W;S,igen,!2!cEDefn0 EFunc!=!1!cEDefn5,S;W;S,igen,!2!cEDefn1 EVar!=!1!cEDefn5,S;W,igen,!2!cEDefn2 ESMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn3 EXMacro!=!1!cEDefn5,S;W,igen,!2!cEDefn4 ERecord!=!1!cEDefn5,S;W;S,igen,!2!cEDefn5 EIL!=!1!cEDefn5,S;W,igen,!2!cEDefn6 EArg!=!1!cEDefn5,W,igen,!2!cEDefn7 EMarker!=!1!cEDefn5,W,igen,!2!cEDefn8 IString!=!1!cEDefn5,S,igen,!2!cIL0 IVar!=!1!cEDefn5,S,igen,!2!cIL1 IBuiltin!=!1!cEDefn5,W;L,igen,!2!cIL2 ICall!=!1!cEDefn5,S;L,igen,!2!cIL3 ILocal!=!1!cEDefn5,W;W,igen,!2!cIL4 IFuncall!=!1!cEDefn5,L,igen,!2!cIL5 IConcat!=!1!cEDefn5,L,igen,!2!cIL6 IBlock!=!1!cEDefn5,L,igen,!2!cIL7 ILambda!=!1!cEDefn5,S,igen,!2!cIL8 IEnv!=!1!cEDefn5,S;L,igen,!2!cIL9 getopts!=!1!cEDefn1,~getopts,igetopts,args:opts:err getopts-loop!=!1!cEDefn1,~getopts-loop,igetopts,opts0:opts1:optsN:err:args:files:ovalues build!=!1!cEDefn1,~build,ibuild,exe:files:opts prefix-of!=!1!cEDefn1,!c,ibuild,sym:name;!3!cP0:3992:!4!cP2@3993@subst:!4!cP2@3995@name:!4!cP1@3997@!4.:!4!cP0@4000@!5!cP2!404001!40global-name@!5!cP2!404003!40sym exe-rules!=!1!cEDefn1,~exe-rules,ibuild,exe:sources:no-trace:boot:keep-syms mmap-rules!=!1!cEDefn1,~mmap-rules,ibuild,mmap:runtime mmap-all-deps!=!1!cEDefn1,~mmap-all-deps,ibuild,mmap:mods mmap-all-requires!=!1!cEDefn1,~mmap-all-requires,ibuild,mmap:mods link-rule!=!1!cEDefn1,~link-rule,ibuild,exe:deps:oodeps:objects:runtime:keep-syms test-rule!=!1!cEDefn1,~test-rule,ibuild,ok-file:test-object:runtime:mod-files compile-rule!=!1!cEDefn1,~compile-rule,ibuild,object:source:deps:oodeps:mod-files:reqs:uses:is-boot rule!=!1!cEDefn1,~rule,ibuild,target:deps:oodeps:commands scan-modules!=!1!cEDefn1,~scan-modules,ibuild,env:sources:?mmap scan-deps!=!1!cEDefn1,~scan-deps,ibuild,source:object if-bundled!=!1!cEDefn1,~if-bundled,ibuild,file if-bound!=!1!cEDefn1,~if-bound,ibuild,var if-exists!=!1!cEDefn1,~if-exists,ibuild,file mmap-okfiles!=!1!cEDefn1,!c,ibuild,mmap:names;!3!cP0:1821:!4!cP2@1822@addsuffix:!4!cP1@1824@.ok:!4!cP0@1828@!5!cP2!401829!40mmap-objects@!5!cP2!401831!40mmap@!5!cP0!401833!40!51!cP2!501834!50mmap-testmods!40!51!cP2!501836!50mmap!40!51!cP2!501838!50names mmap-testmods!=!1!cEDefn1,!c,ibuild,mmap:names;!3!cP0:1787:!4!cP2@1788@foreach:!4!cP2@1790@m:!4!cP2@1792@names:!4!cP0@1794@!5!cP2!401795!40mod-testmod@!5!cP0!401797!40!51!cP2!501798!50assoc!40!51!cP2!501800!50m!40!51!cP2!501802!50mmap mmap-minfiles!=!1!cEDefn1,!c,ibuild,mmap:names;!3!cP0:1756:!4!cP2@1757@filter-out:!4!cP1@1759@///%:!4!cP0@1764@!5!cP2!401765!40mmap-objects@!5!cP2!401767!40mmap@!5!cP2!401769!40names mmap-objects!=!1!cEDefn1,!c,ibuild,mmap:names;!3!cP0:1722:!4!cP2@1723@foreach:!4!cP2@1725@m:!4!cP2@1727@names:!4!cP0@1729@!5!cP2!401730!40mod-object@!5!cP0!401732!40!51!cP2!501733!50assoc!40!51!cP2!501735!50m!40!51!cP2!501737!50mmap mmap-add!=!1!cEDefn1,!c,ibuild,mmap:modname:source:object:testmod:requires:uses:is-boot;!3!cP0:1683:!4!cP2@1684@cons:!4!cP0@1686@!5!cP2!400!40vector@!5!cP2!401687!40modname@!5!cP2!401689!40source@!5!cP2!401691!40object@!5!cP2!401693!40testmod@!5!cP2!401695!40requires@!5!cP2!401697!40uses@!5!cP2!401699!40is-boot:!4!cP2@1702@mmap mod-deps!=!1!cEDefn1,!c,ibuild,mod;!3!cP0:1642:!4!cP2@1643@promote:!4!cP0@1645@!5!cP2!401646!40wordlist@!5!cP1!401648!405@!5!cP1!401650!406@!5!cP2!401652!40mod mod-is-boot!=!1!cEDefn1,!c,ibuild,mod;!3!cP0:1622:!4!cP2@1623@nth:!4!cP1@1625@7:!4!cP2@1627@mod mod-uses!=!1!cEDefn1,!c,ibuild,mod;!3!cP0:1603:!4!cP2@1604@nth:!4!cP1@1606@6:!4!cP2@1608@mod mod-requires!=!1!cEDefn1,!c,ibuild,mod;!3!cP0:1584:!4!cP2@1585@nth:!4!cP1@1587@5:!4!cP2@1589@mod mod-testmod!=!1!cEDefn1,!c,ibuild,mod;!3!cP0:1565:!4!cP2@1566@nth:!4!cP1@1568@4:!4!cP2@1570@mod mod-object!=!1!cEDefn1,!c,ibuild,mod;!3!cP0:1546:!4!cP2@1547@nth:!4!cP1@1549@3:!4!cP2@1551@mod mod-source!=!1!cEDefn1,!c,ibuild,mod;!3!cP0:1527:!4!cP2@1528@nth:!4!cP1@1530@2:!4!cP2@1532@mod mod-name!=!1!cEDefn1,!c,ibuild,mod;!3!cP0:1508:!4!cP2@1509@nth:!4!cP1@1511@1:!4!cP2@1513@mod scan-object!=!1!cEDefn1,~scan-object,ibuild,file scan-source!=!1!cEDefn1,~scan-source,ibuild,src echo-cmd!=!1!cEDefn1,~echo-cmd,ibuild,...strs *quiet*!=!1!cEDefn2,~*quiet*! *self*!=!1!cEDefn2,~*self*! link!=!1!cEDefn1,~link,ibuild,outfile:objects:main:runtime:keep-syms epilogue!=!1!cEDefn1,!c,ibuild,main-mod:main-func:rt;!3!cP0:858:!4!cP2@859@concat:!4!cP1@861@$(eval!40$(value!40:!4!cP0@872@!5!cP2!40873!40bundle-var@!5!cP2!40875!40rt:!4!cP1@878@))!n:!4!cP1@884@$(call!40^start!a:!4!cP0@893@!5!cP2!40894!40bundle-var@!5!cP2!40896!40main-mod:!4!cP1@899@!a:!4!cP2@903@main-func:!4!cP1@905@!a$(SCAM_ARGS))!n prologue!=!1!cEDefn3,!2!cP1;828;#!3/bin/bash!n!c!b:for:v:in:"${!e//!3/!4}":!b:do:v=${v//:/@}:!b:v=${v//!2+/!3+}!b:a[++n]=${v!c-!3.}:!b:done:!b:SCAM_ARGS=${a[*]}:exec:make:--no-print-directory:-j:${SCAM_JOBS!c-9}:-f"$0"!n!n,ibuild read-object!=!1!cEDefn1,~read-object,ibuild,file bundle-var!=!1!cEDefn1,!c,ibuild,file;!3!cP0:758:!4!cP2@759@concat:!4!cP2@761@bundle-dir:!4!cP0@763@!5!cP2!40764!40notdir@!5!cP2!40766!40file bundled?!=!1!cEDefn1,!c,ibuild,path;!3!cP0:724:!4!cP2@725@filter:!4!cP0@727@!5!cP2!40728!40concat@!5!cP2!40730!40bundle-dir@!5!cP1!40732!40%:!4!cP2@737@path bundle-path!=!1!cEDefn1,!c,ibuild,source;!3!cP0:692:!4!cP2@693@concat:!4!cP2@695@bundle-dir:!4!cP0@697@!5!cP2!40698!40modnames-of@!5!cP2!40700!40source:!4!cP1@703@.min bundle-dir!=!1!cEDefn3,!2!cP1;670;///,ibuild strip-comments!=!1!cEDefn1,~strip-comments,ibuild,src skip-comments!=!1!cEDefn1,~skip-comments,ibuild,lines traverse-graph!=!1!cEDefn1,~traverse-graph,ibuild,nodes:get-children:visited-nodes dbg-print!=!1!cEDefn1,~dbg-print,ibuild,code:fmt:str resolve-mod!=!1!cEDefn1,~resolve-mod,ibuild,source:mod clean-path!=!1!cEDefn1,!c,ibuild,f;!3!cP0:298:!4!cP2@299@patsubst:!4!cP1@301@./%:!4!cP1@306@%:!4!cP0@310@!5!cP2!40311!40subst@!5!cP1!40313!40/./@!5!cP1!40317!40/@!5!cP2!40321!40f repl-file!=!1!cEDefn1,~repl-file,irepl,file repl-rep!=!1!cEDefn1,~repl-rep,irepl,text:filename repl!=!1!cEDefn1,~repl,irepl,!2. initial-state!=!1!cEDefn3,!2!cP0;1200;!3!cP2:1201:eval-and-print;!3!cP0:1203:!4!cP2@1204@concat:!4!cP1@1206@(declare!40*1!40&global)!n:!4!cP1@1217@(declare!40*2!40&global)!n:!4!cP0@1228@!5!cP2!401229!40foreach@!5!cP2!401231!40lib@!5!cP2!401233!40LIBS@!5!cP0!401235!40!51!cP2!501236!50concat!40!51!cP1!501238!50(require!510"!40!51!cP2!501245!50lib!40!51!cP1!501247!50"):!4!cP1@1254@!n;!3!cP0:1259:!4!cP2@1260@compile-prelude:!4!cP2@1262@nil,irepl read-eval-print!=!1!cEDefn1,~read-eval-print,irepl,state eval-and-print!=!1!cEDefn1,~eval-and-print,irepl,text:env describe-env!=!1!cEDefn1,~describe-env,irepl,env:all describe-binding!=!1!cEDefn1,~describe-binding,irepl,bound-name:defn:all help!=!1!cEDefn1,~help,irepl,!2. *2!=!1!cEDefn2,*2! *1!=!1!cEDefn2,*1! LIBS!=!1!cEDefn2,~LIBS! intersperse!=!1!cEDefn1,~intersperse,icore,value:vec foldr!=!1!cEDefn1,~foldr,icore,f:z:v foldl!=!1!cEDefn1,~foldl,icore,f:z:v index-of!=!1!cEDefn1,~index-of,icore,vec:item assoc!=!1!cEDefn1,!c,icore,key:vec;!3!cP0:4793:!4!cP2@4794@assoc-initial:!4!cP0@4796@!5!cP2!404797!40subst@!5!cP1!404799!40!51@!5!cP1!404803!40!511@!5!cP0!404807!40!51!cP2!500!50vector!40!51!cP2!504808!50key:!4!cP2@4812@vec assoc-vec!=!1!cEDefn1,!c,icore,key-vec:vec;!3!cP0:4760:!4!cP2@4761@assoc-initial:!4!cP0@4763@!5!cP2!400!40vector@!5!cP2!404764!40key-vec:!4!cP2@4767@vec assoc-initial!=!1!cEDefn1,~assoc-initial,icore,prefix:vec type?!=!1!cEDefn1,!c,icore,pat:struct;!3!cP0:4620:!4!cP2@4621@filter:!4!cP2@4623@pat:!4!cP0@4625@!5!cP2!404626!40word@!5!cP1!404628!401@!5!cP2!404630!40struct sort-by!=!1!cEDefn1,~sort-by,icore,key-func:values memoize!=!1!cEDefn1,~memoize,icore,funcname 1+!=!1!cEDefn1,~1+,icore,n split!=!1!cEDefn1,~split,icore,delim:str uniq!=!1!cEDefn1,~uniq,icore,vec see!=!1!cEDefn1,~see,icore,substr:str fexpect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3644:!4!cP2@3645@expect-x:!4!cP0@3647@!5!cP2!403648!40format@!5!cP2!403650!40a:!4!cP0@3653@!5!cP2!403654!40format@!5!cP2!403656!40b:!4!cP0@3659@!5!cP2!403660!40current-file-line expect!=!1!cEDefn1,!c,icore,a:b;!3!cP0:3606:!4!cP2@3607@expect-x:!4!cP2@3609@a:!4!cP2@3611@b:!4!cP0@3613@!5!cP2!403614!40current-file-line expect-x!=!1!cEDefn1,~expect-x,icore,a:b:file-line printf!=!1!cEDefn1,~printf,icore,format:...values sprintf!=!1!cEDefn1,~sprintf,icore,format:...values vsprintf!=!1!cEDefn1,~vsprintf,icore,fmt:values format!=!1!cEDefn1,~format,icore,str format-custom!=!1!cEDefn1,~format-custom,icore,str:funcs format-add!=!1!cEDefn1,~format-add,icore,func *format-funcs*!=!1!cEDefn2,~*format-funcs*! format-record!=!1!cEDefn1,~format-record,icore,record format-hash!=!1!cEDefn1,~format-hash,icore,h format!=!1!cEDefn1,~format,icore,value hash-compact!=!1!cEDefn1,~hash-compact,icore,hash:?result hash-get!=!1!cEDefn1,~hash-get,icore,key:hash:?default hash-find!=!1!cEDefn1,~hash-find,icore,key:hash hash-value!=!1!cEDefn1,~hash-value,icore,entry;!3!cP0:1914:!4!cP2@1915@nth:!4!cP1@1917@2:!4!cP0@1919@!5!cP2!401920!40subst@!5!cP1!401922!40!51=@!5!cP1!401926!40!50@!5!cP2!401930!40entry hash-key!=!1!cEDefn1,~hash-key,icore,entry;!3!cP0:1865:!4!cP2@1866@promote:!4!cP0@1868@!5!cP2!401869!40subst@!5!cP1!401871!40!518@!5!cP1!401875!40%@!5!cP0!401879!40!51!cP2!501880!50word!40!51!cP1!501882!501!40!51!cP0!501884!50!511!cP2!5101885!510subst!50!511!cP1!5101887!510!5111=!50!511!cP1!5101891!510!5110!50!511!cP2!5101895!510entry hash-bind!=!1!cEDefn1,~hash-bind,icore,key:val:?hash append!=!1!cEDefn1,~append,icore,?a:?b:?c:?d:?e:?f:?g:?h:...others numeric?!=!1!cEDefn1,~numeric?,icore,s while!=!1!cEDefn1,~while,icore,pred:do:initial reverse!=!1!cEDefn1,~reverse,icore,list indices!=!1!cEDefn1,~indices,icore,list;!3!cP0:565:!4!cP2@566@indicesX:!4!cP2@568@list:!4!cP1@570@1 indicesX!=!1!cEDefn1,~indicesX,icore,in:out vec-or!=!1!cEDefn1,~vec-or,icore,vec;!3!cP0:475:!4!cP2@476@first:!4!cP0@478@!5!cP2!40479!40filter-out@!5!cP0!40481!40!51!cP2!500!50vector!40!51!cP1!50482!50!51.@!5!cP2!40486!40vec select-words!=!1!cEDefn1,~select-words,icore,fn:list select-vec!=!1!cEDefn1,~select-vec,icore,fn:list map-call!=!1!cEDefn1,~map-call,icore,funcname:vec butlast!=!1!cEDefn1,~butlast,icore,vec strip-vec!=!1!cEDefn1,~strip-vec,icore,vec;!3!cP0:288:!4!cP2@289@filter:!4!cP1@291@%:!4!cP2@295@vec last!=!1!cEDefn1,~last,icore,vec;!3!cP0:250:!4!cP2@251@promote:!4!cP0@253@!5!cP2!40254!40lastword@!5!cP2!40256!40vec conj!=!1!cEDefn1,~conj,icore,vec:item cons!=!1!cEDefn1,~cons,icore,item:vec concat-vec!=!1!cEDefn1,~concat-vec,icore,vec:?delim xor!=!1!cEDefn1,~xor,icore,a:b identity!=!1!cEDefn1,~identity,icore,a;!3!cP2:91:a eq?!=!1!cEDefn1,~eq?,icore,a:b SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
$(call ^require,core)
$(call ^require,repl)
$(call ^require,build)
$(call ^require,getopts)
$(call ^require,gen)
define ~usage
$(and $(if $1,$(info scam: $(call ~vsprintf,$1,$(foreach N,2,$(^v)))))1,$(info Usage:

    scam [-i]              : enter interactive mode
    scam -o EXE FILE...    : build an executable from SRC
    scam -e EXPR           : eval and print value of expression
    scam -r MAK            : load and execute executable file MAK
    scam [-x] FILE ARG...  : compile and execute FILE

Options:

  --no-trace : Omit tracing functionality.  This will produce a slightly
               smaller executable.
)1,$(if $1,1))
endef
~opt-err = $(call ~usage,Unrecognized command option '%s',$1)
~main = $(call ^Y,$(call ~getopts,$1,-e= -h -i -r= -o= --symbols --boot --no-trace -x=...,$(value ~opt-err)),,,,,,,,,$`(if $`(call ~hash-get,o,$`(call ~nth,2,$`1)),$`(call ~build,$`(call ~hash-get,o,$`(call ~nth,2,$`1)),$`(call ~nth,1,$`1),$`(call ~nth,2,$`1)),$`(if $`(call ~hash-get,h,$`(call ~nth,2,$`1)),$`(call ~usage),$`(if $`(call ~hash-get,e,$`(call ~nth,2,$`1)),$`(call ~repl-rep,$`(call ~hash-get,e,$`(call ~nth,2,$`1)),),$`(if $`(call ~hash-get,r,$`(call ~nth,2,$`1)),$`(eval include $`(call ~hash-get,r,$`(call ~nth,2,$`1))),$`(if $`(or $`(call ~hash-get,x,$`(call ~nth,2,$`1)),$`(call ~nth,1,$`1)),$`(if $`(call ~eq?,$`(call ~gen-global-name,main,),~main),$`(and $`(info scam: -x not supported; namespace collision)1,1),$`(and $`(call ~repl-file,$`(call ^u,$`(word 1,$`(or $`(call ~hash-get,x,$`(call ~nth,2,$`1)),$`(call ~nth,1,$`1)))))1,$`(call ~run-hooks,load)1,$`(call $`(call ~gen-global-name,main,),$`(wordlist 2,99999999,$`(or $`(call ~hash-get,x,$`(call ~nth,2,$`1)),$`(call ~nth,1,$`1)))))),$`(call ~repl)))))))

endef
 
define ///trace.min
# compiled from trace.scm
# Requires: runtime
# Requires: scam-ct
# Exports: trace!=!1!cEDefn1,~trace,.,spec trace-dump!=!1!cEDefn1,~trace-dump,.,!2. trace-rev!=!1!cEDefn1,~trace-rev,.,lst trace-check!=!1!cEDefn1,~trace-check,.,!2. *traces-active*!=!1!cEDefn2,~*traces-active*,. trace-instrument!=!1!cEDefn1,~trace-instrument,.,action:name:defn trace-match-funcs!=!1!cEDefn1,~trace-match-funcs,.,pat trace-info!=!1!cEDefn1,~trace-info,.,str:?a:?b:?c:?d trace-repeater!=!1!cEDefn1,~trace-repeater,.,fname:reps:recur list-of!=!1!cEDefn1,~list-of,.,n:?lst trace-n2a!=!1!cEDefn1,~trace-n2a,.,count trace-digits!=!1!cEDefn1,~trace-digits,.,k *traces*!=!1!cEDefn2,~*traces*,. variables!=!1!cEDefn3,!2!cP0;489;!3!cP2:490:filter-out;!3!cP2:492:*trace-ignore-vars*;!3!cP0:494:!4!cP2@495@subst:!4!cP1@497@%:!4!cP1@501@():!4!cP2@506@.VARIABLES,. *trace-ignore-vars*!=!1!cEDefn2,~*trace-ignore-vars*,. .VARIABLES!=!1!cEDefn2,.VARIABLES,. SCAM_PRE!=!1!cEDefn2,SCAM_PRE,. SCAM_TRACE!=!1!cEDefn2,SCAM_TRACE,. ^start!=!1!cEDefn1,^start,iruntime,main-mod:main-func:args start!=!1!cEDefn1,~start,iruntime,main-mod:main-func:args *started*!=!1!cEDefn2,*started*! ^require!=!1!cEDefn1,^require,iruntime,name ^required-files!=!1!cEDefn2,~^required-files! ^add-tags!=!1!cEDefn1,^add-tags,iruntime,str ^tags!=!1!cEDefn2,^tags! run-hooks!=!1!cEDefn1,~run-hooks,iruntime,event add-hook!=!1!cEDefn1,~add-hook,iruntime,event:funcname *hooks*!=!1!cEDefn2,~*hooks*! bound?!=!1!cEDefn1,!c,iruntime,var;!3!cP0:1933:!4!cP2@1934@if:!4!cP0@1936@!5!cP2!401937!40filter-out@!5!cP1!401939!40u%@!5!cP0!401944!40!51!cP2!501945!50flavor!40!51!cP2!501947!50var:!4!cP1@1951@1 rrest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1887:!4!cP2@1888@nth-rest:!4!cP1@1890@3:!4!cP2@1892@vec rest!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1867:!4!cP2@1868@nth-rest:!4!cP1@1870@2:!4!cP2@1872@vec first!=!1!cEDefn1,!c,iruntime,vec;!3!cP0:1843:!4!cP2@1844@^u:!4!cP0@1846@!5!cP2!401847!40word@!5!cP1!401849!401@!5!cP2!401851!40vec nth-rest!=!1!cEDefn1,!c,iruntime,n:vec;!3!cP0:1821:!4!cP2@1822@wordlist:!4!cP2@1824@n:!4!cP1@1826@99999999:!4!cP2@1828@vec not!=!1!cEDefn1,!c,iruntime,v;!3!cP0:1793:!4!cP2@1794@if:!4!cP2@1796@v:!4!cP2@1798@nil:!4!cP1@1800@1 nil!=!1!cEDefn3,!2!cP1;1778;!2.,iruntime apply!=!1!cEDefn1,~apply,iruntime,a:b set-rglobal!=!1!cEDefn1,~set-rglobal,iruntime,a:b:?c set-global!=!1!cEDefn1,~set-global,iruntime,a:b:?c nth!=!1!cEDefn1,~nth,iruntime,a:b demote!=!1!cEDefn1,~demote,iruntime,a promote!=!1!cEDefn1,~promote,iruntime,a ^E!=!1!cEDefn1,^E,iruntime,str:?pre ^fset!=!1!cEDefn1,^fset,iruntime,name:value:retval ^set!=!1!cEDefn1,^set,iruntime,name:value:?retval esc-LHS!=!1!cEDefn1,~esc-LHS,iruntime,str ^t!=!1!cEDefn1,^t,iruntime,!2. F!=!1!cEDefn3,!2!cP0;946;!3!cP2:947:global-name;!3!cP2:949:^f,iruntime TC!=!1!cEDefn3,!2!cP0;933;!3!cP2:934:global-name;!3!cP2:936:^tc,iruntime ^ta!=!1!cEDefn1,^ta,iruntime,...args ^tc!=!1!cEDefn1,~^tc,iruntime,fn:...args ^tp!=!1!cEDefn1,^tp,iruntime,name:value ^f!=!1!cEDefn1,~^f,iruntime,a ^apply!=!1!cEDefn1,~^apply,iruntime,fn:...args ^av!=!1!cEDefn1,^av,iruntime,!2. ^v!=!1!cEDefn1,^v,iruntime,!2. ^Y!=!1!cEDefn1,^Y,iruntime,...args ^n!=!1!cEDefn1,^n,iruntime,n:vec ^u!=!1!cEDefn1,^u,iruntime,str ^d!=!1!cEDefn1,^d,iruntime,str SCAM_DEBUG!=!1!cEDefn2,SCAM_DEBUG! SCAM_MODS!=!1!cEDefn2,SCAM_MODS! unless!=!1!cEDefn4,~unless! when!=!1!cEDefn4,~when,i
~*trace-ignore-vars* := 
~*traces* := 
override SCAM_PRE := $(value SCAM_PRE)
^K = $(eval ^K_$0:=$(subst ioooooooooo,oi,$(^K_$0:o%=io%)o))
~trace-digits = $(if $(if $(findstring i,$1),,1),$(call ~trace-digits,i$1),$(if $(findstring ioooooooooo,$1),$(call ~trace-digits,$(subst ioooooooooo,oi,$1)),$(subst $  ,,$(wordlist $(words $(subst i, i,$1)),99,. . . . . . . . $(foreach d,$(subst i, i,$1),$(words $(subst i,,$(subst o, o,$d))))))))
~trace-n2a = $(if $(if $(filter i%,$1),,1),$(call ~trace-n2a,i$1),$(if $(findstring ioooooooooo,$1),$(call ~trace-n2a,$(subst ioooooooooo,oi,$1)),$(subst 10,A,$(words $(subst i, i,$1)))!0$(subst $  ,,$(foreach d,$(subst i, i,$1),$(words $(subst i,,$(subst o, o,$d)))))))
~list-of = $(if $(word $1,$2),$2,$(call ~list-of,$1,$2 x))
~trace-repeater = $(subst NAME,$1,$(subst N-1,$(wordlist 2,99999999,$(call ~list-of,$(or $2,11))),$(if $3,$`(if $`(^X),$`(call if,,,$`(value NAME)),$`(if $`(foreach ^X,N-1,$`(if $`(NAME),)),)$`(foreach ^X,0,$`(NAME))),$`(NAME)$`(if $`(foreach ^xx,N-1,$`(NAME)),))))
~trace-info = $(info TRACE: $1$2$3$4$5)
~trace-match-funcs = $(foreach v,$(if $(findstring %,$1),$(filter $1,$(filter-out $(~*trace-ignore-vars*),$(subst %,(),$(.VARIABLES)))),$1),$(if $(filter recur%,$(flavor $v)),$v))
~trace-instrument = $(if $(filter v,$1),$(and $(call ~trace-info,$2, [,$(flavor $2),] = ,$(value $2))1,$3),$(if $(filter c,$1),$`(^K)$3,$(if $(filter x% X%,$1),$(and $(call ~set-rglobal,$2~0~,$3)1,$(call ~trace-repeater,$2~0~,$(patsubst x%,%,$(subst X,x,$1)),$(filter X%,$1))),$(if $(filter p,$1),$(or $(SCAM_PRE),$(call ~trace-info,SCAM_PRE undefined; needed for ,$2,:p))$3,$(if $(filter t,$1),$(subst CODE,$3,$`(info --> ($`0$`(^ta)))$`(call ^tp,<-- $`0:,CODE)),$(and $(call ~trace-info,Unknown action: ',$1,')1,$3))))))
~*traces-active* := 
~trace-check = $(call ^set,~*traces-active*,$(strip $(~*traces-active*) $(foreach w,$(~*traces*),$(foreach name,$(call ~trace-match-funcs,$(firstword $(subst :, % ,$w))),$(foreach action,$(or $(wordlist 2,99999999,$(subst :, ,.$w)),t),$(if $(if $(filter $(name):$(patsubst x%,x,$(subst X,x,$(action))),$(~*traces-active*)),,1),$(and $(call ~set-rglobal,$(name),$(call ~trace-instrument,$(action),$(name),$(value $(name))))1,$(name):$(patsubst x%,x,$(subst X,x,$(action))))))))))
~trace-rev = $(if $1,$(call ~trace-rev,$(wordlist 2,99999999,$1)) $(firstword $1))
~trace-dump = $(and $(foreach s,$(foreach s,$(~*traces*),$(word 1,$(subst :, ,$s))),$(if $(if $(filter $s,$(foreach s,$(~*traces-active*),$(word 1,$(subst :, ,$s)))),,1),$(call ~trace-info,spec ',$s,' did not match any functions.)))1,$(if $(filter %c,$(~*traces-active*)),$(and $(call ~trace-info,function invocations)1,$(foreach r,$(call ~trace-rev,$(sort $(foreach V,$(filter ^K_%,$(.VARIABLES)),$(call ~trace-digits,$(value $V))$(patsubst ^K_%,::%,$V)))),$(call ~trace-info,$(subst ., ,$(word 1,$(subst ::, ,$r))), : ,$(word 2,$(subst ::, ,$r)))))))
~trace = $(and $(call ^set,~*traces*,$(~*traces*) $1)1,$(call ~trace-check))
~*trace-ignore-vars* := $(filter-out $(~*trace-ignore-vars*),$(subst %,(),$(.VARIABLES)))
$(if $(call ~trace,$(SCAM_TRACE)),)
$(if $(call ~add-hook,load,~trace-check),)
$(if $(call ~add-hook,exit,~trace-dump),)

endef
$(eval $(value ///runtime.min))
$(call ^start,///scam,~main,$(SCAM_ARGS))
