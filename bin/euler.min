# compiled from examples/euler.scm
# Requires: core num runtime
# Requires: scam-ct
# Exports: ep1b|ep1b sum-multiples|sum-multiples round-up|round-up sum-seq|sum-seq ep1a|ep1a isX3or5|isX3or5 time|time get-time|get-time sum|~sum! sum-small|~sum-small! range|~range! 0-|~0-! u-range|~u-range! mod|~mod! mod-9|~mod-9! mod-5|~mod-5! mod-3|~mod-3! mod-2|~mod-2! mod-1|~mod-1! div-10|~div-10! mod-10|~mod-10! mod-10|~mod-10! umod|~umod! /|~/! u/|~u/! longdiv|~longdiv! longdiv-next|~longdiv-next! longdiv|~longdiv! digit-range|~digit-range! strdiv|~strdiv! topdigits|~topdigits! ==|~==! <=|~<=! >=|~>=! <|~<! >|~>! ^|~^! *|~*! -|~-! +|~+! u^|~u^! u^2|~u^2! u/2|~u/2! nodd|~nodd! cmp|~cmp! ucmp|~ucmp! u-|~u-! ndecode|~ndecode! u*|~u*! u+1|~u+1! u+|~u+! ucarry|~ucarry! udecode|~udecode! uencode|~uencode! nnorm|~nnorm! sign|~sign! assoc|#,icore,key:vec;L.3996:S.3997@assoc-initial:L.3999@S.4000!40subst@Q.4002!40!51@Q.4006!40!511@L.4010!40S!50vector!40S.4011!50key:S.4015@vec assoc-vec|#,icore,key-vec:vec;L.3963:S.3964@assoc-initial:L.3966@S!40vector@S.3967!40key-vec:S.3970@vec assoc-initial|~assoc-initial! type?|#,icore,pat:struct;L.3823:S.3824@filter:S.3826@pat:L.3828@S.3829!40word@Q.3831!401@S.3833!40struct sort-by|~sort-by! memoize|~memoize! 1+|~1+! split|~split! uniq|~uniq! see|~see! expect|#,icore,o:i;L.2861:S.2862@expect-x:S.2864@o:S.2866@i:L.2868@S.2869!40current-file-line expect-x|~expect-x! printf|~printf! sprintf|~sprintf! vsprintf|~vsprintf! format|~format! hash-compact|~hash-compact! hash-get|~hash-get! hash-find|~hash-find! hash-value|~hash-value,icore,entry;L.1895:S.1896@nth:Q.1898@2:L.1900@S.1901!40subst@Q.1903!40!51=@Q.1907!40!50@S.1911!40entry hash-key|~hash-key,icore,entry;L.1846:S.1847@promote:L.1849@S.1850!40subst@Q.1852!40!518@Q.1856!40%@L.1860!40S.1861!50word!40Q.1863!501!40L.1865!50S.1866!510subst!50Q.1868!510!5111=!50Q.1872!510!5110!50S.1876!510entry hash-bind|~hash-bind! append|~append! isnumber|~isnumber! while|~while! reverse|~reverse! indices|~indices,icore,list;L.527:S.528@indicesX:S.530@list:Q.532@.:Q.536@1 indicesX|~indicesX! vec-or|~vec-or,icore,vec;L.437:S.438@first:L.440@S.441!40filter-out@L.443!40S!50vector!40Q.444!50!51.@S.448!40vec select-words|~select-words! select-vec|~select-vec! map-call|~map-call! butlast|~butlast! last|~last,icore,vec;L.250:S.251@promote:L.253@S.254!40lastword@S.256!40vec conj|~conj! cons|~cons! concat-vec|~concat-vec! xor|~xor! identity|~identity,icore,a;S.91:a eq|~eq! SCAM_DEBUG!VSCAM_DEBUG! ^start|^start! start|~start! *started*!V*started*! ^require|^require! ^required-files!V~^required-files! run-hooks|~run-hooks! add-hook|~add-hook! *hooks*!V~*hooks*! bound?|#,iruntime,var;L.1841:S.1842@if:L.1844@S.1845!40filter-out@Q.1847!40u%@L.1851!40S.1852!50flavor!40S.1854!50var:Q.1858@1 rrest|#,iruntime,vec;L.1795:S.1796@nth-rest:Q.1798@3:S.1800@vec rest|#,iruntime,vec;L.1775:S.1776@nth-rest:Q.1778@2:S.1780@vec first|#,iruntime,vec;L.1751:S.1752@^u:L.1754@S.1755!40word@Q.1757!401@S.1759!40vec nth-rest|#,iruntime,n:vec;L.1729:S.1730@wordlist:S.1732@n:Q.1734@99999999:S.1736@vec not|#,iruntime,v;L.1701:S.1702@if:S.1704@v:S.1706@nil:Q.1708@1 nil!=M,Q.1686;!2.,iruntime apply|~apply! set-rglobal|~set-rglobal! set-global|~set-global! nth|~nth! demote|~demote! promote|~promote! ^e|^e! ^ed|~^ed! ^es|~^es! ^fset|^fset! ^set|^set! esc-LHS|~esc-LHS! ^t|^t! F!=M,L.830;S.831:global-name;S.833:^f,iruntime TC!=M,L.817;S.818:global-name;S.820:^tc,iruntime ^ta|^ta! ^tc|~^tc! ^tp|^tp! ^f|~^f! ^apply|~^apply! ^av|^av! ^Y|^Y! ^n|^n! ^u|^u! ^d|^d! SCAM_DEBUG!VSCAM_DEBUG! SCAM_MODS!VSCAM_MODS! unless!=X,~unless! when!=X,~when,i
$(call ^require,core)
$(call ^require,num)
get-time = $(shell date +%s)
time = $(call ^Y,$(call get-time),$(call ^Y,,,,,,,,,,$2),,,,,,,,$$(and $$(info $(call ^e,$1): $$(call ~-,$$(call get-time),$$1)s)1,$$2))
isX3or5 = $(or $(call ~eq,0,$(call ~mod,$1,3)),$(call ~eq,0,$(call ~mod,$1,5)))
ep1a = $(call ~sum,$(call ~select-words,$(value isX3or5),$(call ~range,$1,$2)))
$(if $(call ~expect-x,23,$(call ep1a,1,9),examples/euler.scm:32),)
sum-seq = $(call ~+,$(call ~*,$1,$3),$(call ~*,$2,$(call ~/,$(call ~*,$3,$(call ~-,$3,1)),2)))
$(if $(call ~expect-x,6,$(call sum-seq,1,1,3),examples/euler.scm:46),)
$(if $(call ~expect-x,7,$(call sum-seq,2,3,2),examples/euler.scm:47),)
$(if $(call ~expect-x,0,$(call sum-seq,2,3,0),examples/euler.scm:48),)
round-up = $(call ~+,$1,$(call ~-,$2,$(call ~1+,$(call ~mod,$(call ~-,$1,1),$2))))
$(if $(call ~expect-x,14,$(call round-up,11,7),examples/euler.scm:54),)
sum-multiples = $(call ^Y,$(call round-up,$1,$3),$(call round-up,$(call ~1+,$2),$3),,,,,,,,$$(call sum-seq,$$1,$(call ^e,$3),$$(call ~/,$$(call ~-,$$2,$$1),$(call ^e,$3))))
$(if $(call ~expect-x,6,$(call sum-multiples,1,3,1),examples/euler.scm:62),)
$(if $(call ~expect-x,18,$(call sum-multiples,1,10,3),examples/euler.scm:63),)
ep1b = $(call ~-,$(call ~+,$(call sum-multiples,$1,$2,3),$(call sum-multiples,$1,$2,5)),$(call sum-multiples,$1,$2,15))
$(if $(call ~expect-x,23,$(call ep1b,1,9),examples/euler.scm:71),)
$(if $(call ~expect-x,233168,$(call ep1b,1,999),examples/euler.scm:72),)
$(if $(call ~expect-x,233333333333166666666668,$(call ep1b,1,999999999999),examples/euler.scm:73),)
